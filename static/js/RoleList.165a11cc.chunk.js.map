{"version":3,"sources":["../node_modules/office-ui-fabric-react/node_modules/tslib/tslib.es6.js","components/BaseButton/PrimaryButton.js","components/BaseButton/DefaultButton.js","components/BaseButton/IconButton.js","components/BaseButton/SplitButton.js","components/BaseModal/index.js","../../src/common/DirectionalHint.ts","common/commonStyles.js","components/BaseMuiDropdown/index.js","components/BaseMuiInput/BaseTextField.js","../../src/dom/getParent.ts","../../src/dom/getVirtualParent.ts","../../src/dom/isVirtualElement.ts","components/ConfirmModal/index.js","components/BaseMuiAutocomplete/index.js","components/BaseMuiPaper/index.js","../../src/customizations/CustomizerContext.ts","../../src/object.ts","../../src/components/Image/Image.types.ts","../../src/components/Icon/Icon.styles.ts","../../src/dom/findElementRecursive.ts","../../src/components/Button/BaseButton.styles.ts","../../src/components/ContextualMenu/ContextualMenu.types.ts","../../src/utilities/contextualMenu/contextualMenuUtility.ts","../../src/components/ContextualMenu/ContextualMenuItem.base.tsx","../../src/components/Divider/VerticalDivider.classNames.ts","../../src/components/ContextualMenu/ContextualMenu.cnstyles.ts","../../src/components/ContextualMenu/ContextualMenu.classNames.ts","../../src/components/ContextualMenu/ContextualMenuItem.ts","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.tsx","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.tsx","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.tsx","../../src/components/Divider/VerticalDivider.base.tsx","../../src/components/Divider/VerticalDivider.tsx","../../src/components/Divider/VerticalDivider.styles.ts","../../src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuSplitButton.tsx","../../src/components/ContextualMenu/ContextualMenu.base.tsx","../../src/components/ContextualMenu/ContextualMenu.tsx","../../src/components/ContextualMenu/ContextualMenu.styles.ts","../../src/components/Button/BaseButton.classNames.ts","../../src/components/Button/SplitButton/SplitButton.classNames.ts","../../src/components/Button/BaseButton.tsx","components/BreadCrumbs/index.js","components/BreadCrumbs/index.module.scss","../../src/utilities/decorators/withResponsiveMode.tsx","../../src/EventGroup.ts","../../src/components/Button/SplitButton/SplitButton.styles.ts","../../src/hoist.ts","../../src/utilities/decorators/BaseDecorator.ts","../../src/appendFunction.ts","../../src/extendComponent.ts","../../src/components/Icon/FontIcon.tsx","../../src/components/FocusZone/FocusZone.types.ts","../../src/dom/elementContains.ts","../../src/Async.ts","../../src/hoistStatics.ts","../../src/utilities/positioning/positioning.types.ts","../../src/dom/setPortalAttribute.ts","../../src/components/Image/Image.base.tsx","../../src/components/Image/Image.styles.ts","../../src/components/Image/Image.tsx","../../src/styled.tsx","../../src/classNamesFunction.ts","../../src/properties.ts","../../src/css.ts","../../src/osDetector.ts","../../src/mobileDetector.ts","../../src/components/Popup/Popup.tsx","../../src/dom/on.ts","../../src/scroll.ts","../../src/customizations/customizable.tsx","../../src/initializeComponentRef.ts","../../src/dom/portalContainsElement.ts","../../src/array.ts","../../src/aria.ts","../../src/DelayedRender.tsx","../../src/components/Fabric/Fabric.styles.ts","../../src/components/Fabric/Fabric.base.tsx","../../src/components/Fabric/Fabric.tsx","../../src/components/Layer/Layer.notification.ts","../../src/components/Layer/Layer.base.tsx","../../src/dom/setVirtualParent.ts","../../src/components/Layer/Layer.styles.ts","../../src/components/Layer/Layer.tsx","../../src/Rectangle.ts","../../src/utilities/positioning/positioning.ts","../../src/components/Callout/CalloutContent.base.tsx","../../src/components/Callout/CalloutContent.styles.ts","../../src/components/Callout/CalloutContent.tsx","../../src/components/Callout/Callout.tsx","../../src/BaseComponent.ts","../../src/initializeDir.ts","../../src/components/MessageBar/MessageBar.types.ts","../../src/components/MessageBar/MessageBar.base.tsx","../../src/components/MessageBar/MessageBar.styles.ts","../../src/components/MessageBar/MessageBar.tsx","components/ErrorMessageBar/index.js","../../src/utilities/keytips/KeytipConstants.ts","../../src/utilities/keytips/KeytipManager.ts","../../src/utilities/keytips/KeytipUtils.ts","../../src/components/KeytipData/KeytipData.tsx","../../src/components/Icon/Icon.types.ts","../../src/components/Icon/Icon.base.tsx","../../src/components/Icon/Icon.tsx","../../src/rtl.ts","../../src/sessionStorage.ts","../../src/focus.ts","../../src/dom/elementContainsAttribute.ts","../../src/dom/raiseClick.ts","../../src/components/FocusZone/FocusZone.tsx","../../src/components/Button/IconButton/IconButton.styles.ts","../../src/components/Button/IconButton/IconButton.tsx","views/RoleList/index.module.scss","../node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","views/RoleList/fakeData.js","views/RoleList/Context.js","views/RoleList/components/CreateModal.js","views/RoleList/components/EditModal.js","views/RoleList/Filter.js","views/RoleList/Ordering.js","views/RoleList/index.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","useStyles","makeStyles","theme","root","backgroundColor","palette","customColor","themePrimary","fontSize","padding","maxHeight","themePrimaryHover","background","themeDisablePrimaryBackground","color","themeDisablePrimaryColor","text","white","PrimaryButton","children","classNameProps","props","classes","Button","className","btnRootClass","border","themeDefaultBorderColor","fontWeight","black","boxShadow","themeDefaultBackgroundFocus","themeDefaultBackgroundHover","DefaultButton","cursor","transform","transition","IconButton","btnGroupRoot","minHeight","btnFocusColor","btnLabel","btnRootRightClass","borderLeft","menuPaper","width","menuItem","display","alignContent","menuIcon","marginRight","justifyContent","SplitButton","onClick","startIcon","options","ButtonGroupProps","classNameObj","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","ButtonGroup","btnGroup","disableElevation","ref","variant","left","undefined","right","disabled","prevOpen","size","Popper","anchorEl","popper","role","style","zIndex","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","map","option","MenuItem","handleItemclick","icon","menuLabel","label","id","commonStyle","paper","position","borderRadius","shadows","spacing","modalTitleBlock","modalTitle","subTitle","BaseModal","isOpen","onClose","title","isCloseIcon","modalWidth","classesNameObj","flex_center","modal","modalContainer","alignItems","container","direction","justify","item","flex_align_center","justify_between","modalGridContainer","modalSubTitle","DirectionalHint","topLeftEdge","topCenter","topRightEdge","topAutoEdge","bottomLeftEdge","bottomCenter","bottomRightEdge","bottomAutoEdge","leftTopEdge","leftCenter","leftBottomEdge","rightTopEdge","rightCenter","rightBottomEdge","largeAlpha","bp","w_full","w_screen","w_auto","h_full","height","h_screen","h_auto","h_30","col_3","maxWidth","minWidth","col_4","col_6","breakpoints","down","w_ctrl90","flex","w_ctrl_left90","d_flex","d_inflex","d_block","d_inblock","d_none","flex_left","flex_right","flex_justify_start","flex_justify_between","flex_justify_center","flex_justify_end","flex_align_start","justify_around","justify_center","alignItemsCenter","directionColumn","flexDirection","directionRow","flex_wrap","flexWrap","m_0","margin","my_0","marginTop","marginBottom","mx_0","marginLeft","mt_0","mt_8","mt_10","mt_16","mt_20","mt_30","ml_10","ml_20","mr_10","mr_16","mr_20","mr_auto","mb_0","mb_6","mb_10","mb_16","mb_20","mb_24","mb_40","p_0","p_8","p_20","pt_20","paddingTop","py_5","paddingBottom","px_0","paddingLeft","paddingRight","pb_0","pb_10","border_TL_Radius_0","borderTopLeftRadius","border_TR_Radius_0","borderTopRightRadius","border_BL_Radius_0","borderBottomLeftRadius","border_BR_Radius_0","borderBottomRightRadius","borderRadius_4","border_none","black_100","black_60","textRed","textYellow","textOrange","textGreen","textBlue","textAqua","textPurple","scrollable_y","overflowY","fz_12","fz_14","fz_16","viewBtn","viewIcon","pageContainer","rowRadioGroup","rowRadioGroupLabel","radioRoot","checkboxRoot","defaultInput","unlimitWidthInput","unlimitWidthSelect","top","ctrlBarDatePicker","trans","tabs","defaultTextField","formControl","select","selectIcon","labelChange","labelChangeHasValue","textcolor","BaseDropdown","list","value","valueOrigin","onChange","onRenderOption","multiple","selectProps","inputLabelProps","onChangeChecked","clsx","htmlFor","displayEmpty","labelId","renderValue","selected","join","itemType","optionkey","type","disableSticky","checked","defaultChecked","defaultOptions","BaseTextField","child","allowVirtualParents","parent","element","_virtual","getVirtualParent","parentNode","marginRight10","ConfirmModal","content","onConfirm","confrimText","useTranslation","whiteSpace","wordBreak","BaseAutocomplete","placeholder","textFieldProps","disableClearable","freeSolo","renderInput","params","InputProps","pagination","BasePaper","columns","setPage","page","setRowsPerPage","rowsPerPage","labelRowsPerPage","rowsPerPageOptions","rowsPerPageOptionsRemoveAll","rows","PaperStyle","TableContainerStyle","exceptionActionGivenTotalCount","ordering","selectionMode","itemCheckedChange","itemCheckedAllChange","itemCheckedProps","itemCheckedData","itemChecked","getKey","isLoading","onChangePage","onChangeRowsPerPage","defaultColumns","newColumns","unshift","selectedModeColumns","result","onTableCellRender","row","inputProps","format","isArray","extractCellStyle","field","cellStyle","th","td","elevation","square","table","stickyHeader","tableLayout","textAlign","slice","thStyle","onColumnClick","active","descending","tbody","index","tdStyle","returnTdCell","component","count","labelDisplayedRows","from","to","newPageIndex","CustomizerContext","customizations","inCustomizerContext","settings","scopedSettings","_global","checkProperties","a","propName","filteredAssign","concat","args","isAllowed","sourceObject","stylesheet","getInstance","prefix","onReset","counter","ImageFit","ImageCoverStyle","ImageLoadState","classNames","image","overflow","MS_ICON","getStyles","iconClassName","isPlaceholder","isImage","styles","imageContainer","matchFunction","document","body","findElementRecursive","noOutline","outline","iconStyle","lineHeight","verticalAlign","flexShrink","semanticColors","buttonBorder","disabledBackground","disabledText","buttonHighContrastFocus","bottom","outlineColor","inset","highContrastStyle","fonts","medium","boxSizing","userSelect","textDecoration","selectors","rootDisabled","pointerEvents","bordercolor","iconDisabled","menuIconDisabled","flexContainer","textContainer","flexGrow","small","screenReaderText","ContextualMenuItemType","canCheck","isChecked","subMenuProps","items","isDisabled","openSubMenu","getSubmenuTarget","submenuTarget","hasSubmenu","dismissSubMenu","dismissMenu","dismissAll","render","split","linkContentMenu","linkContent","onCheckmarkClick","isItemChecked","getIsChecked","Icon","iconName","checkmarkIcon","hasIcons","iconProps","onRenderIcon","name","secondaryText","submenuIconProps","subMenuIcon","BaseComponent","memoize","wrapper","divider","neutralTertiaryAlt","CONTEXTUAL_MENU_ITEM_HEIGHT","MediumScreenSelector","getItemHighContrastStyles","borderColor","MsHighContrastAdjust","getMenuItemStyles","ContextualMenuItemBackgroundHoverColor","menuItemBackgroundHovered","ContextualMenuItemBackgroundSelectedColor","menuItemBackgroundChecked","ContextualMenuItemDividerColor","bodyDivider","menuItemStyles","bodyText","disabledBodyText","opacity","rootHovered","rootFocused","rootChecked","rootPressed","rootExpanded","bodyTextChecked","anchorLink","textRendering","letterSpacing","wordSpacing","textTransform","textIndent","textShadow","textOverflow","neutralSecondary","iconColor","bodySubtext","splitButtonFlexContainer","getSplitButtonVerticalDividerClassNames","GlobalClassNames","isExpanded","expanded","isAnchorLink","knownIcon","itemClassName","dividerClassName","subMenuClassName","primaryDisabled","splitPrimary","splitMenu","flexBasis","splitContainer","getItemStyles","ContextualMenuItem","styled","scope","_onItemMouseEnter","ev","onItemMouseEnter","currentTarget","_onItemClick","onItemClickBase","_onItemMouseLeave","onItemMouseLeave","_onItemKeyDown","onItemKeyDown","_onItemMouseMove","onItemMouseMove","_getSubMenuId","getSubMenuId","_getSubmenuTarget","shouldComponentUpdate","newProps","_anchor","onItemClick","focusableElementIndex","totalItemCount","hasCheckmarks","contextualMenuItemAs","expandedMenuItemKey","anchorRel","rel","toLowerCase","subMenuId","itemHasSubmenu","nativeProps","isItemDisabled","itemProps","keytipProps","hasMenu","KeytipData","ariaDescribedBy","keytipAttributes","href","onMouseEnter","onMouseLeave","onMouseMove","onKeyDown","ChildrenRenderer","componentRef","_btn","onItemMouseDown","defaultRole","ariaLabel","buttonNativeProperties","itemButtonProperties","onMouseDown","classNamesFunction","VerticalDivider","getClassNames","deprecatedGetClassNames","Error","names","which","KeyCodes","enter","_executeItemClick","preventDefault","stopPropagation","_splitButton","_onItemMouseEnterPrimary","_onItemMouseEnterIcon","_onItemMouseMovePrimary","_onItemMouseMoveIcon","_onIconItemClick","executeItemClick","_processingTouch","_onTouchStart","_handleTouchAndPointerEvent","_onPointerDown","pointerType","stopImmediatePropagation","componentDidMount","_events","on","splitButton","ariaDescription","bind","onTouchStart","tabIndex","_renderSplitPrimaryButton","_renderSplitDivider","_renderSplitIconButton","itemComponentProps","getDividerClassNames","buttonProps","onTap","_lastTouchTimeoutId","_async","clearTimeout","setTimeout","disableCaching","getContextualMenuItemClassNames","LocalContextualMenu","_mounted","dismiss","onDismiss","_onRenderMenuList","menuListProps","defaultRender","indexCorrection","_classNames","_onKeyDown","onKeyUp","_onKeyUp","_renderMenuItem","Divider","Header","indexIncrease","customOnRenderListLength","_lastKeyDownWasAltOrMeta","_isAltOrMeta","dismissAllMenus","escape","_keyHandler","_shouldHandleKeyDown","_shouldCloseSubMenu","up","altKey","metaKey","_onMenuFocusCapture","delayUpdateFocusOnHover","_shouldUpdateFocusOnMouseEvent","_shouldHandleKeyUp","keyPressIsAltOrMetaAlone","shouldHandleKey","handled","_isFocusingPreviousElement","submenuCloseKey","isSubMenu","_adjustedFocusZoneProps","vertical","checkForNoWrap","_onMenuKeyDown","_host","hasModifier","isUp","isDown","elementToFocus","lastChild","firstChild","focus","_onScroll","_isScrollIdle","_scrollIdleTimeoutId","_onItemMouseEnterBase","_shouldIgnoreMouseEvent","_updateFocusOnMouseEvent","_onItemMouseMoveBase","targetElement","_gotMouseMove","_enterTimerId","_targetWindow","activeElement","_onMouseItemLeave","state","setActive","_onItemMouseDown","_onItemClickBase","getSubmenuItems","_cancelSubMenuTimer","setState","expandedByMouseClick","nativeEvent","detail","_onItemSubMenuExpand","_onAnchorClick","defaultPrevented","openKey","_onSubMenuDismiss","dismissedMenuItemKey","_onPointerAndTouchEvent","contextualMenuItems","_warnDeprecations","getMenuClassNames","newState","hidden","componentWillUpdate","newTarget","_setTargetWindowAndElement","_onMenuClosed","_onMenuOpened","_previousActiveElement","componentWillMount","componentWillUnmount","_tryFocusPreviousActiveElement","onMenuDismissed","dispose","isBeakVisible","labelElementId","beakWidth","directionalHint","directionalHintForRTL","alignTargetEdge","gapSpace","coverTarget","doNotLayer","bounds","useTargetWidth","useTargetAsMinWidth","directionalHintFixed","shouldFocusOnMount","shouldFocusOnContainer","calloutProps","onRenderSubMenu","onRenderMenuList","focusZoneProps","Section","sectionProps","itemsHaveIcons","_getFocusZoneDirection","contextMenuStyle","some","submenuItem","canAnyMenuItemsCheck","submenuProps","_getSubmenuProps","responsiveMode","targetAsHtmlElement","_target","offsetWidth","targetWidth","getBoundingClientRect","calloutStyles","subComponentStyles","callout","Callout","css","setInitialFocus","onScroll","host","onFocusCapture","FocusZone","isCircularNavigation","handleTabKey","all","_onRenderSubMenu","onMenuOpened","off","itemClassNames","renderedItems","getItemClassNames","subMenuIconClassName","itemStyleProps","push","_renderSeparator","headerItem","_renderHeaderMenuItem","_renderListItem","_renderSectionItem","_renderNormalItem","sectionItem","menuClassNames","headerContextualMenuItem","topDivider","contextualMenuItem","itemsIndex","bottomDivider","fromSection","onRender","_renderAnchorMenuItem","_renderSplitButton","_renderButtonItem","divHtmlProperties","header","alt","subMenuHoverDelay","timeoutDuration","_findItemByKey","_findItemByKeyFromItems","match","currentElement","currentDoc","getDocument","querySelector","getWindow","toElement","x","y","defaultProps","ContextualMenuBase","withResponsiveMode","isopen","ContextualMenu","bodyBackground","listStyleType","semibold","menuHeader","neutralLight","ButtonGlobalClassNames","msButton","msButtonIcon","msButtonMenuIcon","msButtonLabel","msButtonDescription","msButtonScreenReaderText","msButtonFlexContainer","msButtonTextContainer","getBaseButtonClassNames","variantClassName","menuIconClassName","isSplit","iconExpandedHovered","menuIconExpandedHovered","rootExpandedHovered","labelHovered","iconHovered","descriptionHovered","menuIconHovered","iconPressed","descriptionPressed","menuIconPressed","rootCheckedDisabled","rootCheckedHovered","rootCheckedPressed","iconExpanded","iconChecked","labelChecked","labelDisabled","menuIconChecked","menuIconExpanded","description","descriptionChecked","descriptionDisabled","splitButtonMenuButton","splitButtonMenuButtonExpanded","splitButtonMenuButtonDisabled","splitButtonMenuButtonChecked","splitButtonContainer","splitButtonContainerChecked","splitButtonContainerCheckedHovered","splitButtonContainerHovered","splitButtonContainerFocused","splitButtonContainerDisabled","splitButtonMenuIcon","splitButtonMenuIconDisabled","splitButtonDivider","splitButtonDividerDisabled","rootClassName","_buttonElement","_splitButtonContainer","_renderedPersistentMenu","_onRenderIcon","imageProps","rest","_onRenderTextContents","onRenderText","onRenderDescription","_onRenderText","_onRenderDescription","_hasText","_labelId","_onRenderChildren","_descriptionId","_onRenderAriaDescription","_ariaDescriptionId","_onRenderMenuIcon","menuIconProps","_onRenderMenu","menuProps","MenuType","menuAs","_isSplitButton","_dismissMenu","persistMenu","_openMenu","_onToggleMenu","currentMenuProps","_onSplitContainerFocusCapture","portalContainsElement","_onSplitButtonPrimaryClick","_isExpanded","_onMenuClick","space","_onKeyPress","onKeyPress","_onMouseUp","onMouseUp","_onMouseDown","_onClick","_onSplitButtonContainerKeyDown","click","_isValidMenuOpenKey","onMenuClick","_warnConditionallyRequiredProps","rootProps","toggled","ariaHidden","allowDisabledFocus","toggle","isPrimaryButtonDisabled","renderAsAnchor","tag","resolvedAriaLabel","ariaLabelledBy","dataIsFocusable","_onRenderSplitButtonContent","_onRenderContent","componentDidUpdate","prevProps","prevState","onAfterMenuDismiss","openMenu","Tag","onRenderAriaDescription","onRenderChildren","onRenderMenu","onRenderMenuIcon","Content","getSplitButtonClassNames","containerProps","_onRenderSplitButtonMenuButton","_onRenderSplitButtonDivider","splitButtonAriaLabel","splitButtonProps","BaseButton","menuTriggerKeyCode","baseClassName","BreadCrumb","url","useRouteMatch","shift","pathArr","path","totalPath","last","breadcrumbs","idx","checkSlash","charAt","module","exports","ResponsiveMode","_defaultMode","_lastMode","RESPONSIVE_MAX_CONSTRAINT","ComposedComponent","resultClass","_onResize","_getResponsiveMode","_updateComposedComponentRef","large","window","unknown","win","innerWidth","_id","EventGroup","_uniqueId","_parent","_eventRecords","raise","eventName","eventArgs","bubbleEvent","retVal","_isElement","createEvent","initEvent","dispatchEvent","evObj","fireEvent","events","__events__","eventRecords","eventRecordList","listIndex","record","objectCallback","isObserved","isDeclared","declaredEvents","__declaredEvents","cancelBubble","addEventListener","HTMLElement","_isDisposed","onAll","useCapture","callback","eventRecord","processElementEvent","elementCallback","attachEvent","targetArrayLookup","targetArray","splice","removeEventListener","detachEvent","declare","customStyles","splitButtonStyles","borderRight","REACT_LIFECYCLE_EXCLUSIONS","_skipComponentRefResolution","composedComponentInstance","source","_composedComponentInstance","_hoisted","destination","exclusions","hoisted","methodName","hoistMethods","forEach","functions","f","methods","appendFunction","getIconContent","iconDefinition","subset","code","FontIcon","FocusZoneDirection","FocusZoneTabbableElements","none","inputOnly","isContained","nextParent","onError","_timeoutIds","_immediateIds","_intervalIds","_animationFrameIds","_onErrorHandler","_noop","parseInt","clearImmediate","clearInterval","cancelAnimationFrame","duration","timeoutId","setImmediate","immediateId","_logError","setInterval","intervalId","throttle","func","wait","lastResult","lastArgs","waitMS","leading","trailing","lastExecuteTime","userCall","now","Date","getTime","delta","waitLength","debounce","noOpFunction","cancel","flush","pending","maxWait","lastCallTime","isNaN","markExecuted","time","invokeFunction","executeImmediately","maxWaitDelta","maxWaitExpired","Math","min","resultFunction","requestAnimationFrame","animationFrameId","animationFrameCallback","dest","RectangleEdge","Position","DATA_PORTAL_ATTRIBUTE","setAttribute","_coverStyle","portrait","_imageElement","_frameElement","_onImageLoaded","src","onLoad","_computeCoverStyle","loadState","loaded","_onImageError","error","notLoaded","componentWillReceiveProps","nextProps","_checkImageLoaded","onLoadingStateChange","shouldFadeIn","shouldStartVisible","imageFit","maximizeFrame","coverStyle","isLoaded","isLandscape","landscape","isCenter","center","isCenterContain","centerContain","isCenterCover","centerCover","isContain","contain","isCover","cover","isNone","isError","isNotImageFit","naturalWidth","naturalHeight","complete","ImageBase","_svgRegex","test","desiredRatio","clientWidth","clientHeight","naturalRatio","rootMaximizeFrame","imageCenter","imageContain","imageCover","imageCenterContain","imageCenterCover","imageNone","imageLandscape","imagePortrait","Image","ImageFitStyles","supportsObjectFit","navigator","msMaxTouchPoints","fallbackObjectFitStyles","fadeIn400","objectFit","DefaultFields","Component","baseStyles","getProps","customizable","pure","fields","_inCustomizerContext","_renderContent","context","getSettings","dir","additionalProps","_updateStyles","customizedStyles","_styles","_onSettingsChanged","Consumer","observe","unobserve","__cachedInputs__","styleProps","allStyles","_resolve","displayName","Wrapped","_memoizedClassNames","RetVal","Map","resultCount","currentMemoizedClassNames","styleFunctionOrObject","_traverseMap","clear","_traverseEdge","_normalizeValue","has","set","get","inputs","htmlElementProperties","anchorProperties","buttonProperties","inputProperties","textAreaProperties","imageProperties","divProperties","allowedPropNames","excludedPropNames","arg","toString","isMacResult","reset","userAgent","isIOS","_root","_disposables","_onFocus","_containsFocus","_onBlur","relatedTarget","needsVerticalScrollBar","_originalFocusedElement","_updateScrollBarAsync","shouldRestoreFocus","_getScrollBar","firstElementChild","rootHeight","firstChildHeight","_scrollbarWidth","_bodyScrollDisabledCount","DisabledScrollClassName","DATA_IS_SCROLLABLE_ATTRIBUTE","allowScrollOnElement","_previousClientY","_element","targetTouches","clientY","passive","scrollableParent","findScrollableParent","scrollTop","scrollHeight","_disableIosBodyScroll","doc","classList","add","capture","remove","scrollDiv","createElement","setProperty","appendChild","removeChild","startingElement","el","getAttribute","parentElement","computedStyles","getComputedStyle","getPropertyValue","concatStyles","_onSettingChanged","componentProps","mergedStyles","forceUpdate","obj","_onMount","_onUpdate","_onUnmount","_setComponentRef","elementMatch","testElement","hasAttribute","array","cb","findIndex","newElement","copy","itemToAdd","array1","array2","mergedAttribute","ariaAttributes","filter","trim","isRendered","delay","_timeoutId","only","inheritFont","fontFamily","isFocusVisible","neutralPrimary","_rootElement","divProps","Fabric","_defaultHostSelector","_layersByHostId","_filteredEventProps","_rootRef","_createLayerElement","hostId","_getHost","_removeLayerElement","layerElement","_getClassNames","setPortalAttribute","virtualChild","virtualParent","oldParent","setVirtualParent","insertFirst","insertBefore","onLayerDidMount","onLayerMounted","registerLayer","eventBubblingEnabled","_getFilteredEvents","unregisterLayer","onLayerWillUnmount","isNotHost","getElementById","defaultHostSelector","LayerBase","_onFilterEvent","eventPhase","Event","BUBBLING_PHASE","rootNoHost","Layer","visibility","equals","rect","parseFloat","toFixed","_createPositionData","targetEdge","alignmentEdge","isAuto","DirectionalDictionary","_isRectangleWithinBounds","boundingRect","_getOutOfBoundsEdges","outOfBounds","_getEdgeValue","edge","_setEdgeValue","_getCenterValue","edges","_getFlankingEdges","positiveEdge","negativeEdge","_getRelativeEdgeValue","_getRelativeRectEdgeValue","_getRelativeEdgeDifference","hostRect","_moveEdge","newValue","difference","_alignEdges","gap","_isEdgeInBounds","_adjustFitWithinBounds","bounding","positionData","elementEstimate","elementRectangle","directions","currentEstimate","currentEdge","currentAlignment","_estimatePosition","_flipToFit","flippedElementEstimate","oppositeEdge","_flipAlignmentEdge","_centerEdgeToPoint","point","elementToPosition","estimatedElementPosition","elementEdge","adjustedGap","_alignOppositeEdges","_finalizeReturnEdge","returnEdge","previousPositions","abs","_calculateActualBeakWidthInPixels","sqrt","_getPositionData","positionInformation","getClosestEdge","targetCenter","boundingCenter","_positionElementWithinBounds","_finalizeBeakPosition","elementPosition","positionedBeak","actualElement","returnValue","closestEdge","_positionBeak","targetRectangle","beakTargetPoint","elementBounds","beakPosition","_getRectangleFromElement","clientRect","_getRectangleFromIRect","_getMaxHeightFromTargetRectangle","_positionElementRelative","targetRect","clientX","_getTargetRect","_getAlignmentData","positionedElement","_finalizePositionData","hostElement","finalizedElement","elementEdgeString","_finalizeElementPosition","positionProps","innerHeight","finalizedBeakPosition","_positionCallout","ANIMATIONS","slideUpIn10","slideDownIn10","slideLeftIn10","slideRightIn10","BEAK_ORIGIN_POSITION","OFF_SCREEN_STYLE","ARIA_ROLE_ATTRIBUTES","_hostElement","_calloutElement","_hasListeners","_dismissOnScroll","preventDismissOnScroll","positions","_dismissOnClickOrScroll","_dismissOnResize","preventDismissOnResize","_dismissOnLostFocus","preventDismissOnLostFocus","_setInitialFocus","_didSetInitialFocus","_onComponentDidMount","_addListeners","_updateAsyncPosition","_setHeightOffsetEveryFrame","Async","slideDirectionalClassName","calloutElementRect","heightOffset","_positionAttempts","_removeListeners","_getTarget","String","_blockResetHeight","_maxHeight","finalHeight","_bounds","calloutWidth","calloutMaxWidth","hideOverflow","calloutMaxHeight","getContentMaxHeight","_getMaxHeight","contentMaxHeight","overflowYHidden","beakVisible","overflowStyle","visibilityStyle","beak","_getBeakPosition","beakCurtain","Popup","calloutMain","isEventTargetOutsideCallout","elementContains","documentElement","beakPostionStyle","_updatePosition","calloutElement","expectsTarget","currentProps","_getBounds","newPositions","positionCallout","_arePositionsEqual","onPositioned","currentBounds","minPagePadding","BORDER_WIDTH","mouseTarget","elementTarget","pointTarget","boundingRectangle","getMaxHeight","newPosition","_comparePositions","oldPositions","oldPositionEdge","newPositionEdge","_setHeightOffsetTimer","calloutMainElem","scrollDiff","offsetHeight","getBeakStyle","CalloutContent","borderWidth","borderStyle","overflowX","layerProps","initializeFocusRects","w","__hasInitializedDir__","initializeDir","methodNames","len","_makeSafe","_makeAllSafe","_updateComponentRef","__disposables","disposable","__className","results","exec","__async","__events","_resolveRef","refName","__resolves","deprecationMap","_warnMutuallyExclusive","mutuallyExclusiveMap","requiredProps","conditionalPropName","condition","classMethod","prototypeMethod","MessageBarType","ICON_MAP","info","warning","blocked","severeWarning","success","expandSingleLine","showContent","isMultiline","_renderMultiLine","_renderSingleLine","_getActionsDiv","actions","_getDismissDiv","dismissal","dismissButtonAriaLabel","_getDismissSingleLine","dismissSingleLine","_getExpandSingleLine","truncated","expand","overflowButtonAriaLabel","_getIconSpan","iconContainer","messageBarType","_renderInnerText","innerText","_getAnnouncementPriority","DelayedRender","multiline","singleline","dismissalSingleLine","expandingSingleLine","actionsSingleline","errorBackground","blockingBackground","successBackground","warningBackground","neutralLighter","errorText","green","warningText","MessageBar","SmallScreenSelector","dismissalAndExpandIconStyle","dismissalAndExpandSingleLineStyle","dismissalAndExpandStyle","outlineOffset","focusStyle","themeDark","ErrorMessageBar","KeytipEvents","KEYTIP_ADDED","KEYTIP_REMOVED","KEYTIP_UPDATED","PERSISTED_KEYTIP_ADDED","PERSISTED_KEYTIP_REMOVED","PERSISTED_KEYTIP_EXECUTE","ENTER_KEYTIP_MODE","EXIT_KEYTIP_MODE","keytips","persistedKeytips","inKeytipMode","shouldEnterKeytipMode","_instance","register","persisted","addParentOverflow","uniqueKeytip","_getUniqueKtp","keytip","uniqueID","update","newKeytipProps","keytipIndex","ktp","visible","unregister","keytipToRemove","uniqueKtp","enterKeytipMode","exitKeytipMode","getKeytips","fullSequence","keySequences","pop","parentKeytip","overflowSetSequence","menuExecute","overflowButtonSequences","keytipSequences","KeytipManager","reduce","prevValue","keySequence","_keytipManager","_getKtpProps","nativeKeytipProps","_getKtpAttrs","describedByPrepend","describedby","sequencesToID","getAriaDescribedBy","overflowKeySequences","overflowSequenceLen","overflowSequence","newKeySequences","mergeOverflows","ktpId","IconType","onImageLoadingStateChange","imageLoadError","imageErrorAs","iconType","RootType","ImageType","_isRTL","RTL_LOCAL_STORAGE_KEY","savedRTL","sessionStorage","getItem","isRTL","persistSetting","data","setItem","setRTL","getRTL","rootElement","includeElementsInFocusZones","getNextElement","getPreviousElement","checkNode","focusAsync","suppressParentTraversal","traverseChildren","allowFocusRoot","tabbable","isCurrentElementVisible","isElementVisible","isElementFocusZone","isElementFocusSubZone","childMatch","lastElementChild","isElementTabbable","childMatchSiblingMatch","previousElementSibling","childMatchParent","childMatchParentMatch","siblingMatch","suppressChildTraversal","nextElementSibling","visibilityAttribute","offsetParent","isVisible","checkTabIndex","tabIndexAttributeValue","isFocusableAttribute","isTabIndexSet","tagName","currentActiveElement","noWrapDataAttribute","attribute","elementContainsAttribute","targetToFocusOnNextRepaint","nextChild","fromElement","getParent","createNewEvent","focusZoneStyles","IS_FOCUSABLE_ATTRIBUTE","FOCUSZONE_ID_ATTRIBUTE","TABINDEX","NO_VERTICAL_WRAP","NO_HORIZONTAL_WRAP","LARGE_DISTANCE_FROM_CENTER","LARGE_NEGATIVE_DISTANCE_FROM_CENTER","_allInstances","_outerZones","Set","ALLOWED_INPUT_TYPES","ALLOW_VIRTUAL_ELEMENTS","_portalContainsElement","newActiveElement","onActiveElementChanged","doNotAllowFocusEventToPropagate","onFocusNotification","isImmediateDescendant","_isImmediateDescendantOfZone","initialElementFocused","_activeElement","_setFocusAlignment","_updateTabIndexes","_setParkedFocus","_onKeyDownCapture","tab","zone","_setActiveElement","isInnerZoneKeystroke","isDefaultPrevented","_isInnerZone","innerZone","_getFirstInnerZone","focusElement","_tryInvokeClickForFocusable","_moveFocusLeft","_moveFocusRight","horizontal","_moveFocusUp","_moveFocusDown","allowTabKey","_isElementInput","focusChanged","_processingTabKey","_shouldWrapFocus","bidirectional","shiftKey","home","_shouldInputLoseFocus","end","initializeComponentRef","_focusAlignment","getOuterZones","windowElement","ownerDocument","defaultView","nodeType","defaultActiveElement","_lastIndexPath","delete","as","elementType","_evaluateFocusBeforeRender","mergeStyles","onFocus","onMouseDownCapture","forceIntoFirstElement","ownerZoneElement","_getOwnerZone","ownerZone","onBeforeFocus","setFocusAlignment","focusedElement","isParked","_isParked","_parkedTabIndex","removeAttribute","forceAlignment","previousActiveElement","raiseClick","_moveFocus","isForward","getDistanceFromCenter","useDefaultWrap","candidateDistance","candidateElement","changedFocus","isBidirectional","activeRect","elementDistance","targetTop","leftAlignment","distance","targetRectTop","floor","activeRectBottom","targetRectBottom","activeRectTop","shouldWrap","isHorizontal","isVertical","_defaultFocusElement","childNodes","childIndex","selectionStart","isRangeSelected","selectionEnd","inputValue","shouldInputLoseFocusOnArrowKey","baseButtonStyles","iconButtonStyles","actionLink","actionLinkHovered","buttonBackgroundChecked","buttonBackgroundHovered","useMediaQuery","queryInput","useTheme","getThemeProps","query","replace","supportMatchMedia","matchMedia","_props$options","_extends","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","matches","setMatch","queryList","updateMatch","addListener","removeListener","fakeRoles","fakePrivilege","createContext","marginTop10","marginTop20","CreateRoleModal","optionItems","defaultUserInfo","username","rolePrivileges","useContext","Context","getData","userInfo","setUserInfo","isRolePrivileges","setIsRolePrivilegesCreating","isNameError","setIsNameError","onSubmit","getCreateRolePrivilegesInfo","privileges","createRole","toast","message","rules","helperText","checkField","required","prev","MenuProps","anchorOrigin","getContentAnchorEl","CircularProgress","EditModal","designateUpdateUser","useMemo","createRolePrivilegesInfo","updateRole","errorMessage","PaperProps","Filter","keyword","types","filters","includes","every","Ordering","comparator","localeCompare","sort","heightAuto","iconClearMarginLeft","fullWidth","muiautoTablet","RoleList","setError","setIsLoading","roleList","setRoleList","setRolePrivileges","isEditModalShow","setIsEditModalShow","isCreateModalShow","setIsCreateModalShow","setDesignateUpdateUser","setKeyword","selectedRole","setSelectedRole","setFilter","setOrdering","showDeleteModal","setShowDeleteModal","isTablet","applySortProps","column","isSorted","isSortedDescending","useCallback","onDelete","useEffect","roles","onlyHasAdmin","Provider","indexStyle","BreadCrumbs","topbar","Refresh","onInputChange","CreateModal"],"mappings":"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B,EAAenB,iBAAhB,eAAgC,CAClD3mC,EAAUynC,EAAcznC,EADV,WAGX,GAAsB,kBAAX8nC,EAChB,IAAK,IAAMh0B,KAAYg0B,EACjBA,EAAOjuC,eAAeia,KACxB9T,EAAUynC,EAAcznC,EAAU8nC,EAAeh0B,KAKvD,OAAO9T,I,iCC7IT,6RAuHa+nC,EAzBwB,CACnC,YACA,WACA,YACA,kBACA,MACA,YACA,SACA,UACA,KACA,OACA,OACA,QACA,WACA,QACA,YACA,aACA,QAQyD/zB,OAhH1B,CAC/B,SACA,QACA,UACA,mBACA,qBACA,sBACA,UACA,iBACA,SACA,gBACA,WACA,UACA,WACA,SACA,UACA,YACA,mBACA,aACA,UACA,UACA,YACA,mBACA,mBACA,YACA,cACA,UACA,eACA,mBACA,cACA,UACA,SACA,YACA,aACA,eACA,WACA,YACA,YACA,YACA,eACA,iBACA,YACA,UACA,iBACA,gBACA,gBACA,SACA,YACA,cACA,aACA,cACA,aACA,cACA,SACA,cACA,qBACA,eACA,eACA,cACA,aACA,cACA,YACA,mBACA,WACA,gBACA,aACA,cACA,eACA,WACA,UACA,kBACA,gBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,sBACA,yBA0FWg0B,GAlDkBD,EAAsB/zB,OAAO,CAC1D,SAQ6B+zB,EAAsB/zB,OAAO,CAC1D,SACA,OACA,QACA,UACA,MACA,UAQ6CA,OAAO,CACpD,WAQ0B+zB,EAAsB/zB,OAAO,CACvD,UAQ0B+zB,EAAsB/zB,OAAO,CACvD,UAQ8B+zB,EAAsB/zB,OAAO,CAC3D,WACA,OACA,WACA,QACA,MACA,SACA,UAQWi0B,EAAmBF,EAAsB/zB,OAAO,CAC3D,YACA,WACA,OACA,aACA,cACA,aACA,iBACA,aACA,OACA,UAQWk0B,EAAkBD,EAAiBj0B,OAAO,CACrD,SACA,MACA,eACA,UACA,UACA,OACA,SACA,YACA,OACA,MACA,YACA,MACA,WACA,UACA,cACA,WACA,WACA,MACA,OACA,OACA,OACA,QACA,UAQWm0B,EAAqBF,EAAiBj0B,O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","file":"static/js/RoleList.165a11cc.chunk.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.customColor.themePrimary,\n    fontSize: '14px',\n    padding: '8px 10px',\n    maxHeight: 40,\n    '&:hover': {\n      backgroundColor: theme.palette.customColor.themePrimaryHover\n    },\n    '&.Mui-disabled': {\n      background: theme.palette.customColor.themeDisablePrimaryBackground,\n      color: theme.palette.customColor.themeDisablePrimaryColor\n    }\n  },\n  text: {\n    color: theme.palette.customColor.white\n  }\n}));\n\nexport const PrimaryButton = ({ children, classNameProps = '', ...props }) => {\n  const classes = useStyles();\n  return (\n    <Button\n      className={`${classes.root} ${classes.text} ${classNameProps}`}\n      // color=\"primary\"\n      {...props}\n    >\n      {children}\n    </Button>\n  )\n}\n\nPrimaryButton.propTypes = {\n  children: PropTypes.node,\n  classNameProps: PropTypes.string\n}\n\nexport default PrimaryButton","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  btnRootClass: {\n    backgroundColor: theme.palette.customColor.white,\n    border: `1px solid ${theme.palette.customColor.themeDefaultBorderColor}`,\n    fontSize: '14px',\n    fontWeight: 'normal',\n    padding: '7px 10px',\n    color: theme.palette.text.black,\n    maxHeight: 40,\n    boxShadow: 'none',\n    '&:focus': {\n      backgroundColor: theme.palette.customColor.themeDefaultBackgroundFocus\n    },\n    '&:hover': {\n      backgroundColor: theme.palette.customColor.themeDefaultBackgroundHover\n    }\n  }\n}));\n\nexport const DefaultButton = ({ children, classNameProps = '', ...props }) => {\n\n  // = styles\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={`${classes.btnRootClass} ${classNameProps}`}\n      {...props}\n    >\n      {children}\n    </Button>\n  )\n}\n\nDefaultButton.propTypes = {\n  children: PropTypes.node,\n  classNameProps: PropTypes.string\n}\n\nexport default DefaultButton","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { default as Icon } from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    cursor: 'pointer',\n    '&:hover': {\n      transform: 'scale(1.25,1.25)',\n      transition: 'transform 0.25s ease'\n    }\n  }\n}))\n\nexport const IconButton = ({ children, ...props }) => {\n  const classes = useStyles();\n  return (\n    <Icon\n      className={classes.root}\n      color=\"primary\"\n      {...props}\n    >\n      {children}\n    </Icon>\n  );\n}\n\nIconButton.propTypes = {\n  children: PropTypes.node\n}\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\n// % styles\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n  btnGroupRoot: {\n    minHeight: 40,\n    maxHeight: 40\n  },\n  btnRootClass: {\n    backgroundColor: theme.palette.customColor.white,\n    fontSize: '14px',\n    border: `1px solid ${theme.palette.customColor.themeDefaultBorderColor}`,\n    boxShadow: 'none',\n    '&:focus': {\n      backgroundColor: theme.palette.customColor.btnFocusColor\n    },\n    '&:hover': {\n      backgroundColor: theme.palette.customColor.themeDefaultBackgroundHover\n    }\n  },\n  btnLabel: {\n    '& > .MuiButton-label': {\n      fontSize: '14px'\n    }\n  },\n  btnRootRightClass: {\n    borderLeft: 'none'\n  },\n  menuPaper: {\n    width: 180\n  },\n  menuItem: {\n    width: '100%',\n    display: 'flex',\n    alignContent: 'center',\n    padding: '4px 24px'\n  },\n  menuIcon: {\n    marginRight: 20,\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center',\n    '& .MuiIcon-root': {\n      marginRight: 0\n    }\n  }\n}))\n\n\nexport const SplitButton = ({ text, onClick, startIcon, options, ButtonGroupProps, classNameObj, ...props }) => {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  // = styles\n  const classes = useStyles();\n\n  return (\n    <>\n      <ButtonGroup\n        aria-label=\"split button\"\n        className={`${classes.btnGroupRoot} ${classNameObj?.btnGroup}`}\n        disableElevation\n        ref={anchorRef}\n        variant=\"contained\"\n        {...ButtonGroupProps}\n      >\n        <Button\n          className={`${classes.btnRootClass} ${classes.btnLabel} ${classNameObj?.left}`}\n\n          onClick={onClick}\n          startIcon={startIcon}\n          {...props}\n        >{text}</Button>\n        <Button\n          aria-controls={open ? 'split-button-menu' : undefined}\n          aria-expanded={open ? 'true' : undefined}\n          aria-haspopup=\"menu\"\n          className={`${classes.btnRootClass} ${classes.btnRootRightClass} ${classNameObj?.right}`}\n          // aria-label=\"select merge strategy\"\n          disabled={options.length === 0}\n          onClick={handleToggle}\n          size=\"small\"\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        anchorEl={anchorRef.current}\n        // disablePortal\n        className={`${classNameObj?.popper}`}\n        open={open}\n        role={undefined}\n        style={{ zIndex: 2 }}\n        transition\n      >\n        {({ TransitionProps, placement }) => {\n          return (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n              }}\n            >\n              <Paper className={`${classes.menuPaper} ${classNameObj?.menuPaper}`}>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList>\n                    {options.map((option) => (\n                      <MenuItem\n                        className={classes.menuItem}\n                        key={option.id}\n                        onClick={() => {\n                          if (option.handleItemclick) {\n                            option.handleItemclick()\n                          }\n                          setOpen(false)\n                        }}\n                        {...option}\n                      >\n                        <div className={classes.menuIcon}>\n                          {option.icon}\n                        </div>\n                        <div className={classes.menuLabel}>\n                          {option.label}\n                        </div>\n\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        }\n      </Popper>\n    </>\n  );\n}\n\nSplitButton.propTypes = {\n  onClick: PropTypes.func,\n  options: PropTypes.array,\n  text: PropTypes.string,\n  startIcon: PropTypes.node,\n  classNameObj: PropTypes.object,\n  ButtonGroupProps: PropTypes.object\n}\n\nexport default SplitButton;","import React from 'react';\n\n// ^ Material-ui Components(Functions)\nimport Modal from '@material-ui/core/Modal';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// ^ plugins\nimport PropTypes from 'prop-types';\n\n// % styles\nimport { makeStyles } from '@material-ui/core/styles';\nimport commonStyle from 'common/commonStyles'\n\nconst useStyles = makeStyles((theme) => ({\n  ...commonStyle(theme),\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '4px',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  modalTitleBlock: {\n    padding: '5px 0'\n  },\n  modalTitle: {\n    color: 'black',\n    fontSize: '18px',\n    fontWeight: 'bold'\n  },\n  subTitle: {\n    // 目前還沒有想到要加入什麼預設的 css\n  }\n}));\n\n\n/**\n * @author elvis\n * @level any/BaseModal\n * @component BaseModal\n * @description Packaged base component with Material UI Modal\n*/\nexport const BaseModal = ({\n  children,\n  isOpen,\n  onClose,\n  title,\n  subTitle,\n  isCloseIcon = false,\n  modalWidth,\n  classesNameObj,\n  ...props\n}) => {\n  const classes = useStyles();\n  return (\n    <Modal\n      className={`${classes.flex_center} ${classes.modal} ${classesNameObj?.modal}`}\n      onClose={onClose}\n      open={isOpen}\n    >\n      <div\n        className={`${classes.paper} ${classesNameObj?.modalContainer}`}\n        style={modalWidth ? { width: modalWidth } : {}}\n        {...props}\n      >\n        <Grid\n          alignItems=\"stretch\"\n          container\n          direction=\"column\"\n          justify=\"center\"\n        >\n          <Grid item>\n            <div\n              className={`\n                ${isCloseIcon ? `${classes.flex_align_center} ${classes.justify_between}` : ''}\n                ${classes.modalTitleBlock}\n                ${classesNameObj?.modalGridContainer}\n              `}\n            >\n              <div className={`${classes.modalTitle} ${classesNameObj?.modalTitle}`}>\n                {title}\n              </div>\n              {\n                isCloseIcon &&\n                <IconButton\n                  aria-label=\"close\"\n                  onClick={onClose}\n                >\n                  <CloseIcon />\n                </IconButton>\n              }\n            </div>\n          </Grid>\n\n          {\n            subTitle &&\n            <Grid item>\n              <div className={`${classes.subTitle} ${classesNameObj?.modalSubTitle}`}>\n                {subTitle}\n              </div>\n            </Grid>\n          }\n\n          {children}\n        </Grid>\n      </div>\n    </Modal>\n  );\n}\n\nBaseModal.propTypes = {\n  children: PropTypes.node,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  subTitle: PropTypes.string,\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  isCloseIcon: PropTypes.bool,\n  modalWidth: PropTypes.number,\n  classesNameObj: PropTypes.object\n};\n\nexport default BaseModal;\n","export const DirectionalHint = {\n  /**\n   * Appear above the target element, with the left edges of the callout and target aligning.\n   */\n  topLeftEdge: 0 as 0,\n\n  /**\n   * Appear above the target element, with the centers of the callout and target aligning.\n   */\n  topCenter: 1 as 1,\n\n  /**\n   * Appear above the target element, with the right edges of the callout and target aligning.\n   */\n  topRightEdge: 2 as 2,\n\n  /**\n   * Appear above the target element, aligning with the target element such that the callout tends toward the center of the screen.\n   */\n  topAutoEdge: 3 as 3,\n\n  /**\n   * Appear below the target element, with the left edges of the callout and target aligning.\n   */\n  bottomLeftEdge: 4 as 4,\n\n  /**\n   * Appear below the target element, with the centers of the callout and target aligning.\n   */\n  bottomCenter: 5 as 5,\n\n  /**\n   * Appear below the target element, with the right edges of the callout and target aligning.\n   */\n  bottomRightEdge: 6 as 6,\n\n  /**\n   * Appear below the target element, aligning with the target element such that the callout tends toward the center of the screen.\n   */\n  bottomAutoEdge: 7 as 7,\n\n  /**\n   * Appear to the left of the target element, with the top edges of the callout and target aligning.\n   */\n  leftTopEdge: 8 as 8,\n\n  /**\n   * Appear to the left of the target element, with the centers of the callout and target aligning.\n   */\n  leftCenter: 9 as 9,\n\n  /**\n   * Appear to the left of the target element, with the bottom edges of the callout and target aligning.\n   */\n  leftBottomEdge: 10 as 10,\n\n  /**\n   * Appear to the right of the target element, with the top edges of the callout and target aligning.\n   */\n  rightTopEdge: 11 as 11,\n\n  /**\n   * Appear to the right of the target element, with the centers of the callout and target aligning.\n   */\n  rightCenter: 12 as 12,\n\n  /**\n   * Appear to the right of the target element, with the bottom edges of the callout and target aligning.\n   */\n  rightBottomEdge: 13 as 13\n};\n\nexport type DirectionalHint = typeof DirectionalHint[keyof typeof DirectionalHint];\n","const commonStyle = (theme) => {\n  const { largeAlpha } = theme.bp\n\n  return {\n    // width and height\n    w_full: {\n      width: '100%'\n    },\n    w_screen: {\n      width: '100vw'\n    },\n    w_auto: {\n      width: 'auto'\n    },\n    h_full: {\n      height: '100%'\n    },\n    h_screen: {\n      height: '100vw'\n    },\n    h_auto: {\n      height: 'auto'\n    },\n    h_30: {\n      height: 30\n    },\n    // col\n    col_3: {\n      width: 'auto',\n      maxWidth: '25%',\n      minWidth: 'calc((100% / 12) * 3)'\n    },\n    col_4: {\n      width: 'auto',\n      maxWidth: '33.3333%',\n      minWidth: 'calc((100% / 12) * 4)'\n    },\n    col_6: {\n      width: 'auto',\n      maxWidth: '50%',\n      minWidth: 'calc((100% / 12) * 6)'\n    },\n    'largeAlpha:col_6': {\n      [theme.breakpoints.down(largeAlpha)]: {\n        width: 'auto',\n        maxWidth: '50%'\n      }\n    },\n    'largeAlpha:col_12': {\n      [theme.breakpoints.down(largeAlpha)]: {\n        width: 'auto',\n        maxWidth: '100%'\n      }\n    },\n    // ctrl\n    w_ctrl90: {\n      width: 90,\n      flex: '0 0 90px'\n    },\n    w_ctrl_left90: {\n      width: 'auto',\n      flex: '1 1 auto'\n    },\n    // display,\n    d_flex: {\n      display: 'flex !important'\n    },\n    d_inflex: {\n      display: 'inline-flex !important'\n    },\n    d_block: {\n      display: 'block !important'\n    },\n    d_inblock: {\n      display: 'inline-block !important'\n    },\n    d_none: {\n      display: 'none !important'\n    },\n    // flex\n    flex_left: {\n      marginRight: 'auto'\n    },\n    flex_right: {\n      color: 'inherit'\n    },\n    flex_justify_start: {\n      display: 'flex',\n      justifyContent: 'flex-start'\n    },\n    flex_justify_between: {\n      display: 'flex',\n      justifyContent: 'between'\n    },\n    flex_justify_center: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    flex_justify_end: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    flex_align_start: {\n      display: 'flex',\n      alignItems: 'start'\n    },\n    flex_align_center: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    flex_center: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    justify_around: {\n      justifyContent: 'space-around'\n    },\n    justify_between: {\n      justifyContent: 'space-between'\n    },\n    justify_center: {\n      justifyContent: 'center'\n    },\n    alignItems: {\n      alignItems: 'stretch'\n    },\n    alignItemsCenter: {\n      alignItems: 'center'\n    },\n    directionColumn: {\n      flexDirection: 'column'\n    },\n    directionRow: {\n      flexDirection: 'row'\n    },\n    flex_wrap: {\n      flexWrap: 'wrap'\n    },\n    // spacing\n    m_0: {\n      margin: '0 !important'\n    },\n    my_0: {\n      marginTop: '0 !important',\n      marginBottom: '0 !important'\n    },\n    mx_0: {\n      marginLeft: '0 !important',\n      marginRight: '0 !important'\n    },\n    mt_0: {\n      marginTop: '0 !important'\n    },\n    mt_8: {\n      marginTop: '8px !important'\n    },\n    mt_10: {\n      marginTop: '10px !important'\n    },\n    mt_16: {\n      marginTop: '16px !important'\n    },\n    mt_20: {\n      marginTop: '20px !important'\n    },\n    mt_30: {\n      marginTop: '30px !important'\n    },\n    ml_10: {\n      marginLeft: '10px !important'\n    },\n    ml_20: {\n      marginLeft: '20px !important'\n    },\n    mr_10: {\n      marginRight: '10px !important'\n    },\n    mr_16: {\n      marginRight: '16px !important'\n    },\n    mr_20: {\n      marginRight: '20px !important'\n    },\n    mr_auto: {\n      marginRight: 'auto !important'\n    },\n    mb_0: {\n      marginBottom: '0 !important'\n    },\n    mb_6: {\n      marginBottom: '6px !important'\n    },\n    mb_10: {\n      marginBottom: '10px !important'\n    },\n    mb_16: {\n      marginBottom: '16px !important'\n    },\n    mb_20: {\n      marginBottom: '20px !important'\n    },\n    mb_24: {\n      marginBottom: '24px !important'\n    },\n    mb_40: {\n      marginBottom: '40px !important'\n    },\n    p_0: {\n      padding: '0 !important'\n    },\n    p_8: {\n      padding: '8px !important'\n    },\n    p_20: {\n      padding: '20px !important'\n    },\n    pt_20: {\n      paddingTop: '20px !important'\n    },\n    py_5: {\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    px_0: {\n      paddingLeft: '0 !important',\n      paddingRight: '0 !important'\n    },\n    pb_0: {\n      paddingBottom: '0 !important'\n    },\n    pb_10: {\n      paddingBottom: '10px !important'\n    },\n    // border\n    border_TL_Radius_0: {\n      borderTopLeftRadius: '0px !important'\n    },\n    border_TR_Radius_0: {\n      borderTopRightRadius: '0px !important'\n    },\n    border_BL_Radius_0: {\n      borderBottomLeftRadius: '0px !important'\n    },\n    border_BR_Radius_0: {\n      borderBottomRightRadius: '0px !important'\n    },\n    borderRadius_4: {\n      borderRadius: '4px !important'\n    },\n    border_none: {\n      border: 'none !important'\n    },\n    // color\n    black_100: {\n      color: theme.palette.text.black\n    },\n    black_60: {\n      color: 'rgba(0, 0, 0, 0.6)'\n    },\n    textRed: {\n      color: 'red'\n    },\n    textYellow: {\n      color: 'yellow'\n    },\n    textOrange: {\n      color: 'orange'\n    },\n    textGreen: {\n      color: 'green'\n    },\n    textBlue: {\n      color: 'blue'\n    },\n    textAqua: {\n      color: 'aqua'\n    },\n    textPurple: {\n      color: 'purple'\n    },\n    // utilities\n    scrollable_y: {\n      height: '100%',\n      overflowY: 'auto'\n    },\n    // font\n    fz_12: {\n      fontSize: 12\n    },\n    fz_14: {\n      fontSize: 14\n    },\n    fz_16: {\n      fontSize: 16\n    },\n    // Icons\n    viewBtn: {\n      width: 36,\n      height: 24,\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 10,\n      cursor: 'pointer'\n    },\n    viewIcon: {\n      fontSize: 16,\n      color: theme.palette.customColor.themePrimary\n    },\n    // components\n    pageContainer: {\n      position: 'relative',\n      padding: '0 20px 20px'\n    },\n    rowRadioGroup: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    rowRadioGroupLabel: {\n      color: theme.palette.text.black,\n      fontSize: 14,\n      marginRight: 25\n    },\n    radioRoot: {\n      '& .MuiSvgIcon-root': {\n      // 可以調整寬高\n        height: 20,\n        width: 20\n      }\n    },\n    checkboxRoot: {\n      '& .MuiSvgIcon-root': {\n      // 可以調整寬高\n        height: 20,\n        width: 20\n      }\n    },\n    defaultInput: {\n      maxWidth: 200,\n      minWidth: 150,\n      maxHeight: 40,\n      '& .MuiOutlinedInput-root': {\n        height: 40\n      }\n    },\n    unlimitWidthInput: {\n      maxHeight: 40,\n      '& .MuiOutlinedInput-root': {\n        height: 40\n      },\n\n      '& .MuiInputLabel-outlined': {\n        transform: 'translate(14px, 14px) scale(1)'\n      },\n\n      '& .MuiInputLabel-outlined.MuiInputLabel-shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    },\n    unlimitWidthSelect: {\n      maxHeight: 40,\n      height: 40,\n\n      '& .MuiSelect-outlined': {\n        padding: '12px 14px',\n        paddingRight: 32\n      },\n\n      '& .MuiSelect-icon': {\n        top: 'calc(50% - 8px)'\n      },\n\n      '& .MuiFormLabel-root': {\n        transform: 'translate(14px, 14px) scale(1)'\n      },\n\n      '& .MuiFormLabel-root.MuiInputLabel-shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    },\n    ctrlBarDatePicker: {\n      width: 200,\n      backgroundColor: theme.palette.customColor.trans\n    },\n    tabs: {\n      '& .MuiTab-wrapper': {\n        fontSize: '14px'\n      }\n    },\n    defaultTextField: {\n      '& .MuiFormHelperText-root': {\n        fontSize: '14px'\n      }\n    }\n  }\n};\n\nexport default commonStyle;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, InputLabel, Select, MenuItem, Checkbox, ListSubheader } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n    '& .Mui-focused':{\n      top: 0\n    }\n  },\n  select: {\n    height: 40\n  },\n  selectIcon: {\n    top: '30%'\n  },\n  labelChange: {\n    top: -5\n  },\n  labelChangeHasValue: {\n    top: 0\n  },\n  textcolor: {\n    color: theme.palette.customColor.themePrimary\n  }\n}))\n\n\nconst BaseDropdown = ({\n  list,\n  text,\n  value = [],\n  valueOrigin,\n  onChange,\n  onRenderOption,\n  multiple = false,\n  maxWidth,\n  width,\n  selectProps,\n  inputLabelProps,\n  onChangeChecked,\n  classNameObj,\n  ...props\n}) => {\n  const classes = useStyles();\n  const defaultOptions = (item, multiple) => {\n    const { itemType, onClick } = item;\n    if (onRenderOption !== undefined) {\n      return (\n        <MenuItem\n          key={item.key}\n          optionkey={item.optionkey}\n          value={item.text}\n        >\n          {onRenderOption(item)}\n        </MenuItem>\n      )\n    }\n\n    const defaultChecked = (item) => {\n      // 沒有傳判斷的 function 才會 true 進來判斷\n      if (!onChangeChecked) {\n        return value.indexOf(item.text) > -1\n      }\n\n      // 有傳就直接用該 function 判斷是否要打勾\n      return onChangeChecked(valueOrigin, item)\n    }\n\n    switch (itemType) {\n      case 0:\n        return (<Divider key={item.key} />);\n      case 1:\n        return (\n          <MenuItem\n            key={item.key}\n            onClick={onClick}\n            type={item.type}\n            value={item.text}\n          >\n            {item.text}\n          </MenuItem>\n        );\n      case 2:\n        return (\n          <ListSubheader\n            className={classes.textcolor}\n            disableSticky\n            key={item.key}\n          >\n            {item.text}\n          </ListSubheader>\n        );\n      default:\n        return (\n          <MenuItem\n            key={item.key}\n            optionkey={item.optionkey}\n            value={item.text}\n            {...item}\n          >\n            {\n              multiple &&\n              <Checkbox\n                checked={defaultChecked(item)}\n              />\n            }\n            {item.text}\n          </MenuItem>\n        );\n    }\n  }\n\n  return (\n    <FormControl\n      className={`${classes.formControl} ${classNameObj?.container}`}\n      style={{ maxWidth: maxWidth, width: width }}\n      variant=\"outlined\"\n      {...props}\n    >\n      <InputLabel\n        classes={{\n          root: clsx(classes.labelChange, {\n            [classes.labelChangeHasValue]: value.length > 0\n          })\n        }}\n        htmlFor=\"select-privilege\"\n        {...inputLabelProps}\n      >\n        {text}\n      </InputLabel>\n      <Select\n        className={`${classes.select} ${classNameObj?.select}`}\n        classes={{ icon: classes.selectIcon }}\n        displayEmpty\n        label={text}\n        labelId=\"select-privilege\"\n        multiple={multiple}\n        onChange={onChange}\n        renderValue={\n          multiple\n            ? (selected) => selected.join(', ')\n            : (selected) => selected\n        }\n        // SelectDisplayProps={{ style: { paddingTop: 17, paddingBottom: 4, fontSize: 16 } }}\n        value={value}\n        {...selectProps}\n      >\n        {list.map((item) => defaultOptions(item, multiple))}\n      </Select>\n    </FormControl>\n  );\n};\n\nBaseDropdown.propTypes = {\n  list: PropTypes.array,\n  text: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  onChange: PropTypes.func,\n  multiple: PropTypes.bool,\n  maxWidth: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  onRenderOption: PropTypes.func,\n  selectProps: PropTypes.object,\n  inputLabelProps: PropTypes.object,\n  onChangeChecked: PropTypes.func,\n  valueOrigin: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  classNameObj: PropTypes.object\n};\n\nexport default BaseDropdown;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    '& .MuiInputBase-root': {\n      height: 40\n    },\n    '& .MuiInputLabel-outlined': {\n      transform: 'translate(14px, 14px) scale(1)'\n    },\n    '& .MuiInputLabel-outlined.MuiInputLabel-shrink': {\n      transform: 'translate(14px, -6px) scale(0.75)'\n    }\n    // '& .MuiInputLabel-formControl': {\n    //   top: -5\n    // },\n    // '& .Mui-focused':{\n    //   top: 0\n    // }\n  }\n}))\n\nexport const BaseTextField = ({ ...props }) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={`${classes.root}`}\n      variant=\"outlined\"\n      // styles={{\n      //   fieldGroup: { borderRadius: '3px' }\n      // }}\n      {...props}\n    />\n  )\n}\n\nexport default BaseTextField;\n","import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\n * real DOM parent when present.\n *\n * @public\n */\nexport function getParent(child: HTMLElement, allowVirtualParents: boolean = true): HTMLElement | null {\n  return child && ((allowVirtualParents && getVirtualParent(child)) || (child.parentNode && (child.parentNode as HTMLElement)));\n}\n","import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child: HTMLElement): HTMLElement | undefined {\n  let parent: HTMLElement | undefined;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}\n","import { IVirtualElement } from './IVirtualElement';\n/**\n * Determines whether or not an element has the virtual hierarchy extension.\n *\n * @public\n */\nexport function isVirtualElement(element: HTMLElement | IVirtualElement): element is IVirtualElement {\n  return element && !!(<IVirtualElement>element)._virtual;\n}\n","import React from 'react';\nimport BaseModal from 'components/BaseModal';\nimport { PrimaryButton, DefaultButton } from 'components/BaseButton';\nimport { useTranslation } from 'react-i18next';\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  marginRight10: {\n    marginRight: 10\n  }\n}))\n\nconst ConfirmModal = ({ isOpen, onClose, title, content, onConfirm, confrimText }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  return (\n    <BaseModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={title}\n    >\n      <div style={{ width: 350 }}>\n        <p style={{ whiteSpace: 'pre-line', wordBreak: 'break-all' }}>{content}</p>\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'flex-end', paddingTop: 10 }}>\n        <DefaultButton\n          children={t('cancel')}\n          classes={{ root: classes.marginRight10 }}\n          onClick={() => {\n            onClose();\n          }}\n        />\n        <PrimaryButton\n          children={confrimText ? confrimText : t('confirm')}\n          onClick={() => {\n            onConfirm ? onConfirm() : null;\n            onClose();\n          }}\n        />\n      </div>\n    </BaseModal>\n  );\n};\n\nConfirmModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  content: PropTypes.string,\n  onConfirm: PropTypes.func,\n  confrimText: PropTypes.string\n};\n\nexport default ConfirmModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 200,\n    height: 40,\n    '& .MuiFormLabel-root': {\n      fontSize: 14\n    },\n    '& .MuiInputLabel-formControl': {\n      top: -5\n    },\n    '& .Mui-focused':{\n      top: 0\n    }\n  }\n}))\n\nconst BaseAutocomplete = ({ placeholder, textFieldProps, ...props }) => {\n  const classes = useStyles();\n  return (\n    <Autocomplete\n      className={classes.root}\n      disableClearable\n      freeSolo\n      options={[]}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          InputProps={{\n            style: { height: 40, fontSize: 16 }\n          }}\n          // inputStyle={{ textAlign: 'center' }}\n          label={placeholder}\n          variant=\"outlined\"\n          {...textFieldProps}\n        />\n      )}\n      {...props}\n    />\n  );\n};\n\nBaseAutocomplete.propTypes = {\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  textFieldProps: PropTypes.object\n};\n\nexport default BaseAutocomplete;\n","import React from 'react';\n\n// ^ Material-ui Componets(Functions)\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableBody from '@material-ui/core/TableBody';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// ^ Plugins\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  pagination: {\n    '& .MuiTablePagination-selectRoot': {\n      fontSize: '14px'\n    }\n  }\n}))\n\n/**\n * @author elvis\n * @prop {array} columns -- TableHead 每一個欄位\n * @prop {function} setPage -- 設定現在是在哪一頁\n * @prop {number} page -- 當前的頁數(第一頁是 0)\n * @prop {function} setRowsPerPage -- 設定每一頁顯示幾筆\n * @prop {number} rowsPerPage -- 每一頁顯示幾筆的數字\n * @prop {string} labelRowsPerPage -- '每行幾頁'的文字，可自由替換\n * @prop {array} rowsPerPageOptions -- 可以提供一次顯示幾筆資料的陣列選項\n * eg. [10, 50, 100]\n * @prop {array} rows -- 處理好的要顯示的資料\n * @prop {object} PaperStyle -- Paper style\n * @prop {object} TableContainerStyle -- TableContainer 這個 component 的 style 物件\n * @prop {number || undefined} exceptionActionGivenTotalCount -- 當後端有幫忙做分頁功能的時候，需要給定總數才能work\n * @prop {function instance} ordering -- 排序的依據\n * @prop {number} selectionMode -- 選擇表格模式\n * 0 (ckeckbox all)\n * 1 (each row checkbox, not include header checkbox)\n * @prop {function} itemCheckedChange --\n * @prop {function} itemCheckedAllChange --\n * @prop {object} itemCheckedProps --\n * @prop {object} itemCheckedData --\n * @prop {boolean} itemChecked --\n * @prop {object} classNameObj -- className 的物件\n * @description 加入相對應必要參數，完成表格\n * @return 表格元件\n*/\n\nfunction BasePaper({\n  columns,\n  setPage,\n  page,\n  setRowsPerPage,\n  rowsPerPage,\n  labelRowsPerPage,\n  rowsPerPageOptions = [10, 50, 100],\n  rowsPerPageOptionsRemoveAll = false,\n  rows,\n  PaperStyle,\n  TableContainerStyle,\n  exceptionActionGivenTotalCount,\n  ordering,\n  selectionMode,\n  itemCheckedChange,\n  itemCheckedAllChange,\n  itemCheckedProps,\n  itemCheckedData = [],\n  itemChecked = false,\n  getKey,\n  isLoading,\n  classNameObj,\n  onChangePage,\n  onChangeRowsPerPage\n}) {\n\n  // $ init data\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  // - methods\n  const selectedModeColumns = (selected) => {\n    const newColumns = [...columns]\n    switch (selected) {\n      case 0:\n        newColumns.unshift({ id: 'checkedMode', key: 'checkedMode' })\n        return newColumns\n      case 1:\n        newColumns.unshift({ id: 'checkedMode', key: 'checkedMode' })\n        return newColumns\n      default:\n        return columns\n    }\n  }\n\n  const defaultColumns = selectedModeColumns(selectionMode).map(item => {\n    const result = { ...item };\n\n    if (result.key === 'checkedMode') {\n      result.onTableCellRender = (row) => {\n        if (itemChecked) {\n          return (\n            <Checkbox\n              checked={itemCheckedData.indexOf(row) > -1}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n              onChange={(e, checked) => itemCheckedChange(e, checked, row)}\n              {...itemCheckedProps}\n            />\n          )\n        } else {\n          return (\n            <Checkbox\n              inputProps={{ 'aria-label': 'select all desserts' }}\n              onChange={(e, checked) => itemCheckedChange(e, checked, row)}\n              {...itemCheckedProps}\n            />\n          )\n        }\n      }\n    }\n\n    if (!result.onTableCellRender) {\n      result.onTableCellRender = (row) => {\n        const value = row[item.id];\n        return item.format !== undefined\n          ? Array.isArray(value) ? item.format(value) : value\n          : value\n      }\n    }\n\n    return result;\n  })\n\n  /**\n   * @author odin\n   * @param {string} type -- 要輸出的樣式種類\n   * @param {object} field -- 單個 column 傳進來的物件\n   * @description 抽取特定種類的 style 物件\n   * @return style 物件\n  */\n  const extractCellStyle = (type, field) => {\n    const { cellStyle } = field;\n\n    if(type === 'th' && cellStyle) {\n      const { th } = cellStyle;\n      return th ? th : {};\n    } else if(type === 'td' && cellStyle) {\n      const { td } = cellStyle;\n      return td ? td : {};\n    }\n  }\n\n  /**\n   * @author odin\n   * @param {array} row -- 單個 td 的資料\n   * @param {number} index -- 該資料在陣列中的 index\n   * @description 渲染出 tr + 很多個 td 的結構\n   * @return tr > td * n 的 Dom\n  */\n  const returnTdCell = (row, index) => (\n    <TableRow key={index}>\n      {\n        defaultColumns.map(field => {\n\n          const tdStyle = extractCellStyle('td', field)\n          const { width } = field\n          return (\n            <TableCell\n              key={field.id}\n              style={{ ...tdStyle }}\n              width={width}\n            >\n              {field.onTableCellRender(row)}\n            </TableCell>\n          )\n        })\n      }\n    </TableRow>\n  );\n\n  const handleChangePage = (event, newPageIndex) => {\n    setPage(newPageIndex);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper\n      className={`${classNameObj?.paper}`}\n      elevation={0}\n      square\n      style={\n        isLoading\n          ? { display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%', borderRadius: 4 }\n          : { display: 'flex', flexDirection: 'column', height: '100%', borderRadius: 4, ...PaperStyle }\n      }\n    >\n      {\n        isLoading\n          ? <CircularProgress />\n          :\n          <>\n            <TableContainer style={{ backgroundColor: '#fff', position: 'relative', flex: 1, borderRadius: 4, ...TableContainerStyle }}>\n              <Table\n                className={`${classNameObj?.table}`}\n                stickyHeader\n                style={{ tableLayout: 'auto', whiteSpace: 'nowrap' }}\n              >\n                <TableHead>\n                  <TableRow>\n                    {\n                      selectionMode === 0 &&\n                  <TableCell\n                    padding=\"checkbox\"\n                    style={{ textAlign: 'center' }}\n                  >\n                    <Checkbox\n                      // checked={rowCount > 0 && numSelected === rowCount}\n                      // indeterminate={numSelected > 0 && numSelected < rowCount}\n                      inputProps={{ 'aria-label': 'select all desserts' }}\n                      onChange={(e, checked) => {\n                        itemCheckedAllChange(e, checked, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage))\n                      }}\n                    />\n                  </TableCell>\n                    }\n                    {\n                      selectionMode === 1 &&\n                  <TableCell\n                    padding=\"checkbox\"\n                    style={{ textAlign: 'center' }}\n                  />\n                    }\n                    {\n                      columns.map(field => {\n                        const { width } = field;\n                        const thStyle = extractCellStyle('th', field);\n\n                        if (field.onColumnClick === undefined) {\n                          return (\n                            <TableCell\n                              key={field.id}\n                              style={{\n                                ...thStyle\n                              }}\n                              width={width}\n                            >\n                              {field.label}\n                            </TableCell>\n                          )\n                        } else {\n                          return (\n                            <TableCell\n                              key={field.id}\n                              style={{\n                                ...thStyle\n                              }}\n                              width={width}\n                            >\n                              <TableSortLabel\n                                active={field.id === ordering.field ? true : false}\n                                direction={\n                                  field.onColumnClick !== undefined\n                                    ?\n                                    field.id === ordering.field\n                                      ? ordering.descending ? 'desc' : 'asc'\n                                      : 'asc'\n                                    :\n                                    'asc'\n                                }\n                                onClick={\n                                  field.onColumnClick !== undefined\n                                    ? (e) => field.onColumnClick(e, field.id)\n                                    : () => {}\n                                }\n                              >\n                                {field.label}\n                              </TableSortLabel>\n                            </TableCell>\n                          )\n                        }\n                      })\n                    }\n                  </TableRow>\n                </TableHead>\n                <TableBody className={`${classNameObj?.tbody}`}>\n                  {\n                    // 根據\n                    // 1. 一次打完API取得所有的筆數\n                    // 2. 後端先過濾過的資料\n                    // 兩種不同的狀況，利用這個判斷來分別渲染結果到畫面上\n                    (() => {\n                      const data = ((rows.length <= rowsPerPage) || (rowsPerPage === -1)) ? rows : rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                      return data.map((row, index) => (returnTdCell(row, getKey ? getKey(row) : index)))\n                    })()\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              className={classes.pagination}\n              component=\"div\"\n              count={exceptionActionGivenTotalCount ? exceptionActionGivenTotalCount : rows.length}\n              labelDisplayedRows={({ from, to, count }) => (\n                `${from}-${to} ${t('of')} ${count !== -1 ? count : `more than ${to}` }`)\n              }\n              labelRowsPerPage={\n                labelRowsPerPage ? labelRowsPerPage : t('labelRowsPerPage')\n              }\n              onChangePage={onChangePage || handleChangePage}\n              onChangeRowsPerPage={onChangeRowsPerPage || handleChangeRowsPerPage}\n              page={page}\n              rowsPerPage={rowsPerPage}\n              rowsPerPageOptions={\n                rowsPerPageOptionsRemoveAll\n                  ? [...rowsPerPageOptions]\n                  : [...rowsPerPageOptions, { label: 'All', value: -1 }]\n              }\n            />\n          </>\n      }\n    </Paper>\n  )\n}\n\nBasePaper.propTypes = {\n  columns: PropTypes.array.isRequired,\n  setPage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  setRowsPerPage: PropTypes.func.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  labelRowsPerPage: PropTypes.string,\n  rowsPerPageOptions: PropTypes.array,\n  rowsPerPageOptionsRemoveAll: PropTypes.bool,\n  rows: PropTypes.array.isRequired,\n  PaperStyle: PropTypes.object,\n  TableContainerStyle: PropTypes.object,\n  exceptionActionGivenTotalCount: PropTypes.number,\n  ordering: PropTypes.object,\n  selectionMode: PropTypes.number,\n  itemCheckedChange: PropTypes.func,\n  itemCheckedAllChange: PropTypes.func,\n  itemCheckedProps: PropTypes.object,\n  itemCheckedData: PropTypes.array,\n  itemChecked: PropTypes.bool,\n  getKey: PropTypes.func,\n  isLoading: PropTypes.bool,\n  classNameObj: PropTypes.object,\n  onChangePage: PropTypes.func,\n  onChangeRowsPerPage: PropTypes.func\n};\n\nexport default BasePaper;\n","import * as React from 'react';\nimport { ICustomizations } from './Customizations';\n\nexport interface ICustomizerContext {\n  customizations: ICustomizations;\n}\n\nexport const CustomizerContext = React.createContext<ICustomizerContext>({\n  customizations: {\n    inCustomizerContext: false,\n    settings: {},\n    scopedSettings: {}\n  }\n});\n","import { Stylesheet } from '@uifabric/merge-styles';\nimport { getWindow } from './dom/getWindow';\n\n// Initialize global window id.\nconst CURRENT_ID_PROPERTY = '__currentId__';\nconst DEFAULT_ID_STRING = 'id__';\n\n// tslint:disable-next-line:no-any\nlet _global: any = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\n// tslint:disable-next-line:no-any\nfunction checkProperties(a: any, b: any): boolean {\n  for (let propName in a) {\n    if (a.hasOwnProperty(propName)) {\n      if (!b.hasOwnProperty(propName) || b[propName] !== a[propName]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * Compares a to b and b to a.\n *\n * @public\n */\nexport function shallowCompare<TA, TB>(a: TA, b: TB): boolean {\n  return checkProperties(a, b) && checkProperties(b, a);\n}\n\n/**\n * Makes a resulting merge of a bunch of objects. Pass in the target object followed by 1 or more\n * objects as arguments and they will be merged sequentially into the target. Note that this will\n * shallow merge; it will not create new cloned values for target members.\n *\n * @public\n * @param target - Target object to merge following object arguments into.\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n * @returns Resulting merged target.\n */\n// tslint:disable-next-line:no-any\nexport function assign(target: any, ...args: any[]): any {\n  return filteredAssign.apply(this, [null, target].concat(args));\n}\n\n/**\n * Makes a resulting merge of a bunch of objects, but allows a filter function to be passed in to filter\n * the resulting merges. This allows for scenarios where you want to merge \"everything except that one thing\"\n * or \"properties that start with data-\". Note that this will shallow merge; it will not create new cloned\n * values for target members.\n *\n * @public\n * @param isAllowed - Callback to determine if the given propName is allowed in the result.\n * @param target - Target object to merge following object arguments into.\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n * @returns Resulting merged target.\n */\n// tslint:disable-next-line:no-any\nexport function filteredAssign(isAllowed: (propName: string) => boolean, target: any, ...args: any[]): any {\n  target = target || {};\n\n  for (let sourceObject of args) {\n    if (sourceObject) {\n      for (let propName in sourceObject) {\n        if (sourceObject.hasOwnProperty(propName) && (!isAllowed || isAllowed(propName))) {\n          target[propName] = sourceObject[propName];\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\n// Configure ids to reset on stylesheet resets.\nconst stylesheet = Stylesheet.getInstance();\n\nif (stylesheet && stylesheet.onReset) {\n  stylesheet.onReset(resetIds);\n}\n\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix?: string): string {\n  let index = _global[CURRENT_ID_PROPERTY]++;\n\n  return (prefix || DEFAULT_ID_STRING) + index;\n}\n\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter: number = 0): void {\n  _global[CURRENT_ID_PROPERTY] = counter;\n}\n\n/* Takes an enum and iterates over each value of the enum (as a string), running the callback on each, returning a mapped array.\n * The callback takes as a first parameter the string that represents the name of the entry, and the second parameter is the\n * value of that entry, which is the value you'd normally use when using the enum (usually a number).\n * */\nexport function mapEnumByName<T>(\n  // tslint:disable-next-line:no-any\n  theEnum: any,\n  callback: (name?: string, value?: string | number) => T | undefined\n): (T | undefined)[] | undefined {\n  // map<any> to satisfy compiler since it doesn't realize we strip out undefineds in the .filter() call\n  return Object.keys(theEnum)\n    .map<T | undefined>((p: string | number) => {\n      // map on each property name as a string\n      if (String(Number(p)) !== p) {\n        // if the property is not just a number (because enums in TypeScript will map both ways)\n        return callback(p as string, theEnum[p]);\n      }\n    })\n    .filter((v: T | undefined) => !!v); // only return elements with values\n}\n\n/**\n * Get all values in an object dictionary\n *\n * @param obj - The dictionary to get values for\n */\n// tslint:disable-next-line:no-any\nexport function values<T>(obj: any): T[] {\n  return Object.keys(obj).reduce((arr: T[], key: string): T[] => {\n    arr.push(obj[key]);\n    return arr;\n  }, []);\n}\n","import * as React from 'react';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Image}\n */\nexport interface IImage {}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IImageStyleProps, IImageStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Component\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * Used to determine how the image is scaled and cropped to fit the frame.\n   *\n   * @defaultvalue If both dimensions are provided, then the image is fit using ImageFit.scale.\n   * Otherwise, the image won't be scaled or cropped.\n   */\n  imageFit?: ImageFit;\n\n  /**\n   * Deprecated at v1.3.6, to replace the src in case of errors, use `onLoadingStateChange` instead and\n   * rerender the Image with a difference src.\n   * @deprecated Use `onLoadingStateChange` instead and\n   * rerender the Image with a difference src.\n   */\n  errorSrc?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * Optional callback method for when the image load state has changed.\n   * The 'loadState' parameter indicates the current state of the Image.\n   */\n  onLoadingStateChange?: (loadState: ImageLoadState) => void;\n\n  /**\n   * Specifies the cover style to be used for this image. If not\n   * specified, this will be dynamically calculated based on the\n   * aspect ratio for the image.\n   */\n  coverStyle?: ImageCoverStyle;\n}\n\n/**\n * The possible methods that can be used to fit the image.\n * {@docCategory Image}\n */\nexport enum ImageFit {\n  /**\n   * The image is not scaled. The image is centered and cropped within the content box.\n   */\n  center = 0,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while being fully contained within the frame. The image will\n   * be centered horizontally and vertically within the frame. The space in the top and bottom or in the sides of\n   * the frame will be empty depending on the difference in aspect ratio between the image and the frame.\n   */\n  contain = 1,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while filling the frame. Portions of the image will be cropped from\n   * the top and bottom, or from the sides, depending on the difference in aspect ratio between the image and the frame.\n   */\n  cover = 2,\n\n  /**\n   * Neither the image nor the frame are scaled. If their sizes do not match, the image will either be cropped or the\n   * frame will have empty space.\n   */\n  none = 3,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height or width is less than the Image frame's height or width,\n   * but if both natural height and width are larger than the frame it will behave as ImageFit.cover.\n   */\n  centerCover = 4,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height and width is less than the Image frame's height and width,\n   * but if either natural height or width are larger than the frame it will behave as ImageFit.contain.\n   */\n  centerContain = 5\n}\n\n/**\n * The cover style to be used on the image\n * {@docCategory Image}\n */\nexport enum ImageCoverStyle {\n  /**\n   * The image will be shown at 100% height of container and the width will be scaled accordingly\n   */\n  landscape = 0,\n\n  /**\n   * The image will be shown at 100% width of container and the height will be scaled accordingly\n   */\n  portrait = 1\n}\n\n/**\n * {@docCategory Image}\n */\nexport enum ImageLoadState {\n  /**\n   * The image has not yet been loaded, and there is no error yet.\n   */\n  notLoaded = 0,\n\n  /**\n   * The image has been loaded successfully.\n   */\n  loaded = 1,\n\n  /**\n   * An error has been encountered while loading the image.\n   */\n  error = 2,\n\n  /**\n   * Deprecated at v1.3.6, to replace the src in case of errors, use `onLoadingStateChange` instead\n   * and rerender the Image with a difference src.\n   * @deprecated Use `onLoadingStateChange` instead\n   * and rerender the Image with a difference src.\n   */\n  errorLoaded = 3\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * If true, the image is loaded\n   */\n  isLoaded?: boolean;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * If true the image is coverStyle landscape instead of portrait\n   */\n  isLandscape?: boolean;\n\n  /**\n   * ImageFit booleans for center, cover, contain, centerContain, centerCover, none\n   */\n  isCenter?: boolean;\n  isContain?: boolean;\n  isCover?: boolean;\n  isCenterContain?: boolean;\n  isCenterCover?: boolean;\n  isNone?: boolean;\n\n  /**\n   * if true image load is in error\n   */\n  isError?: boolean;\n\n  /**\n   * if true, imageFit is undefined\n   */\n  isNotImageFit?: boolean;\n\n  /**\n   * Image width value\n   */\n  width?: number | string;\n\n  /**\n   * Image height value\n   */\n  height?: number | string;\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyles {\n  /**\n   * Style set for the root div element.\n   */\n  root: IStyle;\n  /**\n   * Style set for the img element.\n   */\n  image: IStyle;\n}\n","import { IIconStyleProps, IIconStyles } from './Icon.types';\nimport { mergeStyleSets } from '../../Styling';\n\n/** Class names used in themeable and non-themeable Icon components */\nexport const classNames = mergeStyleSets({\n  root: {\n    display: 'inline-block'\n  },\n  placeholder: [\n    'ms-Icon-placeHolder',\n    {\n      width: '1em'\n    }\n  ],\n  image: [\n    'ms-Icon-imageContainer',\n    {\n      overflow: 'hidden'\n    }\n  ]\n});\n/** Class name used only in non-themeable Icon components */\nexport const MS_ICON = 'ms-Icon';\n\nexport const getStyles = (props: IIconStyleProps): IIconStyles => {\n  const { className, iconClassName, isPlaceholder, isImage, styles } = props;\n\n  return {\n    root: [\n      isPlaceholder && classNames.placeholder,\n      classNames.root,\n      isImage && classNames.image,\n      iconClassName,\n      className,\n      styles && styles.root,\n      styles && styles.imageContainer\n    ]\n  };\n};\n","import { getParent } from './getParent';\n/**\n * Finds the first parent element where the matchFunction returns true\n * @param element - element to start searching at\n * @param matchFunction - the function that determines if the element is a match\n * @returns the matched element or null no match was found\n */\nexport function findElementRecursive(element: HTMLElement | null, matchFunction: (element: HTMLElement) => boolean): HTMLElement | null {\n  if (!element || element === document.body) {\n    return null;\n  }\n  return matchFunction(element) ? element : findElementRecursive(getParent(element), matchFunction);\n}\n","import { IButtonStyles } from './Button.types';\nimport { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, ITheme, IRawStyle, getFocusStyle, FontSizes, hiddenContentStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0\n};\n\nconst iconStyle = {\n  fontSize: FontSizes.icon,\n  margin: '0 4px',\n  height: '16px',\n  lineHeight: '16px',\n  textAlign: 'center',\n  verticalAlign: 'middle',\n  flexShrink: 0\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction(\n  (theme: ITheme): IButtonStyles => {\n    const { semanticColors } = theme;\n\n    const border = semanticColors.buttonBorder;\n    const disabledBackground = semanticColors.disabledBackground;\n    const disabledText = semanticColors.disabledText;\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      border: 'none',\n      outlineColor: 'ButtonText'\n    };\n\n    return {\n      root: [\n        getFocusStyle(theme, { inset: -1, highContrastStyle: buttonHighContrastFocus }),\n        theme.fonts.medium,\n        {\n          boxSizing: 'border-box',\n          border: '1px solid ' + border,\n          userSelect: 'none',\n          display: 'inline-block',\n          textDecoration: 'none',\n          textAlign: 'center',\n          cursor: 'pointer',\n          verticalAlign: 'top',\n          padding: '0 16px',\n          borderRadius: 0,\n          margin: 0,\n          selectors: {\n            // IE11 workaround for preventing shift of child elements of a button when active.\n            ':active > *': {\n              position: 'relative',\n              left: 0,\n              top: 0\n            }\n          }\n        }\n      ],\n\n      rootDisabled: [\n        getFocusStyle(theme, { inset: -1, highContrastStyle: buttonHighContrastFocus }),\n        {\n          backgroundColor: disabledBackground,\n          color: disabledText,\n          cursor: 'default',\n          pointerEvents: 'none',\n          selectors: {\n            ':hover': noOutline,\n            ':focus': noOutline,\n            [HighContrastSelector]: {\n              color: 'grayText',\n              bordercolor: 'grayText'\n            }\n          }\n        }\n      ],\n\n      iconDisabled: {\n        color: disabledText\n      },\n\n      menuIconDisabled: {\n        color: disabledText\n      },\n\n      flexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n\n      textContainer: {\n        flexGrow: 1\n      },\n\n      icon: iconStyle,\n\n      menuIcon: [\n        iconStyle,\n        {\n          fontSize: FontSizes.small\n        }\n      ],\n\n      label: {\n        margin: '0 4px',\n        lineHeight: '100%'\n      },\n\n      screenReaderText: hiddenContentStyle\n    };\n  }\n);\n","import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { IFocusZoneProps } from '../../FocusZone';\nimport { IIconProps } from '../Icon/Icon.types';\nimport { ICalloutProps, ICalloutContentStyleProps, Target } from '../../Callout';\nimport { ITheme, IStyle } from '../../Styling';\nimport { IButtonStyles } from '../../Button';\nimport { IRefObject, IBaseProps, IRectangle, IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\nimport { IContextualMenuClassNames, IMenuItemClassNames } from './ContextualMenu.classNames';\nexport { DirectionalHint } from '../../common/DirectionalHint';\nimport { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport { IContextualMenuItemProps, IContextualMenuRenderItem, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport { IKeytipProps } from '../../Keytip';\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport enum ContextualMenuItemType {\n  Normal = 0,\n  Divider = 1,\n  Header = 2,\n  Section = 3\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenu {}\n\n/**\n * React.Props is deprecated and we're removing it in 6.0. Usage of 'any' should go away with it.\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuProps extends IBaseProps<IContextualMenu>, IWithResponsiveModeState {\n  /**\n   * Optional callback to access the IContextualMenu interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IContextualMenu>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles>;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the ContextualMenu\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * The target that the ContextualMenu should try to position itself based on.\n   * It can be either an Element a querySelector string of a valid Element\n   * or a MouseEvent. If MouseEvent is given then the origin point of the event will be used.\n   */\n  target?: Target;\n\n  /**\n   * How the element should be positioned\n   * @defaultvalue DirectionalHint.bottomAutoEdge\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * The gap between the ContextualMenu and the target\n   * @defaultvalue 0\n   */\n  gapSpace?: number;\n\n  /**\n   * The width of the beak.\n   * @defaultvalue 16\n   */\n  beakWidth?: number;\n\n  /**\n   * If true the context menu will render as the same width as the target element\n   * @defaultvalue false\n   */\n  useTargetWidth?: boolean;\n\n  /**\n   * If true the context menu will have a minimum width equal to the width of the target element\n   * @defaultvalue false\n   */\n  useTargetAsMinWidth?: boolean;\n\n  /**\n   * The bounding rectangle for which the contextual menu can appear in.\n   */\n  bounds?: IRectangle;\n\n  /**\n   * If true then the beak is visible. If false it will not be shown.\n   */\n  isBeakVisible?: boolean;\n\n  /**\n   * If true the position returned will have the menu element cover the target.\n   * If false then it will position next to the target;\n   * @defaultvalue false\n   */\n\n  coverTarget?: boolean;\n\n  /**\n   * If true the positioning logic will prefer to flip edges rather than to nudge the rectangle to fit within bounds,\n   * thus making sure the element aligns perfectly with target's alignment edge\n   */\n  alignTargetEdge?: boolean;\n\n  /**\n   * Collection of menu items.\n   * @defaultvalue []\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * Aria Labelled by labelElementId\n   * @defaultvalue null\n   */\n  labelElementId?: string;\n\n  /**\n   * Whether to focus on the menu when mounted.\n   * @defaultvalue true\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * Whether to focus on the contextual menu container (as opposed to the first menu item).\n   * @defaultvalue null\n   */\n  shouldFocusOnContainer?: boolean;\n\n  /**\n   * Callback when the ContextualMenu tries to close. If dismissAll is true then all\n   * submenus will be dismissed.\n   */\n  onDismiss?: (ev?: any, dismissAll?: boolean) => void;\n\n  /**\n   * Click handler which is invoked if onClick is not passed for individual contextual\n   * menu item.\n   * Returning true will dismiss the menu even if ev.preventDefault() was called.\n   */\n  onItemClick?: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, item?: IContextualMenuItem) => boolean | void;\n\n  /**\n   * Whether this menu is a submenu of another menu or not.\n   */\n  isSubMenu?: boolean;\n\n  /**\n   * DOM id to tag the ContextualMenu with, for reference.\n   * Should be used for 'aria-owns' and other such uses, rather than direct reference for programmatic purposes.\n   */\n  id?: string;\n\n  /**\n   * Aria label for accessibility for the ContextualMenu.\n   * If none specified no aria label will be applied to the ContextualMenu.\n   */\n  ariaLabel?: string;\n\n  /**\n   * If true do not render on a new layer. If false render on a new layer.\n   * @defaultvalue false\n   */\n  doNotLayer?: boolean;\n\n  /**\n   * If true the position will not change sides in an attempt to fit the ContextualMenu within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * Callback for when the contextualmenu has been opened.\n   */\n  onMenuOpened?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Callback for when the contextualmenu is being closed (removing from the DOM)\n   */\n  onMenuDismissed?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Pass in custom callout props\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Optional title to be displayed on top of the menu.\n   */\n  title?: string;\n\n  /**\n   * Method to provide the classnames to style the contextual menu. Default value is the getMenuClassnames func\n   * defined in ContextualMenu.classnames.\n   * Deprecated, use `styles` prop of `IContextualMenuProps` to leverage mergeStyles API.\n   * @deprecated Use `styles` prop of `IContextualMenuProps` to leverage mergeStyles API.\n   */\n  getMenuClassNames?: (theme: ITheme, className?: string) => IContextualMenuClassNames;\n\n  /** Method to call when trying to render a submenu. */\n  onRenderSubMenu?: IRenderFunction<IContextualMenuProps>;\n\n  /**\n   * Method to override the render of the list of menu items.\n   */\n  onRenderMenuList?: IRenderFunction<IContextualMenuListProps>;\n\n  /**\n   * Delay (in milliseconds) to wait before expanding / dismissing a submenu on mouseEnter or mouseLeave\n   */\n  subMenuHoverDelay?: number;\n\n  /**\n   * Method to override the render of the individual menu items\n   * @defaultvalue ContextualMenuItem\n   */\n  contextualMenuItemAs?: React.ComponentClass<IContextualMenuItemProps> | React.StatelessComponent<IContextualMenuItemProps>;\n\n  /**\n   * Props to pass down to the FocusZone.\n   * NOTE: the default FocusZoneDirection will be used unless a direction\n   * is specified in the focusZoneProps (even if other focusZoneProps are defined)\n   * @defaultvalue \\{direction: FocusZoneDirection.vertical\\}\n   */\n  focusZoneProps?: IFocusZoneProps;\n\n  /**\n   * If specified, renders the ContextualMenu in a hidden state.\n   * Use this flag, rather than rendering a ContextualMenu conditionally based on visibility,\n   * to improve rendering performance when it becomes visible.\n   * Note: When ContextualMenu is hidden its content will not be rendered. It will only render\n   * once the ContextualMenu is visible.\n   */\n  hidden?: boolean;\n\n  /**\n   * If true, the contextual menu will not be updated until\n   * focus enters the menu via other means. This will only result\n   * in different behavior when shouldFocusOnMount = false\n   * @defaultvalue null\n   */\n  delayUpdateFocusOnHover?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuListProps {\n  items: IContextualMenuItem[];\n  totalItemCount: number;\n  hasCheckmarks: boolean;\n  hasIcons: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuItem {\n  /**\n   * Optional callback to access the IContextualMenuRenderItem interface. This will get passed down to ContextualMenuItem.\n   */\n  componentRef?: IRefObject<IContextualMenuRenderItem>;\n\n  /**\n   * Unique id to identify the item\n   */\n  key: string;\n\n  /**\n   * Text description for the menu item to display\n   */\n  text?: string;\n\n  /**\n   * Seconday description for the menu item to display\n   */\n  secondaryText?: string;\n\n  itemType?: ContextualMenuItemType;\n\n  /**\n   * Props that go to the IconComponent\n   */\n  iconProps?: IIconProps;\n\n  /**\n   * Custom render function for the menu item icon\n   */\n  onRenderIcon?: IRenderFunction<IContextualMenuItemProps>;\n\n  /**\n   * Props that go to the IconComponent used for the chevron.\n   */\n  submenuIconProps?: IIconProps;\n\n  /**\n   * Whether the menu item is disabled\n   * @defaultvalue false\n   */\n  disabled?: boolean;\n\n  /**\n   * If the menu item is a split button, this prop disables purely the primary action of the button.\n   * @defaultvalue false\n   */\n  primaryDisabled?: boolean;\n\n  /**\n   * [TODO] Not Yet Implemented\n   */\n  shortCut?: string;\n\n  /**\n   * Whether or not this menu item can be checked\n   * @defaultvalue false\n   */\n  canCheck?: boolean;\n\n  /**\n   * Whether or not this menu item is currently checked.\n   * @defaultvalue false\n   */\n  checked?: boolean;\n\n  /**\n   * Whether or not this menu item is a splitButton.\n   * @defaultvalue false\n   */\n  split?: boolean;\n\n  /**\n   * Any custom data the developer wishes to associate with the menu item.\n   */\n  data?: any;\n\n  /**\n   * Callback issued when the menu item is invoked. If ev.preventDefault() is called in onClick, click will not close menu.\n   * Returning true will dismiss the menu even if ev.preventDefault() was called.\n   */\n  onClick?: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, item?: IContextualMenuItem) => boolean | void;\n\n  /**\n   * An optional URL to navigate to upon selection\n   */\n  href?: string;\n\n  /**\n   * An optional target when using href\n   */\n  target?: string;\n\n  /**\n   * An optional rel when using href. If target is _blank rel is defaulted to a value to prevent clickjacking.\n   */\n  rel?: string;\n\n  /**\n   * Properties to apply to a submenu to this item.\n   *\n   * The ContextualMenu will provide default values for `target`, `onDismiss`, `isSubMenu`,\n   * `id`, `shouldFocusOnMount`, `directionalHint`, `className`, and `gapSpace`, all of which\n   * can be overridden.\n   */\n  subMenuProps?: IContextualMenuProps;\n\n  /**\n   * Method to provide the classnames to style the individual items inside a menu.\n   * Deprecated, use `styles` prop of `IContextualMenuItemProps` to leverage mergeStyles API.\n   * @deprecated Use `styles` prop of `IContextualMenuItemProps` to leverage mergeStyles API.\n   */\n  getItemClassNames?: (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean\n  ) => IMenuItemClassNames;\n\n  /**\n   * Optional IContextualMenuItemProps overrides to customize behaviors such as item styling via `styles`.\n   */\n  itemProps?: Partial<IContextualMenuItemProps>;\n\n  /**\n   * Method to provide the classnames to style the Vertical Divider of a split button inside a menu.\n   * Default value is the getVerticalDividerClassnames func defined in ContextualMenu.classnames\n   * @defaultvalue getSplitButtonVerticalDividerClassNames\n   */\n  getSplitButtonVerticalDividerClassNames?: (theme: ITheme) => IVerticalDividerClassNames;\n\n  /**\n   *  Properties to apply to render this item as a section.\n   *  This prop is mutually exclusive with subMenuProps.\n   */\n  sectionProps?: IContextualMenuSection;\n\n  /**\n   * Additional css class to apply to the menu item\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * Additional styles to apply to the menu item\n   * Deprecated, use `styles` instead.\n   * @defaultvalue undefined\n   * @deprecated in favor of the `styles` prop to leverage mergeStyles API.\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Optional accessibility label (aria-label) attribute that will be stamped on to the element.\n   * If none is specified, the aria-label attribute will contain the item name\n   */\n  ariaLabel?: string;\n\n  /**\n   * Optional title for displaying text when hovering over an item.\n   */\n  title?: string;\n\n  /**\n   * Method to custom render this menu item.\n   * For keyboard accessibility, the top-level rendered item should be a focusable element\n   * (like an anchor or a button) or have the `data-is-focusable` property set to true.\n   *\n   * The function receives a function that can be called to dismiss the menu as a second argument.\n   *  This can be used to make sure that a custom menu item click dismisses the menu.\n   * @defaultvalue undefined\n   */\n  onRender?: (item: any, dismissMenu: (ev?: any, dismissAll?: boolean) => void) => React.ReactNode;\n\n  /**\n   * A function to be executed onMouseDown. This is executed before an onClick event and can\n   * be used to interrupt native on click events as well. The click event should still handle\n   * the commands. This should only be used in special cases when react and non-react are mixed.\n   */\n  onMouseDown?: (item: IContextualMenuItem, event: React.MouseEvent<HTMLElement>) => void;\n\n  /**\n   * Optional override for the role attribute on the menu button. If one is not provided, it will\n   * have a value of menuitem or menuitemcheckbox.\n   */\n  role?: string;\n\n  /**\n   * When rendering a custom component that is passed in, the component might also be a list of\n   * elements. We want to keep track of the correct index our menu is using based off of\n   * the length of the custom list. It is up to the user to increment the count for their list.\n   */\n  customOnRenderListLength?: number;\n\n  /**\n   * Keytip for this contextual menu item\n   */\n  keytipProps?: IKeytipProps;\n\n  /**\n   * Any additional properties to use when custom rendering menu items.\n   */\n  [propertyName: string]: any;\n\n  /**\n   * This prop is no longer used. All contextual menu items are now focusable when disabled.\n   * @deprecated in 6.38.2 will be removed in 7.0.0\n   */\n  inactive?: boolean;\n\n  /**\n   * Text description for the menu item to display\n   * Deprecated, use `text` instead.\n   * @deprecated Use `text` instead.\n   */\n  name?: string;\n}\n\n/**\n * React.Props is deprecated and we're removing it in 6.0. Usage of 'any' should go away with it.\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSection extends React.ClassAttributes<any> {\n  /**\n   * The items to include inside the section.\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * The optional section title.\n   */\n  title?: string;\n\n  /**\n   * If set to true, the section will display a divider at the top of the section.\n   */\n  topDivider?: boolean;\n\n  /**\n   * If set to true, the section will display a divider at the bottom of the section.\n   */\n  bottomDivider?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IMenuItemStyles extends IButtonStyles {\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  item: IStyle;\n\n  /**\n   * Styles for the content inside the button/link of the menuItem.\n   */\n  linkContent: IStyle;\n\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  anchorLink: IStyle;\n\n  /**\n   * Default icon color style for known icons.\n   */\n  iconColor: IStyle;\n\n  /**\n   * Default style for checkmark icons.\n   */\n  checkmarkIcon: IStyle;\n\n  /**\n   * Styles for the submenu icon of a menu item.\n   */\n  subMenuIcon: IStyle;\n\n  /**\n   * Styles for a divider item of a ConextualMenu.\n   */\n  divider: IStyle;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  // Insert ContextualMenu style props below\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyles {\n  /**\n   * Style override for the contextual menu title.\n   */\n  title: IStyle;\n\n  /**\n   * Style for the container which parents all menu items.\n   */\n  container: IStyle;\n\n  /**\n   * Base styles for the root element of all ContextualMenus.\n   */\n  root: IStyle;\n\n  /**\n   * Styles for the header item of a ContextualMenu\n   */\n  header: IStyle;\n\n  /**\n   * Styles for the list that contains all menuItems.\n   */\n  list: IStyle;\n\n  /**\n   * SubComponent styles.\n   */\n  subComponentStyles: IContextualMenuSubComponentStyles;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSubComponentStyles {\n  /** Refers to the callout that hosts the ContextualMenu options */\n  callout: IStyleFunctionOrObject<ICalloutContentStyleProps, any>;\n\n  /** Refers to the item in the list */\n  menuItem: IStyleFunctionOrObject<IContextualMenuItemStyleProps, any>;\n}\n","import { IContextualMenuItem } from '../../index';\n\n/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\nexport function getIsChecked(item: IContextualMenuItem): boolean | null {\n  if (item.canCheck) {\n    return !!(item.isChecked || item.checked);\n  }\n\n  if (typeof item.isChecked === 'boolean') {\n    return item.isChecked;\n  }\n\n  if (typeof item.checked === 'boolean') {\n    return item.checked;\n  }\n\n  // Item is not checkable.\n  return null;\n}\n\nexport function hasSubmenu(item: IContextualMenuItem): boolean {\n  return !!(item.subMenuProps || item.items);\n}\n\nexport function isItemDisabled(item: IContextualMenuItem): boolean {\n  return !!(item.isDisabled || item.disabled);\n}\n","import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { BaseComponent, getRTL } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IContextualMenuItemProps } from './ContextualMenuItem.types';\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons, classNames } = props;\n\n  const { iconProps } = item;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return <Icon iconName={isItemChecked ? 'CheckMark' : ''} className={classNames.checkmarkIcon} onClick={onClick} />;\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return <Icon iconName={getRTL() ? 'ChevronLeft' : 'ChevronRight'} {...item.submenuIconProps} className={classNames.subMenuIcon} />;\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends BaseComponent<IContextualMenuItemProps, {}> {\n  public render() {\n    const { item, classNames } = this.props;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderCheckMarkIcon(this.props)}\n        {renderItemIcon(this.props)}\n        {renderItemName(this.props)}\n        {renderSecondaryText(this.props)}\n        {renderSubMenuIcon(this.props)}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n}\n","import { memoizeFunction } from '../../Utilities';\nimport { mergeStyleSets, ITheme } from '../../Styling';\nimport { IVerticalDividerClassNames } from './VerticalDivider.types';\n\n/**\n * @deprecated use getStyles exported from VerticalDivider.styles.ts\n */\nexport const getDividerClassNames = memoizeFunction(\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets({\n      wrapper: {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center'\n      },\n      divider: {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt\n      }\n    });\n  }\n);\n","import {\n  concatStyleSets,\n  FontSizes,\n  getFocusStyle,\n  HighContrastSelector,\n  IRawStyle,\n  ITheme,\n  getScreenSelector,\n  ScreenWidthMaxMedium\n} from '../../Styling';\nimport { IMenuItemStyles } from './ContextualMenu.types';\nimport { memoizeFunction } from '../../Utilities';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = '32px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nconst getItemHighContrastStyles = memoizeFunction(\n  (): IRawStyle => {\n    return {\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n          color: 'HighlightText',\n          MsHighContrastAdjust: 'none'\n        }\n      }\n    };\n  }\n);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundChecked;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box'\n        }\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative'\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left'\n        }\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1\n          }\n        }\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        ...getItemHighContrastStyles()\n      },\n      rootFocused: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        ...getItemHighContrastStyles()\n      },\n      rootChecked: {\n        ...getItemHighContrastStyles()\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        ...getItemHighContrastStyles()\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        ...getItemHighContrastStyles()\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%'\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box'\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right'\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        width: '14px',\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0'\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit'\n          },\n          ['$root:hover &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText'\n              }\n            }\n          },\n          ['$root:focus &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText'\n              }\n            }\n          }\n        }\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText'\n          }\n        }\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: FontSizes.small, // 12px\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: FontSizes.icon // 16px\n          }\n        }\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }\n      ]\n    };\n\n    return concatStyleSets(menuItemStyles);\n  }\n);\n","import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport { ITheme, mergeStyleSets, getGlobalClassNames, getScreenSelector, ScreenWidthMaxMedium } from '../../Styling';\nimport { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container: string;\n  root: string;\n  list: string;\n  header: string;\n  title: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item: string;\n  divider: string;\n  root: string;\n  linkContent: string;\n  icon: string;\n  checkmarkIcon: string;\n  subMenuIcon: string;\n  label: string;\n  secondaryText: string;\n  splitContainer: string;\n  splitPrimary: string;\n  splitMenu: string;\n  linkContentMenu: string;\n}\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32 // fontSize of the icon increased from 12px to 16px\n          }\n        }\n      },\n      divider: {\n        height: 16,\n        width: 1\n      }\n    });\n  }\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText'\n};\n\n/**\n * @deprecated To be removed in 7.0.\n * @internal\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * It should be cleaned up in 7.0.\n *\n * TODO: Audit perf. impact of and potentially remove memoizeFunction.\n * https://github.com/OfficeDev/office-ui-fabric-react/issues/5534\n */\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' }\n              }\n            }\n          ],\n        className\n      ],\n      splitPrimary: [\n        styles.root,\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':hover ~ $splitMenu': styles.rootHovered, // when hovering over the splitPrimary also affect the splitMenu\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' }\n              }\n            }\n          ]\n      ],\n      splitMenu: [\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: 28\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' }\n              }\n            }\n          ]\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center'\n        }\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled]\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [classNames.subMenuIcon, styles.subMenuIcon, subMenuClassName],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        {\n          alignItems: 'flex-start'\n        },\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused\n              }\n            }\n          ]\n      ]\n    });\n  }\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className\n  } = props;\n\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className\n  );\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IContextualMenuItemProps, IContextualMenuItemStyleProps, IContextualMenuItemStyles } from './ContextualMenuItem.types';\nimport { ContextualMenuItemBase } from './ContextualMenuItem.base';\nimport { getItemStyles } from './ContextualMenu.classNames';\n\n/**\n * ContextualMenuItem description\n */\nexport const ContextualMenuItem: React.StatelessComponent<IContextualMenuItemProps> = styled<\n  IContextualMenuItemProps,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles\n>(ContextualMenuItemBase, getItemStyles, undefined, { scope: 'ContextualMenuItem' });\n","import * as React from 'react';\nimport { BaseComponent, shallowCompare } from '../../../Utilities';\nimport { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\nimport { IContextualMenuItem } from '../../../ContextualMenu';\n\nexport class ContextualMenuItemWrapper extends BaseComponent<IContextualMenuItemWrapperProps> {\n  public shouldComponentUpdate(newProps: IContextualMenuItemWrapperProps): boolean {\n    return !shallowCompare(newProps, this.props);\n  }\n\n  protected _onItemMouseEnter = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseLeave } = this.props;\n    if (onItemMouseLeave) {\n      onItemMouseLeave(item, ev);\n    }\n  };\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _onItemMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _getSubMenuId = (item: IContextualMenuItem): string | undefined => {\n    const { getSubMenuId } = this.props;\n    if (getSubMenuId) {\n      return getSubMenuId(item);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return undefined;\n  };\n}\n","import * as React from 'react';\nimport { anchorProperties, getNativeProps } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IKeytipDataProps } from '../../KeytipData/KeytipData.types';\n\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\n  private _anchor = React.createRef<HTMLAnchorElement>();\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    let anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n    }\n\n    const subMenuId = this._getSubMenuId(item);\n    const itemHasSubmenu = hasSubmenu(item);\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLAnchorElement>>(item, anchorProperties);\n    const disabled = isItemDisabled(item);\n    const { itemProps } = item;\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    return (\n      <div>\n        <KeytipData keytipProps={item.keytipProps} ariaDescribedBy={nativeProps['aria-describedby']} disabled={disabled}>\n          {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n            <a\n              {...nativeProps}\n              {...keytipAttributes}\n              ref={this._anchor}\n              href={item.href}\n              target={item.target}\n              rel={anchorRel}\n              className={classNames.root}\n              role=\"menuitem\"\n              aria-owns={item.key === expandedMenuItemKey ? subMenuId : undefined}\n              aria-haspopup={itemHasSubmenu || undefined}\n              aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n              aria-posinset={focusableElementIndex + 1}\n              aria-setsize={totalItemCount}\n              aria-disabled={isItemDisabled(item)}\n              style={item.style}\n              onClick={this._onItemClick}\n              onMouseEnter={this._onItemMouseEnter}\n              onMouseLeave={this._onItemMouseLeave}\n              onMouseMove={this._onItemMouseMove}\n              onKeyDown={itemHasSubmenu ? this._onItemKeyDown : undefined}\n            >\n              <ChildrenRenderer\n                componentRef={item.componentRef}\n                item={item}\n                classNames={classNames}\n                index={index}\n                onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n                hasIcons={hasIcons}\n                openSubMenu={openSubMenu}\n                dismissSubMenu={dismissSubMenu}\n                dismissMenu={dismissMenu}\n                getSubmenuTarget={this._getSubmenuTarget}\n                {...itemProps}\n              />\n            </a>\n          )}\n        </KeytipData>\n      </div>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._anchor.current ? this._anchor.current : undefined;\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClick } = this.props;\n    if (onItemClick) {\n      onItemClick(item, ev);\n    }\n  };\n}\n","import * as React from 'react';\nimport { buttonProperties, getNativeProps } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IKeytipDataProps } from '../../KeytipData/KeytipData.types';\n\nexport class ContextualMenuButton extends ContextualMenuItemWrapper {\n  private _btn = React.createRef<HTMLButtonElement>();\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemMouseDown,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    const subMenuId = this._getSubMenuId(item);\n\n    const isChecked: boolean | null | undefined = getIsChecked(item);\n    const canCheck: boolean = isChecked !== null;\n    const defaultRole = canCheck ? 'menuitemcheckbox' : 'menuitem';\n    const itemHasSubmenu = hasSubmenu(item);\n    const { itemProps, ariaLabel } = item;\n\n    const buttonNativeProperties = getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(item, buttonProperties);\n    // Do not add the disabled attribute to the button so that it is focusable\n    delete buttonNativeProperties.disabled;\n\n    const itemButtonProperties = {\n      className: classNames.root,\n      onClick: this._onItemClick,\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n      onMouseEnter: this._onItemMouseEnter,\n      onMouseLeave: this._onItemMouseLeave,\n      onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) => (onItemMouseDown ? onItemMouseDown(item, ev) : undefined),\n      onMouseMove: this._onItemMouseMove,\n      href: item.href,\n      title: item.title,\n      'aria-label': ariaLabel,\n      'aria-haspopup': itemHasSubmenu || undefined,\n      'aria-owns': item.key === expandedMenuItemKey ? subMenuId : undefined,\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n      'aria-checked': canCheck ? !!isChecked : undefined,\n      'aria-posinset': focusableElementIndex + 1,\n      'aria-setsize': totalItemCount,\n      'aria-disabled': isItemDisabled(item),\n      role: item.role || defaultRole,\n      style: item.style\n    };\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} ariaDescribedBy={buttonNativeProperties['aria-describedby']} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n          <button ref={this._btn} {...buttonNativeProperties} {...itemButtonProperties} {...keytipAttributes}>\n            <ChildrenRenderer\n              componentRef={item.componentRef}\n              item={item}\n              classNames={classNames}\n              index={index}\n              onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n              hasIcons={hasIcons}\n              openSubMenu={openSubMenu}\n              dismissSubMenu={dismissSubMenu}\n              dismissMenu={dismissMenu}\n              getSubmenuTarget={this._getSubmenuTarget}\n              {...itemProps}\n            />\n          </button>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._btn.current ? this._btn.current : undefined;\n  };\n}\n","import * as React from 'react';\nimport { IVerticalDividerProps, IVerticalDividerPropsStyles, IVerticalDividerStyles } from './VerticalDivider.types';\nimport { classNamesFunction } from '../../Utilities';\nconst getClassNames = classNamesFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles>();\n\nexport const VerticalDividerBase = (props: IVerticalDividerProps) => {\n  const { styles, theme, getClassNames: deprecatedGetClassNames, className } = props;\n  const classNames = getClassNames(styles, { theme: theme, getClassNames: deprecatedGetClassNames, className });\n  return (\n    <span className={classNames.wrapper}>\n      <span className={classNames.divider} />\n    </span>\n  );\n};\n","import * as React from 'react';\nimport { IVerticalDividerProps, IVerticalDividerStyles, IVerticalDividerPropsStyles } from './VerticalDivider.types';\nimport { getStyles } from './VerticalDivider.styles';\nimport { VerticalDividerBase } from './VerticalDivider.base';\nimport { styled } from '../../Utilities';\n\nexport const VerticalDivider: React.StatelessComponent<IVerticalDividerProps> = styled<\n  IVerticalDividerProps,\n  IVerticalDividerPropsStyles,\n  IVerticalDividerStyles\n>(VerticalDividerBase, getStyles, undefined, {\n  scope: 'VerticalDivider'\n});\n","import { IVerticalDividerPropsStyles, IVerticalDividerStyles } from './VerticalDivider.types';\nimport { IStyleFunction } from '../../Utilities';\n\nexport const getStyles: IStyleFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles> = (\n  props: IVerticalDividerPropsStyles\n): IVerticalDividerStyles => {\n  const { theme, getClassNames, className } = props;\n\n  if (!theme) {\n    throw new Error('Theme is undefined or null.');\n  }\n\n  if (getClassNames) {\n    const names = getClassNames(theme);\n    return {\n      wrapper: [names.wrapper],\n      divider: [names.divider]\n    };\n  }\n\n  return {\n    wrapper: [\n      {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center'\n      },\n      className\n    ],\n    divider: [\n      {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt\n      }\n    ]\n  };\n};\n","import * as React from 'react';\nimport { buttonProperties, getNativeProps, KeyCodes, mergeAriaAttributeValues } from '../../../Utilities';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IContextualMenuItem } from '../ContextualMenu.types';\nimport { IMenuItemClassNames, getSplitButtonVerticalDividerClassNames } from '../ContextualMenu.classNames';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { VerticalDivider } from '../../../Divider';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\n\nexport interface IContextualMenuSplitButtonState {}\n\nconst TouchIdleDelay = 500; /* ms */\n\nexport class ContextualMenuSplitButton extends ContextualMenuItemWrapper {\n  private _splitButton: HTMLDivElement;\n  private _lastTouchTimeoutId: number | undefined;\n  private _processingTouch: boolean;\n\n  public componentDidMount() {\n    if (this._splitButton && 'onpointerdown' in this._splitButton) {\n      this._events.on(this._splitButton, 'pointerdown', this._onPointerDown, true);\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      onItemMouseLeave,\n      expandedMenuItemKey\n    } = this.props;\n\n    const itemHasSubmenu = hasSubmenu(item);\n\n    let { keytipProps } = item;\n    if (keytipProps) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: any): JSX.Element => (\n          <div\n            data-ktp-target={keytipAttributes['data-ktp-target']}\n            ref={(splitButton: HTMLDivElement) => (this._splitButton = splitButton)}\n            role={'menuitem'}\n            aria-label={item.ariaLabel}\n            className={classNames.splitContainer}\n            aria-disabled={isItemDisabled(item)}\n            aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n            aria-haspopup={true}\n            aria-describedby={mergeAriaAttributeValues(item.ariaDescription, keytipAttributes['aria-describedby'])}\n            aria-checked={item.isChecked || item.checked}\n            aria-posinset={focusableElementIndex + 1}\n            aria-setsize={totalItemCount}\n            onMouseEnter={this._onItemMouseEnterPrimary}\n            onMouseLeave={onItemMouseLeave ? onItemMouseLeave.bind(this, { ...item, subMenuProps: null, items: null }) : undefined}\n            onMouseMove={this._onItemMouseMovePrimary}\n            onKeyDown={this._onItemKeyDown}\n            onClick={this._executeItemClick}\n            onTouchStart={this._onTouchStart}\n            tabIndex={0}\n            data-is-focusable={true}\n            aria-roledescription={item['aria-roledescription']}\n          >\n            {this._renderSplitPrimaryButton(item, classNames, index, hasCheckmarks!, hasIcons!)}\n            {this._renderSplitDivider(item)}\n            {this._renderSplitIconButton(item, classNames, index, keytipAttributes)}\n          </div>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (ev.which === KeyCodes.enter) {\n      this._executeItemClick(ev);\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._splitButton;\n  };\n\n  private _renderSplitPrimaryButton(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean\n  ) {\n    const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem, onItemClick } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      key: item.key,\n      disabled: isItemDisabled(item) || item.primaryDisabled,\n      name: item.name,\n      text: item.text || item.name,\n      className: classNames.splitPrimary,\n      canCheck: item.canCheck,\n      isChecked: item.isChecked,\n      checked: item.checked,\n      iconProps: item.iconProps,\n      'data-is-focusable': false,\n      'aria-hidden': true\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...getNativeProps(itemProps, buttonProperties)}>\n        <ChildrenRenderer\n          data-is-focusable={false}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n          hasIcons={hasIcons}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _renderSplitDivider(item: IContextualMenuItem) {\n    const getDividerClassNames = item.getSplitButtonVerticalDividerClassNames || getSplitButtonVerticalDividerClassNames;\n    return <VerticalDivider getClassNames={getDividerClassNames} />;\n  }\n\n  private _renderSplitIconButton(item: IContextualMenuItem, classNames: IMenuItemClassNames, index: number, keytipAttributes: any) {\n    const {\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      onItemMouseLeave,\n      onItemMouseDown,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      onClick: this._onIconItemClick,\n      disabled: isItemDisabled(item),\n      className: classNames.splitMenu,\n      subMenuProps: item.subMenuProps,\n      submenuIconProps: item.submenuIconProps,\n      split: true,\n      key: item.key\n    };\n\n    const buttonProps = {\n      ...getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(itemProps, buttonProperties),\n      ...{\n        onMouseEnter: this._onItemMouseEnterIcon,\n        onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(this, item) : undefined,\n        onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) => (onItemMouseDown ? onItemMouseDown(item, ev) : undefined),\n        onMouseMove: this._onItemMouseMoveIcon,\n        'data-is-focusable': false,\n        'data-ktp-execute-target': keytipAttributes['data-ktp-execute-target'],\n        'aria-hidden': true\n      }\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...buttonProps}>\n        <ChildrenRenderer\n          componentRef={item.componentRef}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          hasIcons={false}\n          openSubMenu={openSubMenu}\n          dismissSubMenu={dismissSubMenu}\n          dismissMenu={dismissMenu}\n          getSubmenuTarget={this._getSubmenuTarget}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _onItemMouseEnterPrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseEnterIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMovePrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMoveIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, this._splitButton);\n    }\n  };\n\n  private _onIconItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, (this._splitButton ? this._splitButton : ev.currentTarget) as HTMLElement);\n    }\n  };\n\n  private _executeItemClick = (ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { item, executeItemClick, onItemClick } = this.props;\n\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (this._processingTouch && onItemClick) {\n      return onItemClick(item, ev);\n    }\n\n    if (executeItemClick) {\n      executeItemClick(item, ev);\n    }\n  };\n\n  private _onTouchStart = (ev: React.TouchEvent<HTMLElement>): void => {\n    if (this._splitButton && !('onpointerdown' in this._splitButton)) {\n      this._handleTouchAndPointerEvent(ev);\n    }\n  };\n\n  private _onPointerDown = (ev: PointerEvent): void => {\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent(ev);\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  };\n\n  private _handleTouchAndPointerEvent(ev: React.TouchEvent<HTMLElement> | PointerEvent) {\n    const { onTap } = this.props;\n\n    if (onTap) {\n      onTap(ev);\n    }\n    // If we already have an existing timeout from a previous touch/pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n    }, TouchIdleDelay);\n  }\n}\n","import * as React from 'react';\nimport {\n  IContextualMenuProps,\n  IContextualMenuItem,\n  ContextualMenuItemType,\n  IContextualMenuListProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles\n} from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, IFocusZoneProps, FocusZoneTabbableElements } from '../../FocusZone';\nimport { IMenuItemClassNames, IContextualMenuClassNames } from './ContextualMenu.classNames';\nimport { divProperties, getNativeProps, shallowCompare } from '../../Utilities';\n\nimport {\n  assign,\n  BaseComponent,\n  classNamesFunction,\n  css,\n  getDocument,\n  getFirstFocusable,\n  getId,\n  getLastFocusable,\n  getRTL,\n  getWindow,\n  IRenderFunction,\n  IPoint,\n  KeyCodes,\n  shouldWrapFocus,\n  IStyleFunctionOrObject,\n  isIOS,\n  isMac\n} from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\nimport { Callout, ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport { ContextualMenuSplitButton, ContextualMenuButton, ContextualMenuAnchor } from './ContextualMenuItemWrapper/index';\nimport { IProcessedStyleSet, mergeStyleSets } from '../../Styling';\nimport { IContextualMenuItemStyleProps, IContextualMenuItemStyles } from './ContextualMenuItem.types';\n\nimport { getItemStyles } from './ContextualMenu.classNames';\n\nconst getClassNames = classNamesFunction<IContextualMenuStyleProps, IContextualMenuStyles>({\n  disableCaching: true\n});\nconst getContextualMenuItemClassNames = classNamesFunction<IContextualMenuItemStyleProps, IContextualMenuItemStyles>({\n  disableCaching: true\n});\n\nexport interface IContextualMenuState {\n  expandedMenuItemKey?: string;\n  /** True if the menu was expanded by mouse click OR hover (as opposed to by keyboard) */\n  expandedByMouseClick?: boolean;\n  dismissedMenuItemKey?: string;\n  contextualMenuItems?: IContextualMenuItem[];\n  contextualMenuTarget?: Element;\n  submenuTarget?: Element;\n  positions?: any;\n  slideDirectionalClassName?: string;\n  subMenuId?: string;\n  submenuDirection?: DirectionalHint;\n}\n\nexport function getSubmenuItems(item: IContextualMenuItem): IContextualMenuItem[] | undefined {\n  return item.subMenuProps ? item.subMenuProps.items : item.items;\n}\n\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\nexport function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean {\n  return items.some(item => {\n    if (item.canCheck) {\n      return true;\n    }\n\n    // If the item is a section, check if any of the items in the section can check.\n    if (item.sectionProps && item.sectionProps.items.some(submenuItem => submenuItem.canCheck === true)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst NavigationIdleDelay = 250 /* ms */;\n\n@withResponsiveMode\nexport class ContextualMenuBase extends BaseComponent<IContextualMenuProps, IContextualMenuState> {\n  // The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\n  public static defaultProps: IContextualMenuProps = {\n    items: [],\n    shouldFocusOnMount: true,\n    gapSpace: 0,\n    directionalHint: DirectionalHint.bottomAutoEdge,\n    beakWidth: 16\n  };\n\n  private _host: HTMLElement;\n  private _previousActiveElement: HTMLElement | null;\n  private _isFocusingPreviousElement: boolean;\n  private _enterTimerId: number | undefined;\n  private _targetWindow: Window;\n  private _target: Element | MouseEvent | IPoint | null;\n  private _isScrollIdle: boolean;\n  private _scrollIdleTimeoutId: number | undefined;\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  private _lastKeyDownWasAltOrMeta: boolean | undefined;\n  private _shouldUpdateFocusOnMouseEvent: boolean;\n  private _gotMouseMove: boolean;\n  private _mounted = false;\n\n  private _adjustedFocusZoneProps: IFocusZoneProps;\n\n  private _classNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames;\n\n  constructor(props: IContextualMenuProps) {\n    super(props);\n\n    this.state = {\n      contextualMenuItems: undefined,\n      subMenuId: getId('ContextualMenu')\n    };\n\n    this._warnDeprecations({\n      getMenuClassNames: 'styles'\n    });\n\n    this._isFocusingPreviousElement = false;\n    this._isScrollIdle = true;\n    this._shouldUpdateFocusOnMouseEvent = !this.props.delayUpdateFocusOnHover;\n    this._gotMouseMove = false;\n  }\n\n  public dismiss = (ev?: any, dismissAll?: boolean) => {\n    const { onDismiss } = this.props;\n\n    if (onDismiss) {\n      onDismiss(ev, dismissAll);\n    }\n  };\n\n  public shouldComponentUpdate(newProps: IContextualMenuProps, newState: IContextualMenuState): boolean {\n    if (this.props.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return false;\n    }\n\n    return !shallowCompare(this.props, newProps) || !shallowCompare(this.state, newState);\n  }\n\n  public componentWillUpdate(newProps: IContextualMenuProps): void {\n    if (newProps.target !== this.props.target) {\n      const newTarget = newProps.target;\n      this._setTargetWindowAndElement(newTarget!);\n    }\n    if (newProps.hidden !== this.props.hidden) {\n      if (newProps.hidden) {\n        this._onMenuClosed();\n      } else {\n        this._onMenuOpened();\n        this._previousActiveElement = this._targetWindow ? (this._targetWindow.document.activeElement as HTMLElement) : null;\n      }\n    }\n    if (newProps.delayUpdateFocusOnHover !== this.props.delayUpdateFocusOnHover) {\n      // update shouldUpdateFocusOnMouseEvent to follow what was passed in\n      this._shouldUpdateFocusOnMouseEvent = !newProps.delayUpdateFocusOnHover;\n\n      // If shouldUpdateFocusOnMouseEvent is false, we need to reset gotMouseMove to false\n      this._gotMouseMove = this._shouldUpdateFocusOnMouseEvent && this._gotMouseMove;\n    }\n  }\n\n  // Invoked once, both on the client and server, immediately before the initial rendering occurs.\n  public componentWillMount() {\n    const target = this.props.target;\n    this._setTargetWindowAndElement(target!);\n    if (!this.props.hidden) {\n      this._previousActiveElement = this._targetWindow ? (this._targetWindow.document.activeElement as HTMLElement) : null;\n    }\n  }\n\n  // Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.\n  public componentDidMount(): void {\n    if (!this.props.hidden) {\n      this._onMenuOpened();\n    }\n\n    this._mounted = true;\n  }\n\n  // Invoked immediately before a component is unmounted from the DOM.\n  public componentWillUnmount() {\n    this._tryFocusPreviousActiveElement();\n\n    if (this.props.onMenuDismissed) {\n      this.props.onMenuDismissed(this.props);\n    }\n\n    this._events.dispose();\n    this._async.dispose();\n    this._mounted = false;\n  }\n\n  public render(): JSX.Element | null {\n    let { isBeakVisible } = this.props;\n\n    const {\n      items,\n      labelElementId,\n      id,\n      className,\n      beakWidth,\n      directionalHint,\n      directionalHintForRTL,\n      alignTargetEdge,\n      gapSpace,\n      coverTarget,\n      ariaLabel,\n      doNotLayer,\n      target,\n      bounds,\n      useTargetWidth,\n      useTargetAsMinWidth,\n      directionalHintFixed,\n      shouldFocusOnMount,\n      shouldFocusOnContainer,\n      title,\n      styles,\n      theme,\n      calloutProps,\n      onRenderSubMenu = this._onRenderSubMenu,\n      onRenderMenuList = this._onRenderMenuList,\n      focusZoneProps,\n      getMenuClassNames\n    } = this.props;\n\n    this._classNames = getMenuClassNames\n      ? getMenuClassNames(theme!, className)\n      : getClassNames(styles, {\n          theme: theme!,\n          className: className\n        });\n\n    const hasIcons = itemsHaveIcons(items);\n\n    function itemsHaveIcons(contextualMenuItems: IContextualMenuItem[]): boolean {\n      for (const item of contextualMenuItems) {\n        if (!!item.iconProps) {\n          return true;\n        }\n\n        if (item.itemType === ContextualMenuItemType.Section && item.sectionProps && itemsHaveIcons(item.sectionProps.items)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    this._adjustedFocusZoneProps = { ...focusZoneProps, direction: this._getFocusZoneDirection() };\n\n    const hasCheckmarks = canAnyMenuItemsCheck(items);\n    const submenuProps = this.state.expandedMenuItemKey && this.props.hidden !== true ? this._getSubmenuProps() : null;\n\n    isBeakVisible = isBeakVisible === undefined ? this.props.responsiveMode! <= ResponsiveMode.medium : isBeakVisible;\n    /**\n     * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n     */\n    let contextMenuStyle;\n    const targetAsHtmlElement = this._target as HTMLElement;\n    if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n      const targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n      const targetWidth = targetBoundingRect.width - 2 /* Accounts for 1px border */;\n\n      if (useTargetWidth) {\n        contextMenuStyle = {\n          width: targetWidth\n        };\n      } else if (useTargetAsMinWidth) {\n        contextMenuStyle = {\n          minWidth: targetWidth\n        };\n      }\n    }\n\n    // The menu should only return if items were provided, if no items were provided then it should not appear.\n    if (items && items.length > 0) {\n      let totalItemCount = 0;\n      for (const item of items) {\n        if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n          const itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n          totalItemCount += itemCount;\n        }\n      }\n\n      const calloutStyles =\n        !getMenuClassNames && this._classNames.subComponentStyles\n          ? (this._classNames.subComponentStyles.callout as IStyleFunctionOrObject<ICalloutContentStyleProps, ICalloutContentStyles>)\n          : undefined;\n\n      return (\n        <Callout\n          styles={calloutStyles}\n          {...calloutProps}\n          target={target}\n          isBeakVisible={isBeakVisible}\n          beakWidth={beakWidth}\n          directionalHint={directionalHint}\n          directionalHintForRTL={directionalHintForRTL}\n          gapSpace={gapSpace}\n          coverTarget={coverTarget}\n          doNotLayer={doNotLayer}\n          className={css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className)}\n          setInitialFocus={shouldFocusOnMount}\n          onDismiss={this.props.onDismiss}\n          onScroll={this._onScroll}\n          bounds={bounds}\n          directionalHintFixed={directionalHintFixed}\n          alignTargetEdge={alignTargetEdge}\n          hidden={this.props.hidden}\n        >\n          <div\n            aria-label={ariaLabel}\n            aria-labelledby={labelElementId}\n            style={contextMenuStyle}\n            ref={(host: HTMLDivElement) => (this._host = host)}\n            id={id}\n            className={this._classNames.container}\n            tabIndex={shouldFocusOnContainer ? 0 : -1}\n            onKeyDown={this._onMenuKeyDown}\n            onKeyUp={this._onKeyUp}\n            onFocusCapture={this._onMenuFocusCapture}\n          >\n            {title && <div className={this._classNames.title}> {title} </div>}\n            {items && items.length ? (\n              <FocusZone\n                {...this._adjustedFocusZoneProps}\n                className={this._classNames.root}\n                isCircularNavigation={true}\n                handleTabKey={FocusZoneTabbableElements.all}\n              >\n                {onRenderMenuList(\n                  {\n                    items,\n                    totalItemCount,\n                    hasCheckmarks,\n                    hasIcons\n                  },\n                  this._onRenderMenuList\n                )}\n              </FocusZone>\n            ) : null}\n            {submenuProps && onRenderSubMenu(submenuProps, this._onRenderSubMenu)}\n          </div>\n        </Callout>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  private _onMenuOpened() {\n    this._events.on(this._targetWindow, 'resize', this.dismiss);\n    this._shouldUpdateFocusOnMouseEvent = !this.props.delayUpdateFocusOnHover;\n    this._gotMouseMove = false;\n    this.props.onMenuOpened && this.props.onMenuOpened(this.props);\n  }\n\n  private _onMenuClosed() {\n    this._events.off(this._targetWindow, 'resize', this.dismiss);\n    this._tryFocusPreviousActiveElement();\n\n    if (this.props.onMenuDismissed) {\n      this.props.onMenuDismissed(this.props);\n    }\n\n    this._shouldUpdateFocusOnMouseEvent = !this.props.delayUpdateFocusOnHover;\n\n    // We need to dismiss any submenu related state properties,\n    // so that when the menu is shown again, the submenu is collapsed\n    this.setState({\n      expandedByMouseClick: undefined,\n      dismissedMenuItemKey: undefined,\n      expandedMenuItemKey: undefined,\n      submenuTarget: undefined\n    });\n  }\n\n  private _tryFocusPreviousActiveElement() {\n    if (this._isFocusingPreviousElement && this._previousActiveElement) {\n      // This slight delay is required so that we can unwind the stack, const react try to mess with focus, and then\n      // apply the correct focus. Without the setTimeout, we end up focusing the correct thing, and then React wants\n      // to reset the focus back to the thing it thinks should have been focused.\n      // Note: Cannot be replaced by this._async.setTimout because those will be removed by the time this is called.\n      setTimeout(() => {\n        this._previousActiveElement && this._previousActiveElement!.focus();\n      }, 0);\n    }\n  }\n\n  /**\n   * Gets the focusZoneDirection by using the arrowDirection if specified,\n   * the direction specificed in the focusZoneProps, or defaults to FocusZoneDirection.vertical\n   */\n  private _getFocusZoneDirection() {\n    const { focusZoneProps } = this.props;\n    return focusZoneProps && focusZoneProps.direction !== undefined ? focusZoneProps.direction : FocusZoneDirection.vertical;\n  }\n\n  private _onRenderSubMenu(subMenuProps: IContextualMenuProps, defaultRender?: IRenderFunction<IContextualMenuProps>): JSX.Element {\n    throw Error(\n      'ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' +\n        'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.'\n    );\n  }\n\n  private _onRenderMenuList = (\n    menuListProps: IContextualMenuListProps,\n    defaultRender?: IRenderFunction<IContextualMenuListProps>\n  ): JSX.Element => {\n    let indexCorrection = 0;\n    return (\n      <ul className={this._classNames.list} onKeyDown={this._onKeyDown} onKeyUp={this._onKeyUp} role=\"menu\">\n        {menuListProps.items.map((item, index) => {\n          const menuItem = this._renderMenuItem(\n            item,\n            index,\n            indexCorrection,\n            menuListProps.totalItemCount,\n            menuListProps.hasCheckmarks,\n            menuListProps.hasIcons\n          );\n          if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n            const indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n            indexCorrection += indexIncrease;\n          }\n          return menuItem;\n        })}\n      </ul>\n    );\n  };\n\n  private _renderMenuItem(\n    item: IContextualMenuItem,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean\n  ): React.ReactNode {\n    const renderedItems: React.ReactNode[] = [];\n    const iconProps = item.iconProps || { iconName: 'None' };\n    const { getItemClassNames, itemProps } = item;\n    const styles = itemProps ? itemProps.styles : undefined;\n\n    // We only send a dividerClassName when the item to be rendered is a divider. For all other cases, the default divider style is used.\n    const dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n    const subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : '';\n\n    let itemClassNames: IMenuItemClassNames;\n\n    // IContextualMenuItem#getItemClassNames for backwards compatibility\n    // otherwise uses mergeStyles for class names.\n    if (getItemClassNames) {\n      itemClassNames = getItemClassNames(\n        this.props.theme!,\n        isItemDisabled(item),\n        this.state.expandedMenuItemKey === item.key,\n        !!getIsChecked(item),\n        !!item.href,\n        iconProps.iconName !== 'None',\n        item.className,\n        dividerClassName,\n        iconProps.className,\n        subMenuIconClassName,\n        item.primaryDisabled\n      );\n    } else {\n      const itemStyleProps: IContextualMenuItemStyleProps = {\n        theme: this.props.theme!,\n        disabled: isItemDisabled(item),\n        expanded: this.state.expandedMenuItemKey === item.key,\n        checked: !!getIsChecked(item),\n        isAnchorLink: !!item.href,\n        knownIcon: iconProps.iconName !== 'None',\n        itemClassName: item.className,\n        dividerClassName,\n        iconClassName: iconProps.className,\n        subMenuClassName: subMenuIconClassName,\n        primaryDisabled: item.primaryDisabled\n      };\n\n      const menuItemStyles = this._classNames.subComponentStyles\n        ? (this._classNames.subComponentStyles.menuItem as IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles>)\n        : undefined;\n\n      // We need to generate default styles then override if styles are provided\n      // since the ContextualMenu currently handles item classNames.\n      itemClassNames = mergeStyleSets(\n        getContextualMenuItemClassNames(getItemStyles, itemStyleProps),\n        getContextualMenuItemClassNames(menuItemStyles, itemStyleProps),\n        getContextualMenuItemClassNames(styles, itemStyleProps)\n      );\n    }\n\n    if (item.text === '-' || item.name === '-') {\n      item.itemType = ContextualMenuItemType.Divider;\n    }\n    switch (item.itemType) {\n      case ContextualMenuItemType.Divider:\n        renderedItems.push(this._renderSeparator(index, itemClassNames));\n        break;\n      case ContextualMenuItemType.Header:\n        renderedItems.push(this._renderSeparator(index, itemClassNames));\n        const headerItem = this._renderHeaderMenuItem(item, itemClassNames, index, hasCheckmarks, hasIcons);\n        renderedItems.push(this._renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n        break;\n      case ContextualMenuItemType.Section:\n        renderedItems.push(this._renderSectionItem(item, itemClassNames, index, hasCheckmarks, hasIcons));\n        break;\n      default:\n        const menuItem = this._renderNormalItem(\n          item,\n          itemClassNames,\n          index,\n          focusableElementIndex,\n          totalItemCount,\n          hasCheckmarks,\n          hasIcons\n        );\n        renderedItems.push(this._renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n        break;\n    }\n\n    return renderedItems;\n  }\n\n  private _renderSectionItem(\n    sectionItem: IContextualMenuItem,\n    menuClassNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean\n  ) {\n    const sectionProps = sectionItem.sectionProps;\n    if (!sectionProps) {\n      return;\n    }\n\n    let headerItem;\n    if (sectionProps.title) {\n      const headerContextualMenuItem: IContextualMenuItem = {\n        key: `section-${sectionProps.title}-title`,\n        itemType: ContextualMenuItemType.Header,\n        text: sectionProps.title\n      };\n      headerItem = this._renderHeaderMenuItem(headerContextualMenuItem, menuClassNames, index, hasCheckmarks, hasIcons);\n    }\n\n    if (sectionProps.items && sectionProps.items.length > 0) {\n      return (\n        <li role=\"presentation\" key={sectionProps.key || sectionItem.key || `section-${index}`}>\n          <div role=\"group\">\n            <ul className={this._classNames.list}>\n              {sectionProps.topDivider && this._renderSeparator(index, menuClassNames, true, true)}\n              {headerItem && this._renderListItem(headerItem, sectionItem.key || index, menuClassNames, sectionItem.title)}\n              {sectionProps.items.map((contextualMenuItem, itemsIndex) =>\n                this._renderMenuItem(contextualMenuItem, itemsIndex, itemsIndex, sectionProps.items.length, hasCheckmarks, hasIcons)\n              )}\n              {sectionProps.bottomDivider && this._renderSeparator(index, menuClassNames, false, true)}\n            </ul>\n          </div>\n        </li>\n      );\n    }\n  }\n\n  private _renderListItem(content: React.ReactNode, key: string | number, classNames: IMenuItemClassNames, title?: string) {\n    return (\n      <li role=\"presentation\" title={title} key={key} className={classNames.item}>\n        {content}\n      </li>\n    );\n  }\n\n  private _renderSeparator(index: number, classNames: IMenuItemClassNames, top?: boolean, fromSection?: boolean): React.ReactNode {\n    if (fromSection || index > 0) {\n      return (\n        <li\n          role=\"separator\"\n          key={'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom')}\n          className={classNames.divider}\n          aria-hidden=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n\n  private _renderNormalItem(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean\n  ): React.ReactNode {\n    if (item.onRender) {\n      return item.onRender({ 'aria-posinset': focusableElementIndex + 1, 'aria-setsize': totalItemCount, ...item }, this.dismiss);\n    }\n    if (item.href) {\n      return this._renderAnchorMenuItem(item, classNames, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons);\n    }\n\n    if (item.split && hasSubmenu(item)) {\n      return this._renderSplitButton(item, classNames, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons);\n    }\n\n    return this._renderButtonItem(item, classNames, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons);\n  }\n\n  private _renderHeaderMenuItem(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean\n  ): React.ReactNode {\n    const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem } = this.props;\n    const { itemProps } = item;\n    const divHtmlProperties = itemProps && getNativeProps(itemProps, divProperties);\n    return (\n      <div className={this._classNames.header} {...divHtmlProperties} style={item.style}>\n        <ChildrenRenderer\n          item={item}\n          classNames={classNames}\n          index={index}\n          onCheckmarkClick={hasCheckmarks ? this._onItemClick : undefined}\n          hasIcons={hasIcons}\n          {...itemProps}\n        />\n      </div>\n    );\n  }\n\n  private _renderAnchorMenuItem(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean\n  ): React.ReactNode {\n    const { contextualMenuItemAs } = this.props;\n    const { expandedMenuItemKey } = this.state;\n    return (\n      <ContextualMenuAnchor\n        item={item}\n        classNames={classNames}\n        index={index}\n        focusableElementIndex={focusableElementIndex}\n        totalItemCount={totalItemCount}\n        hasCheckmarks={hasCheckmarks}\n        hasIcons={hasIcons}\n        contextualMenuItemAs={contextualMenuItemAs}\n        onItemMouseEnter={this._onItemMouseEnterBase}\n        onItemMouseLeave={this._onMouseItemLeave}\n        onItemMouseMove={this._onItemMouseMoveBase}\n        onItemMouseDown={this._onItemMouseDown}\n        executeItemClick={this._executeItemClick}\n        onItemClick={this._onAnchorClick}\n        onItemKeyDown={this._onItemKeyDown}\n        getSubMenuId={this._getSubMenuId}\n        expandedMenuItemKey={expandedMenuItemKey}\n        openSubMenu={this._onItemSubMenuExpand}\n        dismissSubMenu={this._onSubMenuDismiss}\n        dismissMenu={this.dismiss}\n      />\n    );\n  }\n\n  private _renderButtonItem(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks?: boolean,\n    hasIcons?: boolean\n  ) {\n    const { contextualMenuItemAs } = this.props;\n    const { expandedMenuItemKey } = this.state;\n\n    return (\n      <ContextualMenuButton\n        item={item}\n        classNames={classNames}\n        index={index}\n        focusableElementIndex={focusableElementIndex}\n        totalItemCount={totalItemCount}\n        hasCheckmarks={hasCheckmarks}\n        hasIcons={hasIcons}\n        contextualMenuItemAs={contextualMenuItemAs}\n        onItemMouseEnter={this._onItemMouseEnterBase}\n        onItemMouseLeave={this._onMouseItemLeave}\n        onItemMouseMove={this._onItemMouseMoveBase}\n        onItemMouseDown={this._onItemMouseDown}\n        executeItemClick={this._executeItemClick}\n        onItemClick={this._onItemClick}\n        onItemClickBase={this._onItemClickBase}\n        onItemKeyDown={this._onItemKeyDown}\n        getSubMenuId={this._getSubMenuId}\n        expandedMenuItemKey={expandedMenuItemKey}\n        openSubMenu={this._onItemSubMenuExpand}\n        dismissSubMenu={this._onSubMenuDismiss}\n        dismissMenu={this.dismiss}\n      />\n    );\n  }\n\n  private _renderSplitButton(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames,\n    index: number,\n    focusableElementIndex: number,\n    totalItemCount: number,\n    hasCheckmarks?: boolean,\n    hasIcons?: boolean\n  ): JSX.Element {\n    const { contextualMenuItemAs } = this.props;\n    const { expandedMenuItemKey } = this.state;\n\n    return (\n      <ContextualMenuSplitButton\n        item={item}\n        classNames={classNames}\n        index={index}\n        focusableElementIndex={focusableElementIndex}\n        totalItemCount={totalItemCount}\n        hasCheckmarks={hasCheckmarks}\n        hasIcons={hasIcons}\n        contextualMenuItemAs={contextualMenuItemAs}\n        onItemMouseEnter={this._onItemMouseEnterBase}\n        onItemMouseLeave={this._onMouseItemLeave}\n        onItemMouseMove={this._onItemMouseMoveBase}\n        onItemMouseDown={this._onItemMouseDown}\n        executeItemClick={this._executeItemClick}\n        onItemClick={this._onItemClick}\n        onItemClickBase={this._onItemClickBase}\n        onItemKeyDown={this._onItemKeyDown}\n        openSubMenu={this._onItemSubMenuExpand}\n        dismissSubMenu={this._onSubMenuDismiss}\n        dismissMenu={this.dismiss}\n        expandedMenuItemKey={expandedMenuItemKey}\n        onTap={this._onPointerAndTouchEvent}\n      />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n\n    // On Mac, pressing escape dismisses all levels of native context menus\n    const dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n\n    return this._keyHandler(ev, this._shouldHandleKeyDown, dismissAllMenus);\n  };\n\n  private _shouldHandleKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    return ev.which === KeyCodes.escape || this._shouldCloseSubMenu(ev) || (ev.which === KeyCodes.up && (ev.altKey || ev.metaKey));\n  };\n\n  private _onMenuFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    if (this.props.delayUpdateFocusOnHover) {\n      this._shouldUpdateFocusOnMouseEvent = true;\n    }\n  };\n\n  private _onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    return this._keyHandler(ev, this._shouldHandleKeyUp, true /* dismissAllMenus */);\n  };\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  private _shouldHandleKeyUp = (ev: React.KeyboardEvent<HTMLElement>) => {\n    const keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\n    this._lastKeyDownWasAltOrMeta = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  /**\n   * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n   */\n  private _isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    return ev.which === KeyCodes.alt || ev.key === 'Meta';\n  }\n\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n  private _keyHandler = (\n    ev: React.KeyboardEvent<HTMLElement>,\n    shouldHandleKey: (ev: React.KeyboardEvent<HTMLElement>) => boolean,\n    dismissAllMenus?: boolean\n  ): boolean => {\n    let handled = false;\n\n    if (shouldHandleKey(ev)) {\n      this._isFocusingPreviousElement = true;\n      ev.preventDefault();\n      ev.stopPropagation();\n      this.dismiss(ev, dismissAllMenus);\n      handled = true;\n    }\n\n    return handled;\n  };\n\n  /**\n   * Checks if the submenu should be closed\n   */\n  private _shouldCloseSubMenu = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    const submenuCloseKey = getRTL() ? KeyCodes.right : KeyCodes.left;\n\n    if (ev.which !== submenuCloseKey || !this.props.isSubMenu) {\n      return false;\n    }\n\n    return (\n      this._adjustedFocusZoneProps.direction === FocusZoneDirection.vertical ||\n      (!!this._adjustedFocusZoneProps.checkForNoWrap && !shouldWrapFocus(ev.target as HTMLElement, 'data-no-horizontal-wrap'))\n    );\n  };\n\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    const handled = this._onKeyDown(ev);\n\n    if (handled || !this._host) {\n      return;\n    }\n\n    // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n    const hasModifier = !!(ev.altKey || ev.metaKey);\n    const isUp = ev.which === KeyCodes.up;\n    const isDown = ev.which === KeyCodes.down;\n    if (!hasModifier && (isUp || isDown)) {\n      const elementToFocus = isUp\n        ? getLastFocusable(this._host, this._host.lastChild as HTMLElement, true)\n        : getFirstFocusable(this._host, this._host.firstChild as HTMLElement, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  private _onScroll = (): void => {\n    if (!this._isScrollIdle && this._scrollIdleTimeoutId !== undefined) {\n      this._async.clearTimeout(this._scrollIdleTimeoutId);\n      this._scrollIdleTimeoutId = undefined;\n    } else {\n      this._isScrollIdle = false;\n    }\n\n    this._scrollIdleTimeoutId = this._async.setTimeout(() => {\n      this._isScrollIdle = true;\n    }, NavigationIdleDelay);\n  };\n\n  private _onItemMouseEnterBase = (item: any, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement): void => {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    this._updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  private _onItemMouseMoveBase = (item: any, ev: React.MouseEvent<HTMLElement>, target: HTMLElement): void => {\n    const targetElement = ev.currentTarget as HTMLElement;\n\n    // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n    if (this._shouldUpdateFocusOnMouseEvent) {\n      this._gotMouseMove = true;\n    } else {\n      return;\n    }\n\n    if (\n      !this._isScrollIdle ||\n      this._enterTimerId !== undefined ||\n      targetElement === (this._targetWindow.document.activeElement as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  private _shouldIgnoreMouseEvent(): boolean {\n    return !this._isScrollIdle || !this._gotMouseMove;\n  }\n\n  private _onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    if (this._enterTimerId !== undefined) {\n      this._async.clearTimeout(this._enterTimerId);\n      this._enterTimerId = undefined;\n    }\n\n    if (this.state.expandedMenuItemKey !== undefined) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if ((this._host as any).setActive) {\n      try {\n        (this._host as any).setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      this._host.focus();\n    }\n  };\n\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n  private _updateFocusOnMouseEvent(item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement) {\n    const targetElement = target ? target : (ev.currentTarget as HTMLElement);\n    const { subMenuHoverDelay: timeoutDuration = NavigationIdleDelay } = this.props;\n\n    if (item.key === this.state.expandedMenuItemKey) {\n      return;\n    }\n\n    if (this._enterTimerId !== undefined) {\n      this._async.clearTimeout(this._enterTimerId);\n      this._enterTimerId = undefined;\n    }\n\n    // If the menu is not expanded we can update focus without any delay\n    if (this.state.expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    }\n\n    // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      this._enterTimerId = this._async.setTimeout(() => {\n        targetElement.focus();\n        this.setState({\n          expandedByMouseClick: true\n        });\n        this._onItemSubMenuExpand(item, targetElement);\n        this._enterTimerId = undefined;\n      }, timeoutDuration);\n    } else {\n      this._enterTimerId = this._async.setTimeout(() => {\n        this._onSubMenuDismiss(ev);\n        targetElement.focus();\n        this._enterTimerId = undefined;\n      }, timeoutDuration);\n    }\n  }\n\n  private _onItemMouseDown = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>): void => {\n    if (item.onMouseDown) {\n      item.onMouseDown(item, ev);\n    }\n  };\n\n  private _onItemClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    this._onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n  };\n\n  private _onItemClickBase = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    target: HTMLElement\n  ): void => {\n    const items = getSubmenuItems(item);\n\n    // Cancel a async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n    this._cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      this._executeItemClick(item, ev);\n    } else {\n      if (item.key !== this.state.expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n        this.setState({\n          // When Edge + Narrator are used together (regardless of if the button is in a form or not), pressing\n          // \"Enter\" fires this method and not _onMenuKeyDown. Checking ev.nativeEvent.detail differentiates\n          // between a real click event and a keypress event (detail should be the number of mouse clicks).\n          // ...Plot twist! For a real click event in IE 11, detail is always 0 (Edge sets it properly to 1).\n          // So we also check the pointerType property, which both Edge and IE set to \"mouse\" for real clicks\n          // and \"\" for pressing \"Enter\" with Narrator on.\n          expandedByMouseClick: ev.nativeEvent.detail !== 0 || (ev.nativeEvent as PointerEvent).pointerType === 'mouse'\n        });\n        this._onItemSubMenuExpand(item, target);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  private _onAnchorClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>) => {\n    this._executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  private _executeItemClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    let dismiss = false;\n    if (item.onClick) {\n      dismiss = !!item.onClick(ev, item);\n    } else if (this.props.onItemClick) {\n      dismiss = !!this.props.onItemClick(ev, item);\n    }\n\n    (dismiss || !ev.defaultPrevented) && this.dismiss(ev, true);\n  };\n\n  private _onItemKeyDown = (item: any, ev: React.KeyboardEvent<HTMLElement>): void => {\n    const openKey = getRTL() ? KeyCodes.left : KeyCodes.right;\n\n    if (\n      !item.disabled &&\n      (ev.which === openKey || ev.which === KeyCodes.enter || (ev.which === KeyCodes.down && (ev.altKey || ev.metaKey)))\n    ) {\n      this.setState({\n        expandedByMouseClick: false\n      });\n      this._onItemSubMenuExpand(item, ev.currentTarget as HTMLElement);\n      ev.preventDefault();\n    }\n  };\n\n  // Cancel a async menu item hover timeout action from being taken and instead\n  // do new upcoming behavior\n  private _cancelSubMenuTimer = () => {\n    if (this._enterTimerId !== undefined) {\n      this._async.clearTimeout(this._enterTimerId);\n      this._enterTimerId = undefined;\n    }\n  };\n\n  private _onItemSubMenuExpand = (item: IContextualMenuItem, target: HTMLElement): void => {\n    if (this.state.expandedMenuItemKey !== item.key) {\n      if (this.state.expandedMenuItemKey) {\n        this._onSubMenuDismiss();\n      }\n\n      // Focus the target to ensure when we close it, we're focusing on the correct element.\n      target.focus();\n      this.setState({\n        expandedMenuItemKey: item.key,\n        submenuTarget: target\n      });\n    }\n  };\n\n  private _getSubmenuProps() {\n    const { submenuTarget, expandedMenuItemKey } = this.state;\n    const item = this._findItemByKey(expandedMenuItemKey!);\n    let submenuProps: IContextualMenuProps | null = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item)!,\n        target: submenuTarget,\n        onDismiss: this._onSubMenuDismiss,\n        isSubMenu: true,\n        id: this.state.subMenuId,\n        shouldFocusOnMount: true,\n        shouldFocusOnContainer: this.state.expandedByMouseClick,\n        directionalHint: getRTL() ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className: this.props.className,\n        gapSpace: 0,\n        isBeakVisible: false\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n    }\n    return submenuProps;\n  }\n\n  private _findItemByKey(key: string): IContextualMenuItem | undefined {\n    const { items } = this.props;\n    return this._findItemByKeyFromItems(key, items);\n  }\n\n  /**\n   * Returns the item that mathes a given key if any.\n   * @param key - The key of the item to match\n   * @param items - The items to look for the key\n   */\n  private _findItemByKeyFromItems(key: string, items: IContextualMenuItem[]): IContextualMenuItem | undefined {\n    for (const item of items) {\n      if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n        const match = this._findItemByKeyFromItems(key, item.sectionProps.items);\n        if (match) {\n          return match;\n        }\n      } else if (item.key && item.key === key) {\n        return item;\n      }\n    }\n  }\n\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The _mounted property is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n  private _onSubMenuDismiss = (ev?: any, dismissAll?: boolean): void => {\n    if (dismissAll) {\n      this.dismiss(ev, dismissAll);\n    } else if (this._mounted) {\n      this.setState({\n        dismissedMenuItemKey: this.state.expandedMenuItemKey,\n        expandedMenuItemKey: undefined,\n        submenuTarget: undefined\n      });\n    }\n  };\n\n  private _setTargetWindowAndElement(target: Element | string | MouseEvent | IPoint): void {\n    const currentElement = this._host;\n\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument(currentElement)!;\n        this._target = currentDoc ? (currentDoc.querySelector(target) as Element) : null;\n        this._targetWindow = getWindow(currentElement)!;\n      } else if ((target as MouseEvent).stopPropagation) {\n        this._targetWindow = getWindow((target as MouseEvent).toElement as HTMLElement)!;\n        this._target = target;\n      } else if ((target as IPoint).x !== undefined && (target as IPoint).y !== undefined) {\n        this._targetWindow = getWindow(currentElement)!;\n        this._target = target;\n      } else {\n        const targetElement: Element = target as Element;\n        this._targetWindow = getWindow(targetElement)!;\n        this._target = target;\n      }\n    } else {\n      this._targetWindow = getWindow(currentElement)!;\n    }\n  }\n\n  private _getSubMenuId = (item: IContextualMenuItem): string | undefined => {\n    let { subMenuId } = this.state;\n\n    if (item.subMenuProps && item.subMenuProps.id) {\n      subMenuId = item.subMenuProps.id;\n    }\n\n    return subMenuId;\n  };\n\n  private _onPointerAndTouchEvent = (ev: React.TouchEvent<HTMLElement> | PointerEvent) => {\n    this._cancelSubMenuTimer();\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IContextualMenuProps, IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\nimport { ContextualMenuBase } from './ContextualMenu.base';\nimport { getStyles } from './ContextualMenu.styles';\n\n// This is to prevent cyclic import with ContextualMenu.base.tsx.\nlet LocalContextualMenu: React.StatelessComponent<IContextualMenuProps>;\n\nfunction onRenderSubMenu(subMenuProps: IContextualMenuProps) {\n  return <LocalContextualMenu {...subMenuProps} />;\n}\n\nLocalContextualMenu = styled<IContextualMenuProps, IContextualMenuStyleProps, IContextualMenuStyles>(\n  ContextualMenuBase,\n  getStyles,\n  () => {\n    return {\n      onRenderSubMenu\n    };\n  },\n  { scope: 'ContextualMenu' }\n);\n\n/**\n * ContextualMenu description\n */\nexport const ContextualMenu: React.StatelessComponent<IContextualMenuProps> = LocalContextualMenu;\n","import { IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\nimport { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { CONTEXTUAL_MENU_ITEM_HEIGHT } from './ContextualMenu.cnstyles';\n\nconst GlobalClassNames = {\n  root: 'ms-ContextualMenu',\n  container: 'ms-ContextualMenu-container',\n  list: 'ms-ContextualMenu-list',\n  header: 'ms-ContextualMenu-header',\n  title: 'ms-ContextualMenu-title',\n  isopen: 'is-open'\n};\n\nexport const getStyles = (props: IContextualMenuStyleProps): IContextualMenuStyles => {\n  const { className, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { palette, fonts, semanticColors } = theme;\n\n  return {\n    root: [\n      theme.fonts.medium,\n      classNames.root,\n      classNames.isopen,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        minWidth: '180px'\n      },\n      className\n    ],\n    container: [\n      classNames.container,\n      {\n        selectors: {\n          ':focus': { outline: 0 }\n        }\n      }\n    ],\n    list: [\n      classNames.list,\n      classNames.isopen,\n      {\n        listStyleType: 'none',\n        margin: '0',\n        padding: '0'\n      }\n    ],\n    header: [\n      classNames.header,\n      fonts.small,\n      {\n        fontWeight: FontWeights.semibold,\n        color: semanticColors.menuHeader,\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        cursor: 'default',\n        padding: '0px 6px',\n        userSelect: 'none',\n        textAlign: 'left'\n      }\n    ],\n    title: [\n      classNames.title,\n      {\n        fontSize: '16px',\n        paddingRight: '14px',\n        paddingLeft: '14px',\n        paddingBottom: '5px',\n        paddingTop: '5px',\n        backgroundColor: palette.neutralLight\n      }\n    ],\n    subComponentStyles: { callout: {}, menuItem: {} }\n  };\n};\n","import { memoizeFunction } from '../../Utilities';\nimport { ITheme, mergeStyleSets } from '../../Styling';\nimport { IButtonStyles } from './Button.types';\nimport { getGlobalClassNames } from '../../Styling';\n\nexport interface IButtonClassNames {\n  root?: string;\n  flexContainer?: string;\n  textContainer?: string;\n  icon?: string;\n  label?: string;\n  menuIcon?: string;\n  description?: string;\n  screenReaderText?: string;\n}\n\nexport const ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer'\n};\n\nexport const getBaseButtonClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    styles: IButtonStyles,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    checked: boolean,\n    expanded: boolean,\n    isSplit: boolean | undefined\n  ): IButtonClassNames => {\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n\n    const isExpanded = expanded && !isSplit;\n    return mergeStyleSets({\n      root: [\n        classNames.msButton,\n        styles.root,\n        variantClassName,\n        checked && ['is-checked', styles.rootChecked],\n        isExpanded && [\n          'is-expanded',\n          styles.rootExpanded,\n          {\n            selectors: {\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\n              // menuIcon falls back to rootExpandedHovered to support original behavior\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n              ':hover': styles.rootExpandedHovered\n            }\n          }\n        ],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.rootHovered,\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\n              ':focus': styles.rootFocused,\n              ':active': styles.rootPressed,\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed\n            }\n          },\n        disabled && checked && [styles.rootCheckedDisabled],\n        !disabled &&\n          checked && {\n            selectors: {\n              ':hover': styles.rootCheckedHovered,\n              ':active': styles.rootCheckedPressed\n            }\n          },\n        className\n      ],\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n      icon: [\n        classNames.msButtonIcon,\n        iconClassName,\n        styles.icon,\n        isExpanded && styles.iconExpanded,\n        checked && styles.iconChecked,\n        disabled && styles.iconDisabled\n      ],\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n      menuIcon: [\n        classNames.msButtonMenuIcon,\n        menuIconClassName,\n        styles.menuIcon,\n        checked && styles.menuIconChecked,\n        disabled && !isSplit && styles.menuIconDisabled,\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.menuIconHovered,\n              ':active': styles.menuIconPressed\n            }\n          },\n        isExpanded && ['is-expanded', styles.menuIconExpanded]\n      ],\n      description: [\n        classNames.msButtonDescription,\n        styles.description,\n        checked && styles.descriptionChecked,\n        disabled && styles.descriptionDisabled\n      ],\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText]\n    });\n  }\n);\n","import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { IButtonStyles } from '../Button.types';\n\nexport interface ISplitButtonClassNames {\n  root?: string;\n  icon?: string;\n  splitButtonContainer?: string;\n  flexContainer?: string;\n  divider?: string;\n}\nexport const getClassNames = memoizeFunction(\n  (styles: IButtonStyles, disabled: boolean, expanded: boolean, checked: boolean, primaryDisabled?: boolean): ISplitButtonClassNames => {\n    return {\n      root: mergeStyles(\n        styles.splitButtonMenuButton,\n        expanded && [styles.splitButtonMenuButtonExpanded],\n        disabled && [styles.splitButtonMenuButtonDisabled],\n        checked && !disabled && [styles.splitButtonMenuButtonChecked]\n      ),\n\n      splitButtonContainer: mergeStyles(\n        styles.splitButtonContainer,\n        checked &&\n          !disabled && [\n            styles.splitButtonContainerChecked,\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerCheckedHovered\n              }\n            }\n          ],\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerHovered,\n                ':focus': styles.splitButtonContainerFocused\n              }\n            }\n          ],\n        disabled && styles.splitButtonContainerDisabled\n      ),\n\n      icon: mergeStyles(\n        styles.splitButtonMenuIcon,\n        disabled && styles.splitButtonMenuIconDisabled,\n        !disabled && primaryDisabled && styles.splitButtonMenuIcon\n      ),\n\n      flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n\n      divider: mergeStyles(styles.splitButtonDivider, (primaryDisabled || disabled) && styles.splitButtonDividerDisabled)\n    };\n  }\n);\n","import * as React from 'react';\nimport {\n  BaseComponent,\n  IRenderFunction,\n  anchorProperties,\n  assign,\n  buttonProperties,\n  getId,\n  getNativeProps,\n  KeyCodes,\n  css,\n  mergeAriaAttributeValues,\n  portalContainsElement\n} from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { ContextualMenu, IContextualMenuProps } from '../../ContextualMenu';\nimport { IButtonProps, IButton } from './Button.types';\nimport { IButtonClassNames, getBaseButtonClassNames } from './BaseButton.classNames';\nimport { getClassNames as getBaseSplitButtonClassNames, ISplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport { KeytipData } from '../../KeytipData';\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonProps extends IButtonProps {\n  baseClassName?: string;\n  variantClassName?: string;\n}\n\nexport interface IBaseButtonState {\n  menuProps?: IContextualMenuProps | null;\n}\n\nconst TouchIdleDelay = 500; /* ms */\n\n/**\n * {@docCategory Button}\n */\nexport class BaseButton extends BaseComponent<IBaseButtonProps, IBaseButtonState> implements IButton {\n  private get _isSplitButton(): boolean {\n    return !!this.props.menuProps && !!this.props.onClick && this.props.split === true;\n  }\n\n  private get _isExpanded(): boolean {\n    const { menuProps } = this.state;\n    if (this.props.persistMenu) {\n      return !!menuProps && !menuProps.hidden;\n    }\n    return !!menuProps;\n  }\n\n  public static defaultProps: Partial<IBaseButtonProps> = {\n    baseClassName: 'ms-Button',\n    styles: {},\n    split: false\n  };\n\n  private _buttonElement = React.createRef<HTMLElement>();\n  private _splitButtonContainer = React.createRef<HTMLDivElement>();\n  private _labelId: string;\n  private _descriptionId: string;\n  private _ariaDescriptionId: string;\n  private _classNames: IButtonClassNames;\n  private _processingTouch: boolean;\n  private _lastTouchTimeoutId: number | undefined;\n  private _renderedPersistentMenu: boolean = false;\n\n  constructor(props: IBaseButtonProps, rootClassName: string) {\n    super(props);\n\n    this._warnConditionallyRequiredProps(['menuProps', 'onClick'], 'split', this.props.split!);\n\n    this._warnDeprecations({\n      rootProps: undefined,\n      description: 'secondaryText',\n      toggled: 'checked'\n    });\n    this._labelId = getId();\n    this._descriptionId = getId();\n    this._ariaDescriptionId = getId();\n\n    this.state = {\n      menuProps: null\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaDescription,\n      ariaLabel,\n      ariaHidden,\n      className,\n      disabled,\n      allowDisabledFocus,\n      primaryDisabled,\n      secondaryText = this.props.description,\n      href,\n      iconProps,\n      menuIconProps,\n      styles,\n      checked,\n      variantClassName,\n      theme,\n      toggle,\n      getClassNames\n    } = this.props;\n\n    // Button is disabled if the whole button (in case of splitbutton is disabled) or if the primary action is disabled\n    const isPrimaryButtonDisabled = disabled || primaryDisabled;\n\n    this._classNames = getClassNames\n      ? getClassNames(\n          theme!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          checked!,\n          this._isExpanded,\n          this.props.split,\n          !!allowDisabledFocus\n        )\n      : getBaseButtonClassNames(\n          theme!,\n          styles!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          checked!,\n          this._isExpanded,\n          this.props.split\n        );\n\n    const { _ariaDescriptionId, _labelId, _descriptionId } = this;\n    // Anchor tag cannot be disabled hence in disabled state rendering\n    // anchor button as normal button\n    const renderAsAnchor: boolean = !isPrimaryButtonDisabled && !!href;\n    const tag = renderAsAnchor ? 'a' : 'button';\n\n    const nativeProps = getNativeProps(\n      assign(renderAsAnchor ? {} : { type: 'button' }, this.props.rootProps, this.props),\n      renderAsAnchor ? anchorProperties : buttonProperties,\n      [\n        'disabled' // let disabled buttons be focused and styled as disabled.\n      ]\n    );\n\n    // Check for ariaLabel passed in via Button props, and fall back to aria-label passed in via native props\n    const resolvedAriaLabel = ariaLabel || (nativeProps as any)['aria-label'];\n\n    // Check for ariaDescription, secondaryText or aria-describedby in the native props to determine source of aria-describedby\n    // otherwise default to undefined so property does not appear in output.\n    let ariaDescribedBy = undefined;\n    if (ariaDescription) {\n      ariaDescribedBy = _ariaDescriptionId;\n    } else if (secondaryText) {\n      ariaDescribedBy = _descriptionId;\n    } else if ((nativeProps as any)['aria-describedby']) {\n      ariaDescribedBy = (nativeProps as any)['aria-describedby'];\n    }\n\n    // If an explicit ariaLabel is given, use that as the label and we're done.\n    // If an explicit aria-labelledby is given, use that and we're done.\n    // If any kind of description is given (which will end up as an aria-describedby attribute),\n    // set the labelledby element. Otherwise, the button is labeled implicitly by the descendent\n    // text on the button (if it exists). Never set both aria-label and aria-labelledby.\n    let ariaLabelledBy = undefined;\n    if (!resolvedAriaLabel) {\n      if ((nativeProps as any)['aria-labelledby']) {\n        ariaLabelledBy = (nativeProps as any)['aria-labelledby'];\n      } else if (ariaDescribedBy) {\n        ariaLabelledBy = this._hasText() ? _labelId : undefined;\n      }\n    }\n\n    const dataIsFocusable =\n      (this.props as any)['data-is-focusable'] === false || (disabled && !allowDisabledFocus) || this._isSplitButton ? false : true;\n\n    const buttonProps = assign(nativeProps, {\n      className: this._classNames.root,\n      ref: this._buttonElement,\n      disabled: isPrimaryButtonDisabled && !allowDisabledFocus,\n      onKeyDown: this._onKeyDown,\n      onKeyPress: this._onKeyPress,\n      onKeyUp: this._onKeyUp,\n      onMouseDown: this._onMouseDown,\n      onMouseUp: this._onMouseUp,\n      onClick: this._onClick,\n      'aria-label': resolvedAriaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-disabled': isPrimaryButtonDisabled,\n      'data-is-focusable': dataIsFocusable,\n      'aria-pressed': toggle ? !!checked : undefined // aria-pressed attribute should only be present for toggle buttons\n    });\n\n    if (ariaHidden) {\n      buttonProps['aria-hidden'] = true;\n    }\n\n    if (this._isSplitButton) {\n      return this._onRenderSplitButtonContent(tag, buttonProps);\n    } else if (this.props.menuProps) {\n      assign(buttonProps, {\n        'aria-expanded': this._isExpanded,\n        'aria-owns': this.state.menuProps ? this._labelId + '-menu' : null,\n        'aria-haspopup': true\n      });\n    }\n\n    return this._onRenderContent(tag, buttonProps);\n  }\n\n  public componentDidMount() {\n    // For split buttons, touching anywhere in the button should drop the dropdown, which should contain the primary action.\n    // This gives more hit target space for touch environments. We're setting the onpointerdown here, because React\n    // does not support Pointer events yet.\n    if (this._isSplitButton && this._splitButtonContainer.current && 'onpointerdown' in this._splitButtonContainer.current) {\n      this._events.on(this._splitButtonContainer.current, 'pointerdown', this._onPointerDown, true);\n    }\n  }\n\n  public componentDidUpdate(prevProps: IBaseButtonProps, prevState: IBaseButtonState) {\n    // If Button's menu was closed, run onAfterMenuDismiss. If the menu is being persisted\n    // this condition is tested by checking on a change on the menuProps hidden value.\n    if (this.props.onAfterMenuDismiss && prevState.menuProps) {\n      if (!this.state.menuProps || (this.props.persistMenu && !prevState.menuProps.hidden && this.state.menuProps.hidden)) {\n        this.props.onAfterMenuDismiss();\n      }\n    }\n  }\n\n  public focus(): void {\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      this._splitButtonContainer.current.focus();\n    } else if (this._buttonElement.current) {\n      this._buttonElement.current.focus();\n    }\n  }\n\n  public dismissMenu(): void {\n    this._dismissMenu();\n  }\n\n  public openMenu(shouldFocusOnContainer?: boolean, shouldFocusOnMount?: boolean): void {\n    this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\n  }\n\n  private _onRenderContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const props = this.props;\n    const Tag = tag;\n    const {\n      menuIconProps,\n      menuProps,\n      onRenderIcon = this._onRenderIcon,\n      onRenderAriaDescription = this._onRenderAriaDescription,\n      onRenderChildren = this._onRenderChildren,\n      onRenderMenu = this._onRenderMenu,\n      onRenderMenuIcon = this._onRenderMenuIcon,\n      disabled\n    } = props;\n    let { keytipProps } = props;\n    if (keytipProps && menuProps) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    const Content = (\n      // If we're making a split button, we won't put the keytip here\n      <KeytipData\n        keytipProps={!this._isSplitButton ? keytipProps : undefined}\n        ariaDescribedBy={(buttonProps as any)['aria-describedby']}\n        disabled={disabled}\n      >\n        {(keytipAttributes: any): JSX.Element => (\n          <Tag {...buttonProps} {...keytipAttributes}>\n            <div className={this._classNames.flexContainer}>\n              {onRenderIcon(props, this._onRenderIcon)}\n              {this._onRenderTextContents()}\n              {onRenderAriaDescription(props, this._onRenderAriaDescription)}\n              {onRenderChildren(props, this._onRenderChildren)}\n              {!this._isSplitButton &&\n                (menuProps || menuIconProps || this.props.onRenderMenuIcon) &&\n                onRenderMenuIcon(this.props, this._onRenderMenuIcon)}\n              {this.state.menuProps && !this.state.menuProps.doNotLayer && onRenderMenu(menuProps, this._onRenderMenu)}\n            </div>\n          </Tag>\n        )}\n      </KeytipData>\n    );\n\n    if (menuProps && menuProps.doNotLayer) {\n      return (\n        <div style={{ display: 'inline-block' }}>\n          {Content}\n          {this.state.menuProps && onRenderMenu(menuProps, this._onRenderMenu)}\n        </div>\n      );\n    }\n\n    return Content;\n  }\n\n  private _onRenderIcon = (buttonProps?: IButtonProps, defaultRender?: IRenderFunction<IButtonProps>): JSX.Element | null => {\n    const { iconProps } = this.props;\n\n    if (iconProps && (iconProps.iconName !== undefined || iconProps.imageProps)) {\n      const { className, ...rest } = iconProps;\n\n      return <Icon className={css(this._classNames.icon, className)} {...rest} />;\n    }\n    return null;\n  };\n\n  private _onRenderTextContents = (): JSX.Element | (JSX.Element | null)[] => {\n    const {\n      text,\n      children,\n      secondaryText = this.props.description,\n      onRenderText = this._onRenderText,\n      onRenderDescription = this._onRenderDescription\n    } = this.props;\n\n    if (text || typeof children === 'string' || secondaryText) {\n      return (\n        <div className={this._classNames.textContainer}>\n          {onRenderText(this.props, this._onRenderText)}\n          {onRenderDescription(this.props, this._onRenderDescription)}\n        </div>\n      );\n    }\n    return [onRenderText(this.props, this._onRenderText), onRenderDescription(this.props, this._onRenderDescription)];\n  };\n\n  private _onRenderText = (): JSX.Element | null => {\n    let { text } = this.props;\n    const { children } = this.props;\n\n    // For backwards compat, we should continue to take in the text content from children.\n    if (text === undefined && typeof children === 'string') {\n      text = children;\n    }\n\n    if (this._hasText()) {\n      return (\n        <div key={this._labelId} className={this._classNames.label} id={this._labelId}>\n          {text}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  private _hasText(): boolean {\n    // _onRenderTextContents and _onRenderText do not perform the same checks. Below is parity with what _onRenderText used to have\n    // before the refactor that introduced this function. _onRenderTextContents does not require props.text to be undefined in order\n    // for props.children to be used as a fallback. Purely a code maintainability/reuse issue, but logged as Issue #4979\n    return this.props.text !== null && (this.props.text !== undefined || typeof this.props.children === 'string');\n  }\n\n  private _onRenderChildren = (): JSX.Element | null => {\n    const { children } = this.props;\n\n    // If children is just a string, either it or the text will be rendered via onRenderLabel\n    // If children is another component, it will be rendered after text\n    if (typeof children === 'string') {\n      return null;\n    }\n\n    return children as any;\n  };\n\n  private _onRenderDescription = (props: IButtonProps) => {\n    const { secondaryText = this.props.description } = props;\n\n    // ms-Button-description is only shown when the button type is compound.\n    // In other cases it will not be displayed.\n    return secondaryText ? (\n      <div key={this._descriptionId} className={this._classNames.description} id={this._descriptionId}>\n        {secondaryText}\n      </div>\n    ) : null;\n  };\n\n  private _onRenderAriaDescription = () => {\n    const { ariaDescription } = this.props;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return ariaDescription ? (\n      <span className={this._classNames.screenReaderText} id={this._ariaDescriptionId}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderMenuIcon = (props: IButtonProps): JSX.Element | null => {\n    const { menuIconProps } = this.props;\n\n    return <Icon iconName=\"ChevronDown\" {...menuIconProps} className={this._classNames.menuIcon} />;\n  };\n\n  private _onRenderMenu = (menuProps: IContextualMenuProps): JSX.Element => {\n    const { onDismiss = this._dismissMenu } = menuProps;\n\n    const MenuType = this.props.menuAs || (ContextualMenu as React.ReactType<IContextualMenuProps>);\n\n    // the accessible menu label (accessible name) has a relationship to the button.\n    // If the menu props do not specify an explicit value for aria-label or aria-labelledBy,\n    // AND the button has text, we'll set the menu aria-labelledBy to the text element id.\n    if (!menuProps.ariaLabel && !menuProps.labelElementId && this._hasText()) {\n      menuProps = { ...menuProps, labelElementId: this._labelId };\n    }\n\n    return (\n      <MenuType\n        id={this._labelId + '-menu'}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        {...menuProps}\n        shouldFocusOnContainer={this.state.menuProps ? this.state.menuProps.shouldFocusOnContainer : undefined}\n        shouldFocusOnMount={this.state.menuProps ? this.state.menuProps.shouldFocusOnMount : undefined}\n        hidden={this.state.menuProps ? this.state.menuProps.hidden : undefined}\n        className={css('ms-BaseButton-menuhost', menuProps.className)}\n        target={this._isSplitButton ? this._splitButtonContainer.current : this._buttonElement.current}\n        onDismiss={onDismiss}\n      />\n    );\n  };\n\n  private _dismissMenu = (): void => {\n    let menuProps = null;\n    if (this.props.persistMenu && this.state.menuProps) {\n      // Create a new object to trigger componentDidUpdate\n      menuProps = { ...this.state.menuProps, hidden: true };\n    }\n    this.setState({ menuProps: menuProps });\n  };\n\n  private _openMenu = (shouldFocusOnContainer?: boolean, shouldFocusOnMount: boolean = true): void => {\n    if (this.props.menuProps) {\n      const menuProps = { ...this.props.menuProps, shouldFocusOnContainer, shouldFocusOnMount };\n      if (this.props.persistMenu) {\n        this._renderedPersistentMenu = true;\n        menuProps.hidden = false;\n      }\n      this.setState({ menuProps: menuProps });\n    }\n  };\n\n  private _onToggleMenu = (shouldFocusOnContainer: boolean): void => {\n    const currentMenuProps = this.state.menuProps;\n    let shouldFocusOnMount = true;\n    if (this.props.menuProps && this.props.menuProps.shouldFocusOnMount === false) {\n      shouldFocusOnMount = false;\n    }\n    if (this.props.persistMenu) {\n      // _renderedPersistentMenu ensures that the first rendering of\n      // the menu happens on-screen, as edge's scrollbar calcuations are off if done while hidden.\n      !this._renderedPersistentMenu || (currentMenuProps && currentMenuProps.hidden)\n        ? this._openMenu(shouldFocusOnContainer, shouldFocusOnMount)\n        : this._dismissMenu();\n    } else {\n      currentMenuProps ? this._dismissMenu() : this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\n    }\n  };\n\n  private _onRenderSplitButtonContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const { styles = {}, disabled, allowDisabledFocus, checked, getSplitButtonClassNames, primaryDisabled, menuProps, toggle } = this.props;\n    let { keytipProps } = this.props;\n\n    const classNames = getSplitButtonClassNames\n      ? getSplitButtonClassNames(!!disabled, this._isExpanded, !!checked, !!allowDisabledFocus)\n      : styles && getBaseSplitButtonClassNames(styles!, !!disabled, this._isExpanded, !!checked, !!primaryDisabled);\n\n    assign(buttonProps, {\n      onClick: undefined,\n      tabIndex: -1,\n      'data-is-focusable': false\n    });\n    const ariaDescribedBy = buttonProps.ariaDescription;\n\n    if (keytipProps && menuProps) {\n      keytipProps = {\n        ...keytipProps,\n        hasMenu: true\n      };\n    }\n\n    const containerProps = getNativeProps(buttonProps, [], ['disabled']);\n    return (\n      <KeytipData keytipProps={keytipProps} disabled={disabled}>\n        {(keytipAttributes: any): JSX.Element => (\n          <div\n            {...containerProps}\n            data-ktp-target={keytipAttributes['data-ktp-target']}\n            role={'button'}\n            aria-disabled={disabled}\n            aria-haspopup={true}\n            aria-expanded={this._isExpanded}\n            aria-pressed={toggle ? !!checked : undefined} // aria-pressed attribute should only be present for toggle buttons\n            aria-describedby={mergeAriaAttributeValues(ariaDescribedBy, keytipAttributes['aria-describedby'])}\n            className={classNames && classNames.splitButtonContainer}\n            onKeyDown={this._onSplitButtonContainerKeyDown}\n            onTouchStart={this._onTouchStart}\n            ref={this._splitButtonContainer}\n            data-is-focusable={true}\n            onClick={!disabled && !primaryDisabled ? this._onSplitButtonPrimaryClick : undefined}\n            tabIndex={!disabled || allowDisabledFocus ? 0 : undefined}\n            aria-roledescription={buttonProps['aria-roledescription']}\n            onFocusCapture={this._onSplitContainerFocusCapture}\n          >\n            <span style={{ display: 'flex' }}>\n              {this._onRenderContent(tag, buttonProps)}\n              {this._onRenderSplitButtonMenuButton(classNames, keytipAttributes)}\n              {this._onRenderSplitButtonDivider(classNames)}\n            </span>\n          </div>\n        )}\n      </KeytipData>\n    );\n  }\n\n  private _onSplitContainerFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    const container = this._splitButtonContainer.current;\n\n    // If the target is coming from the portal we do not need to set focus on the container.\n    if (!container || (ev.target && portalContainsElement(ev.target, container))) {\n      return;\n    }\n\n    // We should never be able to focus the individual buttons in a split button. Focus\n    // should always remain on the container.\n    container.focus();\n  };\n\n  private _onSplitButtonPrimaryClick = (ev: React.MouseEvent<HTMLDivElement>) => {\n    if (this._isExpanded) {\n      this._dismissMenu();\n    }\n\n    if (!this._processingTouch && this.props.onClick) {\n      this.props.onClick(ev);\n    } else if (this._processingTouch) {\n      this._onMenuClick(ev);\n    }\n  };\n\n  private _onRenderSplitButtonDivider(classNames: ISplitButtonClassNames | undefined): JSX.Element | null {\n    if (classNames && classNames.divider) {\n      return <span className={classNames.divider} aria-hidden={true} />;\n    }\n    return null;\n  }\n\n  private _onRenderSplitButtonMenuButton(classNames: ISplitButtonClassNames | undefined, keytipAttributes: any): JSX.Element {\n    const { allowDisabledFocus, checked, disabled } = this.props;\n    let menuIconProps = this.props.menuIconProps;\n\n    const { splitButtonAriaLabel } = this.props;\n\n    if (menuIconProps === undefined) {\n      menuIconProps = {\n        iconName: 'ChevronDown'\n      };\n    }\n\n    const splitButtonProps = {\n      styles: classNames,\n      checked: checked,\n      disabled: disabled,\n      allowDisabledFocus: allowDisabledFocus,\n      onClick: this._onMenuClick,\n      menuProps: undefined,\n      iconProps: { ...menuIconProps, className: this._classNames.menuIcon },\n      ariaLabel: splitButtonAriaLabel,\n      'aria-haspopup': true,\n      'aria-expanded': this._isExpanded,\n      'data-is-focusable': false\n    };\n\n    // Add data-ktp-execute-target to the split button if the keytip is defined\n    return (\n      <BaseButton\n        {...splitButtonProps}\n        data-ktp-execute-target={keytipAttributes['data-ktp-execute-target']}\n        onMouseDown={this._onMouseDown}\n        tabIndex={-1}\n      />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    // explicity cancelling event so click won't fire after this\n    if (this.props.disabled && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuKeyDown(ev);\n      } else if (this.props.onKeyDown !== undefined) {\n        this.props.onKeyDown(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onKeyUp = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (!this.props.disabled && this.props.onKeyUp !== undefined) {\n      this.props.onKeyUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onKeyPress = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (!this.props.disabled && this.props.onKeyPress !== undefined) {\n      this.props.onKeyPress(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseUp = (ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (!this.props.disabled && this.props.onMouseUp !== undefined) {\n      this.props.onMouseUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseDown = (ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (!this.props.disabled && this.props.onMouseDown !== undefined) {\n      this.props.onMouseDown(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onClick = (ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuClick(ev);\n      } else if (this.props.onClick !== undefined) {\n        this.props.onClick(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onSplitButtonContainerKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    if (ev.which === KeyCodes.enter) {\n      if (this._buttonElement.current) {\n        this._buttonElement.current.click();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    } else {\n      this._onMenuKeyDown(ev);\n    }\n  };\n\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    const isUp = ev.which === KeyCodes.up;\n    const isDown = ev.which === KeyCodes.down;\n\n    if (!ev.defaultPrevented && this._isValidMenuOpenKey(ev)) {\n      const { onMenuClick } = this.props;\n      if (onMenuClick) {\n        onMenuClick(ev, this);\n      }\n\n      this._onToggleMenu(false);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    if (!(ev.altKey || ev.metaKey) && (isUp || isDown)) {\n      this.setState(state => {\n        if (state.menuProps && !state.menuProps.shouldFocusOnMount) {\n          return { menuProps: { ...state.menuProps, shouldFocusOnMount: true } };\n        }\n        return state;\n      });\n\n      // This should be done in the setStateCallback but because preventDefault\n      // needs to be called, we have to evaluate the current state, even though\n      // it might not be 100% accurate;\n      if (this.state.menuProps && !this.state.menuProps.shouldFocusOnMount) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  private _onTouchStart: () => void = () => {\n    if (this._isSplitButton && this._splitButtonContainer.current && !('onpointerdown' in this._splitButtonContainer.current)) {\n      this._handleTouchAndPointerEvent();\n    }\n  };\n\n  private _onPointerDown(ev: PointerEvent) {\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent();\n\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  }\n\n  private _handleTouchAndPointerEvent() {\n    // If we already have an existing timeeout from a previous touch and pointer event\n    // cancel that timeout so we can set a nwe one.\n    if (this._lastTouchTimeoutId !== undefined) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n    }, TouchIdleDelay);\n  }\n\n  /**\n   * Returns if the user hits a valid keyboard key to open the menu\n   * @param ev - the keyboard event\n   * @returns True if user clicks on custom trigger key if enabled or alt + down arrow if not. False otherwise.\n   */\n  private _isValidMenuOpenKey(ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>): boolean {\n    if (this.props.menuTriggerKeyCode) {\n      return ev.which === this.props.menuTriggerKeyCode;\n    } else if (this.props.menuProps) {\n      return ev.which === KeyCodes.down && (ev.altKey || ev.metaKey);\n    }\n\n    // Note: When enter is pressed, we will let the event continue to propagate\n    // to trigger the onClick event on the button\n    return false;\n  }\n\n  private _onMenuClick = (ev: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLAnchorElement>) => {\n    const { onMenuClick } = this.props;\n    if (onMenuClick) {\n      onMenuClick(ev, this);\n    }\n\n    if (!ev.defaultPrevented) {\n      // When Edge + Narrator are used together (regardless of if the button is in a form or not), pressing\n      // \"Enter\" fires this method and not _onMenuKeyDown. Checking ev.nativeEvent.detail differentiates\n      // between a real click event and a keypress event (detail should be the number of mouse clicks).\n      // ...Plot twist! For a real click event in IE 11, detail is always 0 (Edge sets it properly to 1).\n      // So we also check the pointerType property, which both Edge and IE set to \"mouse\" for real clicks\n      // and \"\" for pressing \"Enter\" with Narrator on.\n      const shouldFocusOnContainer = ev.nativeEvent.detail !== 0 || (ev.nativeEvent as PointerEvent).pointerType === 'mouse';\n      this._onToggleMenu(shouldFocusOnContainer);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { last } from 'lodash';\nimport styles from './index.module.scss';\n\nexport const BreadCrumb = () => {\n  const { t } = useTranslation();\n  let { url } = useRouteMatch();\n  url = url.split('/');\n  url.shift();\n  const pathArr = url.map(\n    (item, index) => {\n      if (index === 0) {\n        return ({\n          name: t(`routeName.${item}`),\n          path: item\n        })\n      }\n      return ({\n        name: t(`${item}`),\n        path: item\n      })\n    }\n  );\n  const totalPath = [\n    { name: t('home'), path: '/entry' },\n    ...pathArr\n  ]\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>\n        {last(totalPath).name}\n      </h2>\n      <ul className={styles.breadcrumbs}>\n        {\n          totalPath.map((path, idx) =>\n          { \n            if (idx === totalPath.length - 1) {\n              return (\n                <li key={idx}>\n                  <a\n                    disabled\n                    href=\"#\"\n                  >\n                    {path.name}\n                  </a>\n                </li>\n              )\n            } else {\n              let checkSlash = path.path\n              if (checkSlash.charAt(0) !== '/') {\n                checkSlash = `/${path.path}`\n              }\n              return (\n                <li key={idx}>\n                  <Link\n                    to={checkSlash}\n                  >\n                    {path.name}\n                  </Link>\n                </li>\n              )\n            }\n          }\n          )\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default BreadCrumb;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BreadCrumbs_container__2UAi9\",\"title\":\"BreadCrumbs_title__35kKu\",\"breadcrumbs\":\"BreadCrumbs_breadcrumbs__162cE\"};","import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { BaseDecorator } from './BaseDecorator';\nimport { getWindow, hoistStatics } from '../../Utilities';\n\nexport interface IWithResponsiveModeState {\n  responsiveMode?: ResponsiveMode;\n}\n\nexport enum ResponsiveMode {\n  small = 0,\n  medium = 1,\n  large = 2,\n  xLarge = 3,\n  xxLarge = 4,\n  xxxLarge = 5,\n  unknown = 999\n}\n\nconst RESPONSIVE_MAX_CONSTRAINT = [479, 639, 1023, 1365, 1919, 99999999];\n\n/**\n * User specified mode to default to, useful for server side rendering scenarios.\n */\nlet _defaultMode: ResponsiveMode | undefined;\n\n/**\n * Tracking the last mode we successfully rendered, which allows us to\n * paint initial renders with the correct size.\n */\nlet _lastMode: ResponsiveMode | undefined;\n\n/**\n * Allows a server rendered scenario to provide a default responsive mode.\n */\nexport function setResponsiveMode(responsiveMode: ResponsiveMode | undefined): void {\n  _defaultMode = responsiveMode;\n}\n\nexport function withResponsiveMode<TProps extends { responsiveMode?: ResponsiveMode }, TState>(\n  ComposedComponent: new (props: TProps, ...args: any[]) => React.Component<TProps, TState>\n): any {\n  const resultClass = class WithResponsiveMode extends BaseDecorator<TProps, IWithResponsiveModeState> {\n    constructor(props: TProps) {\n      super(props);\n      this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n\n      this.state = {\n        responsiveMode: _defaultMode || _lastMode || ResponsiveMode.large\n      };\n    }\n\n    public componentDidMount(): void {\n      this._events.on(window, 'resize', this._onResize);\n      this._onResize();\n    }\n\n    public componentWillUnmount(): void {\n      this._events.dispose();\n    }\n\n    public render(): JSX.Element | null {\n      const { responsiveMode } = this.state;\n\n      return responsiveMode === ResponsiveMode.unknown ? null : (\n        <ComposedComponent ref={this._updateComposedComponentRef} responsiveMode={responsiveMode} {...this.props as any} />\n      );\n    }\n\n    private _onResize = () => {\n      const responsiveMode = this._getResponsiveMode();\n\n      if (responsiveMode !== this.state.responsiveMode) {\n        this.setState({\n          responsiveMode: responsiveMode\n        });\n      }\n    };\n\n    private _getResponsiveMode(): ResponsiveMode {\n      let responsiveMode = ResponsiveMode.small;\n      const element = findDOMNode(this) as Element;\n      const win = getWindow(element);\n\n      if (typeof win !== 'undefined') {\n        try {\n          while (win.innerWidth > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\n            responsiveMode++;\n          }\n        } catch (e) {\n          // Return a best effort result in cases where we're in the browser but it throws on getting innerWidth.\n          responsiveMode = _defaultMode || _lastMode || ResponsiveMode.large;\n        }\n\n        // Tracking last mode just gives us a better default in future renders,\n        // which avoids starting with the wrong value if we've measured once.\n        _lastMode = responsiveMode;\n      } else {\n        if (_defaultMode !== undefined) {\n          responsiveMode = _defaultMode;\n        } else {\n          throw new Error(\n            'Content was rendered in a server environment without providing a default responsive mode. ' +\n              'Call setResponsiveMode to define what the responsive mode is.'\n          );\n        }\n      }\n\n      return responsiveMode;\n    }\n  };\n  return hoistStatics(ComposedComponent, resultClass);\n}\n","/* tslint:disable:no-string-literal */\nimport { assign } from './object';\n\n/**\n * EventRecord interface.\n *\n * @internal\n */\n// tslint:disable:no-any\nexport interface IEventRecord {\n  target: any;\n  eventName: string;\n  parent: any;\n  callback: (args?: any) => void;\n  elementCallback?: (...args: any[]) => void;\n  objectCallback?: (args?: any) => void;\n  options?: boolean | AddEventListenerOptions;\n}\n// tslint:enable:no-any\n\n/**\n * EventRecordsByName interface.\n *\n * @internal\n */\nexport interface IEventRecordsByName {\n  [eventName: string]: IEventRecordList;\n}\n\n/**\n * EventRecordList interface.\n *\n * @internal\n */\nexport interface IEventRecordList {\n  [id: string]: IEventRecord[] | number;\n  count: number;\n}\n\n/**\n * DeclaredEventsByName interface.\n *\n * @internal\n */\nexport interface IDeclaredEventsByName {\n  [eventName: string]: boolean;\n}\n\n/** An instance of EventGroup allows anything with a handle to it to trigger events on it.\n *  If the target is an HTMLElement, the event will be attached to the element and can be\n *  triggered as usual (like clicking for onclick).\n *  The event can be triggered by calling EventGroup.raise() here. If the target is an\n *  HTMLElement, the event gets raised and is handled by the browser. Otherwise, it gets\n *  handled here in EventGroup, and the handler is called in the context of the parent\n *  (which is passed in in the constructor).\n *\n * @public\n * {@docCategory EventGroup}\n */\nexport class EventGroup {\n  // tslint:disable-next-line:no-inferrable-types\n  private static _uniqueId: number = 0;\n  // tslint:disable-next-line:no-any\n  private _parent: any;\n  private _eventRecords: IEventRecord[];\n  private _id: number = EventGroup._uniqueId++;\n  private _isDisposed: boolean;\n\n  /** For IE8, bubbleEvent is ignored here and must be dealt with by the handler.\n   *  Events raised here by default have bubbling set to false and cancelable set to true.\n   *  This applies also to built-in events being raised manually here on HTMLElements,\n   *  which may lead to unexpected behavior if it differs from the defaults.\n   *\n   */\n  public static raise(\n    // tslint:disable-next-line:no-any\n    target: any,\n    eventName: string,\n    // tslint:disable-next-line:no-any\n    eventArgs?: any,\n    bubbleEvent?: boolean\n  ): boolean | undefined {\n    let retVal;\n\n    if (EventGroup._isElement(target)) {\n      if (typeof document !== 'undefined' && document.createEvent) {\n        let ev = document.createEvent('HTMLEvents');\n\n        ev.initEvent(eventName, bubbleEvent || false, true);\n\n        assign(ev, eventArgs);\n\n        retVal = target.dispatchEvent(ev);\n        // tslint:disable-next-line:no-any\n      } else if (typeof document !== 'undefined' && (document as any)['createEventObject']) {\n        // IE8\n        // tslint:disable-next-line:no-any\n        let evObj = (document as any)['createEventObject'](eventArgs);\n        // cannot set cancelBubble on evObj, fireEvent will overwrite it\n        target.fireEvent('on' + eventName, evObj);\n      }\n    } else {\n      while (target && retVal !== false) {\n        let events = <IEventRecordsByName>target.__events__;\n        let eventRecords = events ? events[eventName] : null;\n\n        if (eventRecords) {\n          for (let id in eventRecords) {\n            if (eventRecords.hasOwnProperty(id)) {\n              let eventRecordList = <IEventRecord[]>eventRecords[id];\n\n              for (let listIndex = 0; retVal !== false && listIndex < eventRecordList.length; listIndex++) {\n                let record = eventRecordList[listIndex];\n\n                if (record.objectCallback) {\n                  retVal = record.objectCallback.call(record.parent, eventArgs);\n                }\n              }\n            }\n          }\n        }\n\n        // If the target has a parent, bubble the event up.\n        target = bubbleEvent ? target.parent : null;\n      }\n    }\n\n    return retVal;\n  }\n\n  // tslint:disable-next-line:no-any\n  public static isObserved(target: any, eventName: string): boolean {\n    let events = target && <IEventRecordsByName>target.__events__;\n\n    return !!events && !!events[eventName];\n  }\n\n  /** Check to see if the target has declared support of the given event. */\n  // tslint:disable-next-line:no-any\n  public static isDeclared(target: any, eventName: string): boolean {\n    let declaredEvents = target && <IDeclaredEventsByName>target.__declaredEvents;\n\n    return !!declaredEvents && !!declaredEvents[eventName];\n  }\n\n  // tslint:disable-next-line:no-any\n  public static stopPropagation(event: any): void {\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      // IE8\n      event.cancelBubble = true;\n    }\n  }\n\n  private static _isElement(target: HTMLElement): boolean {\n    return !!target && (!!target.addEventListener || (typeof HTMLElement !== 'undefined' && target instanceof HTMLElement));\n  }\n\n  /** parent: the context in which events attached to non-HTMLElements are called */\n  // tslint:disable-next-line:no-any\n  public constructor(parent: any) {\n    this._parent = parent;\n    this._eventRecords = [];\n  }\n\n  public dispose(): void {\n    if (!this._isDisposed) {\n      this._isDisposed = true;\n\n      this.off();\n      this._parent = null;\n    }\n  }\n\n  /** On the target, attach a set of events, where the events object is a name to function mapping. */\n  // tslint:disable-next-line:no-any\n  public onAll(target: any, events: { [key: string]: (args?: any) => void }, useCapture?: boolean): void {\n    for (let eventName in events) {\n      if (events.hasOwnProperty(eventName)) {\n        this.on(target, eventName, events[eventName], useCapture);\n      }\n    }\n  }\n\n  /** On the target, attach an event whose handler will be called in the context of the parent\n   * of this instance of EventGroup.\n   */\n  // tslint:disable-next-line:no-any\n  public on(target: any, eventName: string, callback: (args?: any) => void, options?: boolean | AddEventListenerOptions): void {\n    if (eventName.indexOf(',') > -1) {\n      let events = eventName.split(/[ ,]+/);\n\n      for (let i = 0; i < events.length; i++) {\n        this.on(target, events[i], callback, options);\n      }\n    } else {\n      let parent = this._parent;\n      let eventRecord: IEventRecord = {\n        target: target,\n        eventName: eventName,\n        parent: parent,\n        callback: callback,\n        options\n      };\n\n      // Initialize and wire up the record on the target, so that it can call the callback if the event fires.\n      let events = <IEventRecordsByName>(target.__events__ = target.__events__ || {});\n      events[eventName] =\n        events[eventName] ||\n        <IEventRecordList>{\n          count: 0\n        };\n      events[eventName][this._id] = events[eventName][this._id] || [];\n      (<IEventRecord[]>events[eventName][this._id]).push(eventRecord);\n      events[eventName].count++;\n\n      if (EventGroup._isElement(target)) {\n        // tslint:disable-next-line:no-any\n        let processElementEvent = (...args: any[]) => {\n          if (this._isDisposed) {\n            return;\n          }\n\n          let result;\n          try {\n            result = callback.apply(parent, args);\n            if (result === false && args[0]) {\n              let e = args[0];\n\n              if (e.preventDefault) {\n                e.preventDefault();\n              }\n\n              if (e.stopPropagation) {\n                e.stopPropagation();\n              }\n\n              e.cancelBubble = true;\n            }\n          } catch (e) {\n            /* ErrorHelper.log(e); */\n          }\n\n          return result;\n        };\n\n        eventRecord.elementCallback = processElementEvent;\n\n        if (target.addEventListener) {\n          /* tslint:disable:ban-native-functions */\n          (<EventTarget>target).addEventListener(eventName, processElementEvent, options);\n          /* tslint:enable:ban-native-functions */\n        } else if (target.attachEvent) {\n          // IE8\n          target.attachEvent('on' + eventName, processElementEvent);\n        }\n      } else {\n        // tslint:disable-next-line:no-any\n        let processObjectEvent = (...args: any[]) => {\n          if (this._isDisposed) {\n            return;\n          }\n\n          return callback.apply(parent, args);\n        };\n\n        eventRecord.objectCallback = processObjectEvent;\n      }\n\n      // Remember the record locally, so that it can be removed.\n      this._eventRecords.push(eventRecord);\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  public off(target?: any, eventName?: string, callback?: (args?: any) => void, options?: boolean | AddEventListenerOptions): void {\n    for (let i = 0; i < this._eventRecords.length; i++) {\n      let eventRecord = this._eventRecords[i];\n      if (\n        (!target || target === eventRecord.target) &&\n        (!eventName || eventName === eventRecord.eventName) &&\n        (!callback || callback === eventRecord.callback) &&\n        (typeof options !== 'boolean' || options === eventRecord.options)\n      ) {\n        let events = <IEventRecordsByName>eventRecord.target.__events__;\n        let targetArrayLookup = events[eventRecord.eventName];\n        let targetArray = targetArrayLookup ? <IEventRecord[]>targetArrayLookup[this._id] : null;\n\n        // We may have already target's entries, so check for null.\n        if (targetArray) {\n          if (targetArray.length === 1 || !callback) {\n            targetArrayLookup.count -= targetArray.length;\n            delete events[eventRecord.eventName][this._id];\n          } else {\n            targetArrayLookup.count--;\n            targetArray.splice(targetArray.indexOf(eventRecord), 1);\n          }\n\n          if (!targetArrayLookup.count) {\n            delete events[eventRecord.eventName];\n          }\n        }\n\n        if (eventRecord.elementCallback) {\n          if (eventRecord.target.removeEventListener) {\n            eventRecord.target.removeEventListener(eventRecord.eventName, eventRecord.elementCallback, eventRecord.options);\n          } else if (eventRecord.target.detachEvent) {\n            // IE8\n            eventRecord.target.detachEvent('on' + eventRecord.eventName, eventRecord.elementCallback);\n          }\n        }\n\n        this._eventRecords.splice(i--, 1);\n      }\n    }\n  }\n\n  /** Trigger the given event in the context of this instance of EventGroup. */\n  // tslint:disable-next-line:no-any\n  public raise(eventName: string, eventArgs?: any, bubbleEvent?: boolean): boolean | undefined {\n    return EventGroup.raise(this._parent, eventName, eventArgs, bubbleEvent);\n  }\n\n  /** Declare an event as being supported by this instance of EventGroup. */\n  public declare(event: string | string[]): void {\n    let declaredEvents = (this._parent.__declaredEvents = this._parent.__declaredEvents || {});\n\n    if (typeof event === 'string') {\n      declaredEvents[event] = true;\n    } else {\n      for (let i = 0; i < event.length; i++) {\n        declaredEvents[event[i]] = true;\n      }\n    }\n  }\n}\n","import { IButtonStyles } from '../Button.types';\nimport { HighContrastSelector, ITheme, concatStyleSets, getFocusStyle, IStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      border: 'none'\n    };\n\n    const splitButtonDivider: IStyle = {\n      position: 'absolute',\n      width: 1,\n      right: 31,\n      top: 8,\n      bottom: 8\n    };\n\n    const splitButtonDividerDisabled: IStyle = {\n      position: 'absolute',\n      width: 1,\n      right: 31,\n      top: 8,\n      bottom: 8,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'GrayText'\n        }\n      }\n    };\n\n    const splitButtonStyles: IButtonStyles = {\n      splitButtonContainer: [\n        getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus }),\n        {\n          display: 'inline-flex',\n          selectors: {\n            '.ms-Button--default, .ms-Button--primary': {\n              borderRight: 'none'\n            }\n          }\n        }\n      ],\n      splitButtonContainerFocused: {\n        outline: 'none!important'\n      },\n      splitButtonMenuButton: {\n        padding: 6,\n        height: 'auto',\n        boxSizing: 'border-box',\n        border: 0,\n        borderRadius: 0,\n        outline: 'transparent',\n        userSelect: 'none',\n        display: 'inline-block',\n        textDecoration: 'none',\n        textAlign: 'center',\n        cursor: 'pointer',\n        verticalAlign: 'top',\n        width: 32,\n        marginLeft: -1,\n        marginTop: 0,\n        marginRight: 0,\n        marginBottom: 0,\n        selectors: {\n          [HighContrastSelector]: {\n            border: `1px solid white`,\n            borderLeft: 'none'\n          }\n        }\n      },\n\n      splitButtonDivider: splitButtonDivider,\n      splitButtonDividerDisabled: splitButtonDividerDisabled,\n      splitButtonMenuButtonDisabled: {\n        pointerEvents: 'none',\n        selectors: {\n          ':hover': {\n            cursor: 'default'\n          },\n          [HighContrastSelector]: {\n            border: `1px solid GrayText`,\n            color: 'GrayText',\n            backgroundColor: 'Window'\n          }\n        }\n      },\n\n      splitButtonFlexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n\n      splitButtonContainerDisabled: {\n        outline: 'none',\n        border: 'none'\n      }\n    };\n\n    return concatStyleSets(splitButtonStyles, customStyles)!;\n  }\n);\n","const REACT_LIFECYCLE_EXCLUSIONS = [\n  'setState',\n  'render',\n  'componentWillMount',\n  'UNSAFE_componentWillMount',\n  'componentDidMount',\n  'componentWillReceiveProps',\n  'UNSAFE_componentWillReceiveProps',\n  'shouldComponentUpdate',\n  'componentWillUpdate',\n  'getSnapshotBeforeUpdate',\n  'UNSAFE_componentWillUpdate',\n  'componentDidUpdate',\n  'componentWillUnmount'\n];\n\n/**\n * Allows you to hoist methods, except those in an exclusion set from a source object into a destination object.\n *\n * @public\n * @param destination - The instance of the object to hoist the methods onto.\n * @param source - The instance of the object where the methods are hoisted from.\n * @param exclusions - (Optional) What methods to exclude from being hoisted.\n * @returns An array of names of methods that were hoisted.\n */\nexport function hoistMethods(\n  // tslint:disable-next-line:no-any\n  destination: any,\n  // tslint:disable-next-line:no-any\n  source: any,\n  exclusions: string[] = REACT_LIFECYCLE_EXCLUSIONS\n): string[] {\n  let hoisted: string[] = [];\n  for (let methodName in source) {\n    if (\n      typeof source[methodName] === 'function' &&\n      destination[methodName] === undefined &&\n      (!exclusions || exclusions.indexOf(methodName) === -1)\n    ) {\n      hoisted.push(methodName);\n      /* tslint:disable:no-function-expression */\n      destination[methodName] = function(): void {\n        source[methodName].apply(source, arguments);\n      };\n      /* tslint:enable */\n    }\n  }\n\n  return hoisted;\n}\n\n/**\n * Provides a method for convenience to unhoist hoisted methods.\n *\n * @public\n * @param source - The source object upon which methods were hoisted.\n * @param methodNames - An array of method names to unhoist.\n */\n// tslint:disable-next-line:no-any\nexport function unhoistMethods(source: any, methodNames: string[]): void {\n  methodNames.forEach((methodName: string) => delete source[methodName]);\n}\n","import * as React from 'react';\nimport { BaseComponent, hoistMethods, unhoistMethods } from '../../Utilities';\n\nexport class BaseDecorator<TProps, TState> extends BaseComponent<TProps, TState> {\n  // tslint:disable-next-line:typedef\n  protected _skipComponentRefResolution = true;\n\n  protected _composedComponentInstance: React.Component<TProps, TState>;\n\n  private _hoisted: string[];\n\n  constructor(props: TProps) {\n    super(props);\n    this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n  }\n\n  /**\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\n   * (and unhoisting as appropriate) methods from said component.\n   *\n   * Pass this method as the argument to the 'ref' property of the composed component.\n   */\n  protected _updateComposedComponentRef(composedComponentInstance: React.Component<TProps, TState>): void {\n    this._composedComponentInstance = composedComponentInstance;\n    if (composedComponentInstance) {\n      this._hoisted = hoistMethods(this, composedComponentInstance);\n    } else if (this._hoisted) {\n      unhoistMethods(this, this._hoisted);\n    }\n  }\n}\n","// tslint:disable:no-any\n\n/**\n * Returns a single function which will call each of the given functions in the context of the\n * parent.\n */\nexport function appendFunction(parent: any, ...functions: (any)[]): () => void {\n  if (functions.length < 2) {\n    return functions[0] as () => void;\n  }\n\n  return (...args: any[]): void => {\n    functions.forEach((f: () => void) => f && f.apply(parent, args));\n  };\n}\n","import * as React from 'react';\nimport { appendFunction } from './appendFunction';\n\n/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\nexport function extendComponent<T extends React.Component>(parent: T, methods: { [key in keyof T]?: T[key] }): void {\n  for (let name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      // tslint:disable-next-line:no-any\n      parent[name] = appendFunction(parent, parent[name], methods[name]) as any;\n    }\n  }\n}\n","import * as React from 'react';\n\nimport { IFontIconProps } from './Icon.types';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport { css, getNativeProps, htmlElementProperties, memoizeFunction } from '../../Utilities';\nimport { getIcon } from '../../Styling';\n\nexport const getIconContent = memoizeFunction((iconName?: string) => {\n  const iconDefinition = getIcon(iconName) || {\n    subset: {\n      className: undefined\n    },\n    code: undefined\n  };\n\n  return {\n    children: iconDefinition.code,\n    iconClassName: iconDefinition.subset.className\n  };\n});\n\n/**\n * Fast icon component which only supports font glyphs (not images) and isn't themeable.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n */\nexport const FontIcon: React.StatelessComponent<IFontIconProps> = props => {\n  const { iconName, className } = props;\n  const { iconClassName, children } = getIconContent(iconName);\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLElement>>(props, htmlElementProperties);\n  const containerProps = props['aria-label']\n    ? {}\n    : {\n        role: 'presentation',\n        'aria-hidden': true\n      };\n\n  return (\n    <i\n      data-icon-name={iconName}\n      {...containerProps}\n      {...nativeProps}\n      className={css(MS_ICON, classNames.root, iconClassName, !iconName && classNames.placeholder, className)}\n    >\n      {children}\n    </i>\n  );\n};\n\n/**\n * Memoized helper for rendering a FontIcon.\n * @param iconName - The name of the icon to use from the icon font.\n * @param className - Class name for styling the icon.\n * @param ariaLabel - Label for the icon for the benefit of screen readers.\n */\nexport const getFontIcon = memoizeFunction((iconName: string, className?: string, ariaLabel?: string) => {\n  return FontIcon({ iconName, className, 'aria-label': ariaLabel })!;\n});\n","import * as React from 'react';\nimport { FocusZone } from './FocusZone';\nimport { IRefObject, IPoint } from '../../Utilities';\n\n/**\n * FocusZone component class interface.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZone {\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement?: boolean): boolean;\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * onBeforeFocus to created delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(childElement?: HTMLElement): boolean;\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference, rather than a center based on\n   * the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  setFocusAlignment(point: IPoint): void;\n}\n\n/**\n * FocusZone component props.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZoneProps extends React.HTMLAttributes<HTMLElement | FocusZone> {\n  /**\n   * Optional callback to access the IFocusZone interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IFocusZone>;\n\n  /**\n   * Additional class name to provide on the root element, in addition to the ms-FocusZone class.\n   */\n  className?: string;\n\n  /**\n   * Defines which arrows to react to.\n   * @defaultvalue FocusZoneDirection.bidirectional\n   */\n  direction?: FocusZoneDirection;\n\n  /**\n   * Optionally provide a selector for identifying the intial active element.\n   */\n  defaultActiveElement?: string;\n\n  /**\n   * If set, the FocusZone will not be tabbable and keyboard navigation will be disabled.\n   * This does not affect disabled attribute of any child.\n   */\n  disabled?: boolean;\n\n  /**\n   * Element type the root element will use. Default is \"div\".\n   * @deprecated Use 'as' instead.\n   */\n  elementType?: keyof React.ReactHTML;\n\n  /**\n   * A component that should be used as the root element of the FocusZone component.\n   */\n  as?: React.ReactType;\n\n  /**\n   * If set, will cycle to the beginning of the targets once the user navigates to the\n   * next target while at the end, and to the end when navigate to the previous at the beginning.\n   */\n  isCircularNavigation?: boolean;\n\n  /**\n   * If provided, this callback will be executed on keypresses to determine if the user\n   * intends to navigate into the inner zone. Returning true will ask the first inner zone to\n   * set focus.\n   */\n  isInnerZoneKeystroke?: (ev: React.KeyboardEvent<HTMLElement>) => boolean;\n\n  /**\n   * Sets the aria-labelledby attribute.\n   * @deprecated Directly use the `aria-labelledby` attribute instead\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Sets the aria-describedby attribute.\n   * @deprecated Directly use the `aria-describedby` attribute instead\n   */\n  ariaDescribedBy?: string;\n\n  /**\n   * Callback for when one of immediate children elements gets active by getting focused\n   * or by having one of its respective children elements focused.\n   */\n  onActiveElementChanged?: (element?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void;\n\n  /**\n   * Deprecated at v1.12.1. DIV props provided to the FocusZone will be mixed into the root element.\n   * @deprecated DIV props provided to the FocusZone will be mixed into the root element.\n   */\n  rootProps?: React.HTMLAttributes<HTMLDivElement>;\n\n  /**\n   * Callback method for determining if focus should indeed be set on the given element.\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus should be set to the given element, false to avoid setting focus.\n   */\n  onBeforeFocus?: (childElement?: HTMLElement) => boolean;\n\n  /** Allow focus to move to root */\n  allowFocusRoot?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   * @deprecated Use `handleTabKey` instead.\n   *\n   */\n  allowTabKey?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   */\n  handleTabKey?: FocusZoneTabbableElements;\n\n  /**\n   * A callback method to determine if the input element should lose focus on arrow keys\n   *  @param inputElement - The input element which is to loose focus.\n   *  @returns True if input element should loose focus or false otherwise.\n   */\n  shouldInputLoseFocusOnArrowKey?: (inputElement: HTMLInputElement) => boolean;\n\n  /**\n   * Whether the to check for data-no-horizontal-wrap or data-no-vertical-wrap attributes\n   * when determining how to move focus\n   * @defaultvalue false\n   */\n  checkForNoWrap?: boolean;\n\n  /**\n   * Whether the FocusZone should allow focus events to propagate past the FocusZone\n   */\n  doNotAllowFocusEventToPropagate?: boolean;\n\n  /**\n   * Callback to notify creators that focus has been set on the FocusZone\n   */\n  onFocusNotification?: () => void;\n}\n/**\n * {@docCategory FocusZone}\n */\nexport const FocusZoneTabbableElements = {\n  /** Tabbing is not allowed */\n  none: 0 as 0,\n\n  /** All tabbing action is allowed */\n  all: 1 as 1,\n\n  /** Tabbing is allowed only on input elements */\n  inputOnly: 2 as 2\n};\n\n/**\n * {@docCategory FocusZone}\n */\nexport type FocusZoneTabbableElements = typeof FocusZoneTabbableElements[keyof typeof FocusZoneTabbableElements];\n\n/**\n * {@docCategory FocusZone}\n */\nexport enum FocusZoneDirection {\n  /** Only react to up/down arrows. */\n  vertical = 0,\n\n  /** Only react to left/right arrows. */\n  horizontal = 1,\n\n  /** React to all arrows. */\n  bidirectional = 2\n}\n","import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(parent: HTMLElement | null, child: HTMLElement | null, allowVirtualParents: boolean = true): boolean {\n  let isContained = false;\n  if (parent && child) {\n    if (allowVirtualParents) {\n      isContained = false;\n      while (child) {\n        let nextParent: HTMLElement | null = getParent(child);\n        if (nextParent === parent) {\n          isContained = true;\n          break;\n        }\n        child = nextParent;\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n  return isContained;\n}\n","import { getWindow } from './dom/getWindow';\n\ndeclare function setTimeout(cb: Function, delay: number): number;\ndeclare function setInterval(cb: Function, delay: number): number;\n\n/**\n * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.\n * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.\n *\n * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a\n * new instance of the class and remember to call dispose() during your code's dispose handler.\n *\n * @public\n */\nexport class Async {\n  private _timeoutIds: { [id: number]: boolean } | null = null;\n  private _immediateIds: { [id: number]: boolean } | null = null;\n  private _intervalIds: { [id: number]: boolean } | null = null;\n  private _animationFrameIds: { [id: number]: boolean } | null = null;\n  private _isDisposed: boolean;\n  private _parent: object | null;\n  // tslint:disable-next-line:no-any\n  private _onErrorHandler: ((e: any) => void) | undefined;\n  private _noop: () => void;\n  // tslint:disable-next-line:no-any\n  constructor(parent?: object, onError?: (e: any) => void) {\n    this._isDisposed = false;\n    this._parent = parent || null;\n    this._onErrorHandler = onError;\n    this._noop = () => {\n      /* do nothing */\n    };\n  }\n\n  /**\n   * Dispose function, clears all async operations.\n   */\n  public dispose(): void {\n    let id;\n\n    this._isDisposed = true;\n    this._parent = null;\n\n    // Clear timeouts.\n    if (this._timeoutIds) {\n      for (id in this._timeoutIds) {\n        if (this._timeoutIds.hasOwnProperty(id)) {\n          this.clearTimeout(parseInt(id, 10));\n        }\n      }\n\n      this._timeoutIds = null;\n    }\n\n    // Clear immediates.\n    if (this._immediateIds) {\n      for (id in this._immediateIds) {\n        if (this._immediateIds.hasOwnProperty(id)) {\n          this.clearImmediate(parseInt(id, 10));\n        }\n      }\n\n      this._immediateIds = null;\n    }\n\n    // Clear intervals.\n    if (this._intervalIds) {\n      for (id in this._intervalIds) {\n        if (this._intervalIds.hasOwnProperty(id)) {\n          this.clearInterval(parseInt(id, 10));\n        }\n      }\n      this._intervalIds = null;\n    }\n\n    // Clear animation frames.\n    if (this._animationFrameIds) {\n      for (id in this._animationFrameIds) {\n        if (this._animationFrameIds.hasOwnProperty(id)) {\n          this.cancelAnimationFrame(parseInt(id, 10));\n        }\n      }\n\n      this._animationFrameIds = null;\n    }\n  }\n\n  /**\n   * SetTimeout override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setTimeout(callback: () => void, duration: number): number {\n    let timeoutId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._timeoutIds) {\n        this._timeoutIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      timeoutId = setTimeout(() => {\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n        try {\n          // Now delete the record and call the callback.\n          if (this._timeoutIds) {\n            delete this._timeoutIds[timeoutId];\n          }\n          callback.apply(this._parent);\n        } catch (e) {\n          if (this._onErrorHandler) {\n            this._onErrorHandler(e);\n          }\n        }\n      }, duration);\n      /* tslint:enable:ban-native-functions */\n\n      this._timeoutIds[timeoutId] = true;\n    }\n\n    return timeoutId;\n  }\n\n  /**\n   * Clears the timeout.\n   * @param id - Id to cancel.\n   */\n  public clearTimeout(id: number): void {\n    if (this._timeoutIds && this._timeoutIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      clearTimeout(id);\n      delete this._timeoutIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * SetImmediate override, which will auto cancel the immediate during dispose.\n   * @param callback - Callback to execute.\n   * @param targetElement - Optional target element to use for identifying the correct window.\n   * @returns The setTimeout id.\n   */\n  public setImmediate(callback: () => void, targetElement?: Element | null): number {\n    let immediateId = 0;\n    const win = getWindow(targetElement)!;\n\n    if (!this._isDisposed) {\n      if (!this._immediateIds) {\n        this._immediateIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      let setImmediateCallback = () => {\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n        try {\n          // Now delete the record and call the callback.\n          if (this._immediateIds) {\n            delete this._immediateIds[immediateId];\n          }\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      immediateId = win.setTimeout(setImmediateCallback, 0);\n      /* tslint:enable:ban-native-functions */\n\n      this._immediateIds[immediateId] = true;\n    }\n\n    return immediateId;\n  }\n\n  /**\n   * Clears the immediate.\n   * @param id - Id to cancel.\n   * @param targetElement - Optional target element to use for identifying the correct window.\n   */\n  public clearImmediate(id: number, targetElement?: Element | null): void {\n    const win = getWindow(targetElement)!;\n\n    if (this._immediateIds && this._immediateIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      win.clearTimeout(id);\n      delete this._immediateIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * SetInterval override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setInterval(callback: () => void, duration: number): number {\n    let intervalId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._intervalIds) {\n        this._intervalIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      intervalId = setInterval(() => {\n        // Time to execute the interval callback, enqueue it as a foreground task to be executed.\n        try {\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      }, duration);\n      /* tslint:enable:ban-native-functions */\n\n      this._intervalIds[intervalId] = true;\n    }\n\n    return intervalId;\n  }\n\n  /**\n   * Clears the interval.\n   * @param id - Id to cancel.\n   */\n  public clearInterval(id: number): void {\n    if (this._intervalIds && this._intervalIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      clearInterval(id);\n      delete this._intervalIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the func function at most once per\n   * every wait milliseconds. Provide an options object to indicate that func should be invoked\n   * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled\n   * function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the the throttled function is invoked more than once during the wait timeout.\n   *\n   * @param func - The function to throttle.\n   * @param wait - The number of milliseconds to throttle executions to. Defaults to 0.\n   * @param options - The options object.\n   * @returns The new throttled function.\n   */\n  public throttle<T extends Function>(\n    func: T,\n    wait?: number,\n    options?: {\n      leading?: boolean;\n      trailing?: boolean;\n    }\n  ): T | (() => void) {\n    if (this._isDisposed) {\n      return this._noop;\n    }\n\n    let waitMS = wait || 0;\n    let leading = true;\n    let trailing = true;\n    let lastExecuteTime = 0;\n    let lastResult: T;\n    // tslint:disable-next-line:no-any\n    let lastArgs: any[];\n    let timeoutId: number | null = null;\n\n    if (options && typeof options.leading === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof options.trailing === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    let callback = (userCall?: boolean) => {\n      let now = new Date().getTime();\n      let delta = now - lastExecuteTime;\n      let waitLength = leading ? waitMS - delta : waitMS;\n      if (delta >= waitMS && (!userCall || leading)) {\n        lastExecuteTime = now;\n        if (timeoutId) {\n          this.clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        lastResult = func.apply(this._parent, lastArgs);\n      } else if (timeoutId === null && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    // tslint:disable-next-line:no-any\n    let resultFunction: () => T = (...args: any[]) => {\n      lastArgs = args;\n      return callback(true);\n    };\n\n    return resultFunction;\n  }\n\n  /**\n   * Creates a function that will delay the execution of func until after wait milliseconds have\n   * elapsed since the last time it was invoked. Provide an options object to indicate that func\n   * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls\n   * to the debounced function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the the debounced function is invoked more than once during the wait\n   * timeout.\n   *\n   * @param func - The function to debounce.\n   * @param wait - The number of milliseconds to delay.\n   * @param options - The options object.\n   * @returns The new debounced function.\n   */\n  public debounce<T extends Function>(\n    func: T,\n    wait?: number,\n    options?: {\n      leading?: boolean;\n      maxWait?: number;\n      trailing?: boolean;\n    }\n  ): ICancelable<T> & (() => void) {\n    if (this._isDisposed) {\n      let noOpFunction: ICancelable<T> & (() => T) = (() => {\n        /** Do nothing */\n      }) as ICancelable<T> & (() => T);\n\n      noOpFunction.cancel = () => {\n        return;\n      };\n      /* tslint:disable:no-any */\n      noOpFunction.flush = (() => null) as any;\n      /* tslint:enable:no-any */\n      noOpFunction.pending = () => false;\n\n      return noOpFunction;\n    }\n\n    let waitMS = wait || 0;\n    let leading = false;\n    let trailing = true;\n    let maxWait: number | null = null;\n    let lastCallTime = 0;\n    let lastExecuteTime = new Date().getTime();\n    let lastResult: T;\n    // tslint:disable-next-line:no-any\n    let lastArgs: any[];\n    let timeoutId: number | null = null;\n\n    if (options && typeof options.leading === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof options.trailing === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    if (options && typeof options.maxWait === 'number' && !isNaN(options.maxWait)) {\n      maxWait = options.maxWait;\n    }\n\n    let markExecuted = (time: number) => {\n      if (timeoutId) {\n        this.clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n      lastExecuteTime = time;\n    };\n\n    let invokeFunction = (time: number) => {\n      markExecuted(time);\n      lastResult = func.apply(this._parent, lastArgs);\n    };\n\n    let callback = (userCall?: boolean) => {\n      let now = new Date().getTime();\n      let executeImmediately = false;\n      if (userCall) {\n        if (leading && now - lastCallTime >= waitMS) {\n          executeImmediately = true;\n        }\n        lastCallTime = now;\n      }\n      let delta = now - lastCallTime;\n      let waitLength = waitMS - delta;\n      let maxWaitDelta = now - lastExecuteTime;\n      let maxWaitExpired = false;\n\n      if (maxWait !== null) {\n        // maxWait only matters when there is a pending callback\n        if (maxWaitDelta >= maxWait && timeoutId) {\n          maxWaitExpired = true;\n        } else {\n          waitLength = Math.min(waitLength, maxWait - maxWaitDelta);\n        }\n      }\n\n      if (delta >= waitMS || maxWaitExpired || executeImmediately) {\n        invokeFunction(now);\n      } else if ((timeoutId === null || !userCall) && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    let pending = (): boolean => {\n      return !!timeoutId;\n    };\n\n    let cancel = (): void => {\n      if (pending()) {\n        // Mark the debounced function as having executed\n        markExecuted(new Date().getTime());\n      }\n    };\n\n    let flush = (): T => {\n      if (pending()) {\n        invokeFunction(new Date().getTime());\n      }\n\n      return lastResult;\n    };\n\n    // tslint:disable-next-line:no-any\n    let resultFunction: ICancelable<T> & (() => T) = ((...args: any[]) => {\n      lastArgs = args;\n      return callback(true);\n    }) as ICancelable<T> & (() => T);\n\n    resultFunction.cancel = cancel;\n    resultFunction.flush = flush;\n    resultFunction.pending = pending;\n\n    return resultFunction;\n  }\n\n  public requestAnimationFrame(callback: () => void, targetElement?: Element | null): number {\n    let animationFrameId = 0;\n    const win = getWindow(targetElement)!;\n\n    if (!this._isDisposed) {\n      if (!this._animationFrameIds) {\n        this._animationFrameIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      let animationFrameCallback = () => {\n        try {\n          // Now delete the record and call the callback.\n          if (this._animationFrameIds) {\n            delete this._animationFrameIds[animationFrameId];\n          }\n\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      animationFrameId = win.requestAnimationFrame\n        ? win.requestAnimationFrame(animationFrameCallback)\n        : win.setTimeout(animationFrameCallback, 0);\n      /* tslint:enable:ban-native-functions */\n\n      this._animationFrameIds[animationFrameId] = true;\n    }\n\n    return animationFrameId;\n  }\n\n  public cancelAnimationFrame(id: number, targetElement?: Element | null): void {\n    const win = getWindow(targetElement)!;\n\n    if (this._animationFrameIds && this._animationFrameIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      win.cancelAnimationFrame ? win.cancelAnimationFrame(id) : win.clearTimeout(id);\n      /* tslint:enable:ban-native-functions */\n      delete this._animationFrameIds[id];\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _logError(e: any): void {\n    if (this._onErrorHandler) {\n      this._onErrorHandler(e);\n    }\n  }\n}\n\nexport type ICancelable<T> = {\n  flush: () => T;\n  cancel: () => void;\n  pending: () => boolean;\n};\n","/**\n * Allows you to hoist static functions in components.\n * Created for the purpose of fixing broken static functions in classes\n * that utilize decorators.\n *\n * @public\n * @param source - The object where the methods are hoisted from.\n * @param dest - The object to hoist the methods onto.\n * @returns The dest object with methods added\n */\n\nexport function hoistStatics<TSource, TDest>(source: TSource, dest: TDest): TDest {\n  for (const name in source) {\n    if (source.hasOwnProperty(name)) {\n      // tslint:disable-next-line:no-any\n      (dest as any)[name] = source[name];\n    }\n  }\n\n  return dest;\n}\n","import { DirectionalHint } from '../../common/DirectionalHint';\nimport { IPoint } from './positioning.types';\nimport { IRectangle } from '../../Utilities';\n\nexport enum RectangleEdge {\n  top = 1,\n  bottom = -1,\n  left = 2,\n  right = -2\n}\n\nexport enum Position {\n  top = 0,\n  bottom = 1,\n  start = 2,\n  end = 3\n}\nexport interface IPositionProps {\n  target?: Element | MouseEvent | IPoint;\n  /** how the element should be positioned */\n  directionalHint?: DirectionalHint;\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n  /** The gap between the callout and the target */\n  gapSpace?: number;\n  /**\n   * The bounding rectangle for which  the contextual menu can appear in.\n   */\n  bounds?: IRectangle;\n  /**\n   * If true the position returned will have the menu element cover the target.\n   * If false then it will position next to the target;\n   */\n  coverTarget?: boolean;\n  /**\n   * If true the position will not change edges in an attempt to fit the rectangle within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * If true the positioning logic will prefer flipping edges over nudging the rectangle to fit within bounds,\n   * thus making sure the the element align perfectly with target.\n   */\n  alignTargetEdge?: boolean;\n}\n\nexport interface ICalloutPositionProps extends IPositionProps {\n  /**\n   * The width of the beak.\n   */\n  beakWidth?: number;\n\n  /**\n   * Whether or not the beak is visible\n   */\n  isBeakVisible?: boolean;\n}\n\nexport interface IPositionedData {\n  /**\n   * The new position of the element.\n   */\n  elementPosition: IPosition;\n  /**\n   * The finalized target edge that element is aligning to. For instance RectangleEdge.bottom would mean\n   * that the bottom edge of the target is being aligned to by the RectangleEdge.top of the element\n   * that is being positioned.\n   */\n  targetEdge: RectangleEdge;\n  /**\n   * The finalized alignment edge that the element is aligning too. For instance, RectangleEdge.left means\n   * that the left edge of the target should be in line with the left edge of the element being positioned.\n   */\n  alignmentEdge?: RectangleEdge;\n}\n\nexport interface ICalloutPositionedInfo extends IPositionedData {\n  beakPosition: ICalloutBeakPositionedInfo;\n}\n\nexport interface ICalloutBeakPositionedInfo extends IPositionedData {\n  closestEdge: RectangleEdge;\n}\n\n/**\n * Gives the position of some element on the page. Only a pair of vertical and horizontal edges need to be\n * given. So top/left or bottom/left is sufficient.\n * The number given is the distance in pixels from whatever host was given..\n * So bottom: 100 would be 100px up from the bottom of the host while top: 100px from the top.\n */\nexport interface IPosition {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n  [key: string]: number | undefined;\n}\n\nexport interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport interface IPositionDirectionalHintData {\n  targetEdge: RectangleEdge;\n  alignmentEdge?: RectangleEdge;\n  isAuto?: boolean;\n  alignTargetEdge?: boolean;\n}\n\nexport interface IRelativePositions {\n  calloutPosition: IPosition;\n  beakPosition: { position: IPosition | undefined; display: 'block' };\n  directionalClassName: string;\n  submenuDirection: DirectionalHint;\n}\n","export const DATA_PORTAL_ATTRIBUTE = 'data-portal-element';\n\n/**\n * Identify element as a portal by setting an attribute.\n * @param element - Element to mark as a portal.\n */\nexport function setPortalAttribute(element: HTMLElement): void {\n  element.setAttribute(DATA_PORTAL_ATTRIBUTE, 'true');\n}\n","import * as React from 'react';\nimport { classNamesFunction, getNativeProps, imageProperties } from '../../Utilities';\nimport { IImageProps, IImageStyleProps, IImageStyles, ImageCoverStyle, ImageFit, ImageLoadState } from './Image.types';\n\nconst getClassNames = classNamesFunction<IImageStyleProps, IImageStyles>();\n\nexport interface IImageState {\n  loadState?: ImageLoadState;\n}\n\nconst KEY_PREFIX = 'fabricImage';\n\nexport class ImageBase extends React.Component<IImageProps, IImageState> {\n  public static defaultProps = {\n    shouldFadeIn: true\n  };\n\n  private static _svgRegex = /\\.svg$/i;\n\n  // Make an initial assumption about the image layout until we can\n  // check the rendered element. The value here only takes effect when\n  // shouldStartVisible is true.\n  private _coverStyle: ImageCoverStyle = ImageCoverStyle.portrait;\n  private _imageElement = React.createRef<HTMLImageElement>();\n  private _frameElement = React.createRef<HTMLDivElement>();\n\n  constructor(props: IImageProps) {\n    super(props);\n\n    this.state = {\n      loadState: ImageLoadState.notLoaded\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IImageProps): void {\n    if (nextProps.src !== this.props.src) {\n      this.setState({\n        loadState: ImageLoadState.notLoaded\n      });\n    } else if (this.state.loadState === ImageLoadState.loaded) {\n      this._computeCoverStyle(nextProps);\n    }\n  }\n\n  public componentDidUpdate(prevProps: IImageProps, prevState: IImageState) {\n    this._checkImageLoaded();\n    if (this.props.onLoadingStateChange && prevState.loadState !== this.state.loadState) {\n      this.props.onLoadingStateChange(this.state.loadState!);\n    }\n  }\n\n  public render(): JSX.Element {\n    const imageProps = getNativeProps(this.props, imageProperties, ['width', 'height']);\n    const {\n      src,\n      alt,\n      width,\n      height,\n      shouldFadeIn,\n      shouldStartVisible,\n      className,\n      imageFit,\n      role,\n      maximizeFrame,\n      styles,\n      theme\n    } = this.props;\n    const { loadState } = this.state;\n    const coverStyle = this.props.coverStyle !== undefined ? this.props.coverStyle : this._coverStyle;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      width,\n      height,\n      maximizeFrame,\n      shouldFadeIn,\n      shouldStartVisible,\n      isLoaded: loadState === ImageLoadState.loaded || (loadState === ImageLoadState.notLoaded && this.props.shouldStartVisible),\n      isLandscape: coverStyle === ImageCoverStyle.landscape,\n      isCenter: imageFit === ImageFit.center,\n      isCenterContain: imageFit === ImageFit.centerContain,\n      isCenterCover: imageFit === ImageFit.centerCover,\n      isContain: imageFit === ImageFit.contain,\n      isCover: imageFit === ImageFit.cover,\n      isNone: imageFit === ImageFit.none,\n      isError: loadState === ImageLoadState.error,\n      isNotImageFit: imageFit === undefined\n    });\n\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (\n      <div className={classNames.root} style={{ width: width, height: height }} ref={this._frameElement}>\n        <img\n          {...imageProps}\n          onLoad={this._onImageLoaded}\n          onError={this._onImageError}\n          key={KEY_PREFIX + this.props.src || ''}\n          className={classNames.image}\n          ref={this._imageElement}\n          src={src}\n          alt={alt}\n          role={role}\n        />\n      </div>\n    );\n  }\n\n  private _onImageLoaded = (ev: React.SyntheticEvent<HTMLImageElement>): void => {\n    const { src, onLoad } = this.props;\n    if (onLoad) {\n      onLoad(ev);\n    }\n\n    this._computeCoverStyle(this.props);\n\n    if (src) {\n      this.setState({\n        loadState: ImageLoadState.loaded\n      });\n    }\n  };\n\n  private _checkImageLoaded(): void {\n    const { src } = this.props;\n    const { loadState } = this.state;\n\n    if (loadState === ImageLoadState.notLoaded) {\n      // testing if naturalWidth and naturalHeight are greater than zero is better than checking\n      // .complete, because .complete will also be set to true if the image breaks. However,\n      // for some browsers, SVG images do not have a naturalWidth or naturalHeight, so fall back\n      // to checking .complete for these images.\n      const isLoaded: boolean = this._imageElement.current\n        ? (src && (this._imageElement.current.naturalWidth > 0 && this._imageElement.current.naturalHeight > 0)) ||\n          (this._imageElement.current.complete && ImageBase._svgRegex.test(src!))\n        : false;\n\n      if (isLoaded) {\n        this._computeCoverStyle(this.props);\n        this.setState({\n          loadState: ImageLoadState.loaded\n        });\n      }\n    }\n  }\n\n  private _computeCoverStyle(props: IImageProps): void {\n    const { imageFit, width, height } = props;\n\n    // Do not compute cover style if it was already specified in props\n    if (\n      (imageFit === ImageFit.cover ||\n        imageFit === ImageFit.contain ||\n        imageFit === ImageFit.centerContain ||\n        imageFit === ImageFit.centerCover) &&\n      this.props.coverStyle === undefined &&\n      this._imageElement.current &&\n      this._frameElement.current\n    ) {\n      // Determine the desired ratio using the width and height props.\n      // If those props aren't available, measure measure the frame.\n      let desiredRatio;\n      if (!!width && !!height && imageFit !== ImageFit.centerContain && imageFit !== ImageFit.centerCover) {\n        desiredRatio = (width as number) / (height as number);\n      } else {\n        desiredRatio = this._frameElement.current.clientWidth / this._frameElement.current.clientHeight;\n      }\n\n      // Examine the source image to determine its original ratio.\n      const naturalRatio = this._imageElement.current.naturalWidth / this._imageElement.current.naturalHeight;\n\n      // Should we crop from the top or the sides?\n      if (naturalRatio > desiredRatio) {\n        this._coverStyle = ImageCoverStyle.landscape;\n      } else {\n        this._coverStyle = ImageCoverStyle.portrait;\n      }\n    }\n  }\n\n  private _onImageError = (ev: React.SyntheticEvent<HTMLImageElement>): void => {\n    if (this.props.onError) {\n      this.props.onError(ev);\n    }\n    this.setState({\n      loadState: ImageLoadState.error\n    });\n  };\n}\n","import { AnimationClassNames, getGlobalClassNames, IStyle } from '../../Styling';\nimport { IImageStyleProps, IImageStyles } from './Image.types';\nimport { getWindow } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait'\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)' // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape) ? { width: '100%', height: 'auto' } : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden'\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%'\n        }\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative'\n      },\n      className\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1\n        }\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%'\n        },\n        !isLandscape && {\n          maxHeight: '100%'\n        },\n        ImageFitStyles\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%'\n        },\n        !isLandscape && {\n          maxWidth: '100%'\n        },\n        ImageFitStyles\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto'\n        }\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%'\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto'\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%'\n          }\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error'\n    ]\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\nimport { ImageBase } from './Image.base';\nimport { getStyles } from './Image.styles';\n\nexport const Image: React.StatelessComponent<IImageProps> = styled<IImageProps, IImageStyleProps, IImageStyles>(\n  ImageBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Image'\n  },\n  true\n);\n","import * as React from 'react';\nimport { flatten } from './array';\nimport { concatStyleSets, IStyleSet, IStyleFunctionOrObject, IConcatenatedStyleSet } from '@uifabric/merge-styles';\nimport { Customizations } from './customizations/Customizations';\nimport { CustomizerContext, ICustomizerContext } from './customizations/CustomizerContext';\n\nexport interface IPropsWithStyles<TStyleProps, TStyleSet extends IStyleSet<TStyleSet>> {\n  styles?: IStyleFunctionOrObject<TStyleProps, TStyleSet>;\n}\n\nexport interface ICustomizableProps {\n  /**\n   * Name of scope, which can be targeted using the Customizer.\n   */\n  scope: string;\n\n  /**\n   * List of fields which can be customized.\n   * @defaultvalue [ 'theme', 'styles' ]\n   */\n  fields?: string[];\n}\n\nconst DefaultFields = ['theme', 'styles'];\n\n/**\n * The styled HOC wrapper allows you to create a functional wrapper around a given component which will resolve\n * getStyles functional props, and mix customized props passed in using concatStyleSets.\n *\n * @example\n * ```tsx\n * export const Toggle = styled(\n *   ToggleBase,\n *   props => ({ root: { background: 'red' }})\n * );\n * ```\n * @param Component - The unstyled base component to render, which receives styles.\n * @param baseStyles - The styles which should be curried with the component.\n * @param getProps - A helper which provides default props.\n * @param customizable - An object which defines which props can be customized using the Customizer.\n * @param pure - A boolean indicating if the component should avoid re-rendering when props haven't changed.\n * Note that pure should not be used on components which allow children, or take in complex objects or\n * arrays as props which could mutate on every render.\n */\nexport function styled<\n  TComponentProps extends IPropsWithStyles<TStyleProps, TStyleSet>,\n  TStyleProps,\n  TStyleSet extends IStyleSet<TStyleSet>\n>(\n  Component: React.ComponentClass<TComponentProps> | React.StatelessComponent<TComponentProps>,\n  baseStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet>,\n  getProps?: (props: TComponentProps) => Partial<TComponentProps>,\n  customizable?: ICustomizableProps,\n  pure?: boolean\n): React.StatelessComponent<TComponentProps> {\n  customizable = customizable || { scope: '', fields: undefined };\n\n  const { scope, fields = DefaultFields } = customizable;\n  const ParentComponent = pure ? React.PureComponent : React.Component;\n\n  class Wrapped extends ParentComponent<TComponentProps, {}> {\n    // Function.prototype.name is an ES6 feature, so the cast to any is required until we're\n    // able to drop IE 11 support and compile with ES6 libs\n    // tslint:disable-next-line:no-any\n    public static displayName = `Styled${Component.displayName || (Component as any).name}`;\n\n    private _inCustomizerContext = false;\n    private _styles: IStyleFunctionOrObject<TStyleProps, TStyleSet>;\n\n    public render(): JSX.Element {\n      return <CustomizerContext.Consumer>{this._renderContent}</CustomizerContext.Consumer>;\n    }\n\n    public componentDidMount(): void {\n      if (!this._inCustomizerContext) {\n        Customizations.observe(this._onSettingsChanged);\n      }\n    }\n\n    public componentWillUnmount(): void {\n      if (!this._inCustomizerContext) {\n        Customizations.unobserve(this._onSettingsChanged);\n      }\n    }\n\n    private _renderContent = (context: ICustomizerContext): JSX.Element => {\n      this._inCustomizerContext = !!context.customizations.inCustomizerContext;\n\n      const settings = Customizations.getSettings(fields, scope, context.customizations);\n      const { styles: customizedStyles, dir, ...rest } = settings;\n      const additionalProps = getProps ? getProps(this.props) : undefined;\n\n      this._updateStyles(customizedStyles);\n\n      return <Component {...rest} {...additionalProps} {...this.props} styles={this._styles} />;\n    };\n\n    private _updateStyles(customizedStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet>): void {\n      // tslint:disable-next-line:no-any\n      if (!this._styles || customizedStyles !== (this._styles as any).__cachedInputs__[1] || !!this.props.styles) {\n        // Cache the customized styles.\n        // this._customizedStyles = customizedStyles;\n\n        // Using styled components as the Component arg will result in nested styling arrays.\n        this._styles = (styleProps: TStyleProps) => _resolve(styleProps, baseStyles, customizedStyles, this.props.styles);\n\n        // The __cachedInputs__ array is attached to the function and consumed by the\n        // classNamesFunction as a list of keys to include for memoizing classnames.\n\n        // tslint:disable-next-line:no-any\n        (this._styles as any).__cachedInputs__ = [baseStyles, customizedStyles, this.props.styles];\n      }\n    }\n\n    private _onSettingsChanged = (): void => this.forceUpdate();\n  }\n\n  // This preserves backwards compatibility.\n  // tslint:disable-next-line:no-any\n  return Wrapped as any;\n}\n\nfunction _resolve<TStyleProps, TStyleSet extends IStyleSet<TStyleSet>>(\n  styleProps: TStyleProps,\n  ...allStyles: (IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined)[]\n): Partial<TStyleSet> {\n  const result: Partial<TStyleSet>[] = [];\n\n  for (const styles of allStyles) {\n    if (styles) {\n      result.push(typeof styles === 'function' ? styles(styleProps) : styles);\n    }\n  }\n\n  if (result.length === 1) {\n    return result[0] as Partial<TStyleSet>;\n  } else if (result.length) {\n    // cliffkoh: I cannot figure out how to avoid the cast to any here.\n    // It is something to do with the use of Omit in IStyleSet.\n    // It might not be necessary once  Omit becomes part of lib.d.ts (when we remove our own Omit and rely on\n    // the official version).\n    // tslint:disable-next-line:no-any\n    return concatStyleSets(...(result as any)) as any;\n  }\n\n  return {};\n}\n","import { mergeStyleSets, IStyleSet, IProcessedStyleSet, Stylesheet } from '@uifabric/merge-styles';\nimport { IStyleFunctionOrObject } from '@uifabric/merge-styles';\n\nconst MAX_CACHE_COUNT = 50;\nlet _memoizedClassNames = 0;\n\nconst stylesheet = Stylesheet.getInstance();\n\nif (stylesheet && stylesheet.onReset) {\n  stylesheet.onReset(() => _memoizedClassNames++);\n}\n\n// Note that because of the caching nature within the classNames memoization,\n// I've disabled this rule to simply be able to work with any types.\n// tslint:disable:no-any\n\n// This represents a prop we attach to each Map to indicate the cached return value\n// associated with the graph node.\nconst RetVal = '__retval__';\n\ninterface IRecursiveMemoNode extends Map<any, IRecursiveMemoNode> {\n  [RetVal]?: string;\n}\n\nexport interface IClassNamesFunctionOptions {\n  /**\n   * Disables class caching for scenarios where styleProp parts mutate frequently.\n   */\n  disableCaching?: boolean;\n}\n\n/**\n * Creates a getClassNames function which calls getStyles given the props, and injects them\n * into mergeStyleSets.\n *\n * Note that the props you pass in on every render should be in the same order and\n * immutable (numbers, strings, and booleans). This will allow the results to be memoized. Violating\n * these will cause extra recalcs to occur.\n */\nexport function classNamesFunction<TStyleProps extends {}, TStyleSet extends IStyleSet<TStyleSet>>(\n  options: IClassNamesFunctionOptions = {}\n): (getStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined, styleProps?: TStyleProps) => IProcessedStyleSet<TStyleSet> {\n  // We build a trie where each node is a Map. The map entry key represents an argument\n  // value, and the entry value is another node (Map). Each node has a `__retval__`\n  // property which is used to hold the cached response.\n\n  // To derive the response, we can simply ensure the arguments are added or already\n  // exist in the trie. At the last node, if there is a `__retval__` we return that. Otherwise\n  // we call the `getStyles` api to evaluate, cache on the property, and return that.\n  let map: IRecursiveMemoNode = new Map();\n  let resultCount = 0;\n  let currentMemoizedClassNames = _memoizedClassNames;\n\n  const getClassNames = (\n    styleFunctionOrObject: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined,\n    styleProps: TStyleProps = {} as TStyleProps\n  ): IProcessedStyleSet<TStyleSet> => {\n    let current: Map<any, any> = map;\n    const disableCaching = options.disableCaching;\n\n    // On reset of our stylesheet, reset memoized cache.\n    if (currentMemoizedClassNames !== _memoizedClassNames) {\n      currentMemoizedClassNames = _memoizedClassNames;\n      map = new Map();\n      resultCount = 0;\n    }\n\n    if (!options.disableCaching) {\n      current = _traverseMap(map, styleFunctionOrObject as any);\n      current = _traverseMap(current, styleProps);\n    }\n\n    if (disableCaching || !(current as any)[RetVal]) {\n      if (styleFunctionOrObject === undefined) {\n        (current as any)[RetVal] = {} as IProcessedStyleSet<TStyleSet>;\n      } else {\n        (current as any)[RetVal] = mergeStyleSets(\n          typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps) : styleFunctionOrObject\n        );\n      }\n\n      if (!disableCaching) {\n        resultCount++;\n      }\n    }\n\n    if (resultCount > MAX_CACHE_COUNT) {\n      map.clear();\n      resultCount = 0;\n\n      // Mutate the options passed in, that's all we can do.\n      options.disableCaching = true;\n\n      // Note: this code is great for debugging problems with styles being recaculated, but commenting it out\n      // to avoid confusing consumers.\n\n      // if (process.env.NODE_ENV !== 'production') {\n      //  console.log('Styles are being recalculated far too frequently. Something is mutating the class over and over.');\n      //  // tslint:disable-next-line:no-console\n      //  console.trace();\n      // }\n    }\n\n    // Note: the RetVal is an attached property on the Map; not a key in the Map. We use this attached property to\n    // cache the return value for this branch of the graph.\n    return (current as any)[RetVal];\n  };\n\n  return getClassNames;\n}\n\nfunction _derive(obj: any): any {\n  return typeof obj === 'function' ? obj(this) : obj;\n}\n\nfunction _traverseEdge(current: Map<any, any>, value: any): Map<any, any> {\n  value = _normalizeValue(value);\n\n  if (!current.has(value)) {\n    current.set(value, new Map<any, any>());\n  }\n\n  return current.get(value);\n}\n\nfunction _traverseMap(current: Map<any, any>, inputs: any[] | Object): Map<any, any> {\n  // The styled helper will generate the styles function and will attach the cached\n  // inputs (consisting of the default styles, customzied styles, and user provided styles.)\n  // These should be used as cache keys for deriving the memoized value.\n  if (typeof inputs === 'function' && (inputs as any).__cachedInputs__) {\n    for (const input of (inputs as any).__cachedInputs__) {\n      current = _traverseEdge(current, input);\n    }\n  } else if (typeof inputs === 'object') {\n    for (const propName in inputs) {\n      if (inputs.hasOwnProperty(propName)) {\n        current = _traverseEdge(current, (inputs as any)[propName]);\n      }\n    }\n  }\n\n  return current;\n}\n\nfunction _normalizeValue(value: any): string {\n  switch (value) {\n    case undefined:\n      return '__undefined__';\n    case null:\n      return '__null__';\n    default:\n      return value;\n  }\n}\n","import { filteredAssign } from './object';\n\n/**\n * An array of events that are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementEvents = [\n  'onCopy',\n  'onCut',\n  'onPaste',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCompositionUpdate',\n  'onFocus',\n  'onFocusCapture',\n  'onBlur',\n  'onBlurCapture',\n  'onChange',\n  'onInput',\n  'onSubmit',\n  'onLoad',\n  'onError',\n  'onKeyDown',\n  'onKeyDownCapture',\n  'onKeyPress',\n  'onKeyUp',\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n  'onClick',\n  'onClickCapture',\n  'onContextMenu',\n  'onDoubleClick',\n  'onDrag',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onMouseDown',\n  'onMouseDownCapture',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onMouseUpCapture',\n  'onSelect',\n  'onTouchCancel',\n  'onTouchEnd',\n  'onTouchMove',\n  'onTouchStart',\n  'onScroll',\n  'onWheel',\n  'onPointerCancel',\n  'onPointerDown',\n  'onPointerEnter',\n  'onPointerLeave',\n  'onPointerMove',\n  'onPointerOut',\n  'onPointerOver',\n  'onPointerUp',\n  'onGotPointerCapture',\n  'onLostPointerCapture'\n];\n\n/**\n * An array of element attributes which are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementProperties = [\n  'accessKey', // global\n  'children', // global\n  'className', // global\n  'contentEditable', // global\n  'dir', // global\n  'draggable', // global\n  'hidden', // global\n  'htmlFor', // global\n  'id', // global\n  'lang', // global\n  'role', // global\n  'style', // global\n  'tabIndex', // global\n  'title', // global\n  'translate', // global\n  'spellCheck', // global\n  'name' // global\n];\n\n/**\n * An array of HTML element properties and events.\n *\n * @public\n */\nexport const htmlElementProperties = baseElementProperties.concat(baseElementEvents);\n\n/**\n * An array of LABEL tag properties and events.\n *\n * @public\n */\nexport const labelProperties = htmlElementProperties.concat([\n  'form' // button, fieldset, input, label, meter, object, output, select, textarea\n]);\n\n/**\n * An array of AUDIO tag properties and events.\n *\n * @public\n */\nexport const audioProperties = htmlElementProperties.concat([\n  'height', // canvas, embed, iframe, img, input, object, video\n  'loop', // audio, video\n  'muted', // audio, video\n  'preload', // audio, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'width' // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of VIDEO tag properties and events.\n *\n * @public\n */\nexport const videoProperties = audioProperties.concat([\n  'poster' // video\n]);\n\n/**\n * An array of OL tag properties and events.\n *\n * @public\n */\nexport const olProperties = htmlElementProperties.concat([\n  'start' // ol\n]);\n\n/**\n * An array of LI tag properties and events.\n *\n * @public\n */\nexport const liProperties = htmlElementProperties.concat([\n  'value' // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of A tag properties and events.\n *\n * @public\n */\nexport const anchorProperties = htmlElementProperties.concat([\n  'download', // a, area\n  'href', // a, area, base, link\n  'hrefLang', // a, area, link\n  'media', // a, area, link, source, style\n  'rel', // a, area, link\n  'target', // a, area, base, form\n  'type' // a, button, input, link, menu, object, script, source, style\n]);\n\n/**\n * An array of BUTTON tag properties and events.\n *\n * @public\n */\nexport const buttonProperties = htmlElementProperties.concat([\n  'autoFocus', // button, input, select, textarea\n  'disabled', // button, fieldset, input, optgroup, option, select, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'formAction', // input, button\n  'formEncType', // input, button\n  'formMethod', // input, button\n  'formNoValidate', // input, button\n  'formTarget', // input, button\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value' // button, input, li, option, meter, progress, param,\n]);\n\n/**\n * An array of INPUT tag properties and events.\n *\n * @public\n */\nexport const inputProperties = buttonProperties.concat([\n  'accept', // input\n  'alt', // area, img, input\n  'autoComplete', // form, input\n  'checked', // input\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'height', // canvas, embed, iframe, img, input, object, video\n  'inputMode', // input\n  'list', // input\n  'max', // input, meter\n  'maxLength', // input, textarea\n  'min', // input, meter\n  'multiple', // input, select\n  'pattern', // input\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'step', // input\n  'size', // input\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value', // button, input, li, option, meter, progress, param\n  'width' // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of TEXTAREA tag properties and events.\n *\n * @public\n */\nexport const textAreaProperties = buttonProperties.concat([\n  'cols', // textarea\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'maxLength', // input, textarea\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'rows', // textarea\n  'wrap' // textarea\n]);\n\n/**\n * An array of SELECT tag properties and events.\n *\n * @public\n */\nexport const selectProperties = buttonProperties.concat([\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'multiple', // input, select\n  'required' // input, select, textarea\n]);\n\nexport const optionProperties = htmlElementProperties.concat([\n  'selected', // option\n  'value' // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of TABLE tag properties and events.\n *\n * @public\n */\nexport const tableProperties = htmlElementProperties.concat([\n  'cellPadding', // table\n  'cellSpacing' // table\n]);\n\n/**\n * An array of TR tag properties and events.\n *\n * @public\n */\nexport const trProperties = htmlElementProperties;\n\n/**\n * An array of TH tag properties and events.\n *\n * @public\n */\nexport const thProperties = htmlElementProperties.concat([\n  'rowSpan', // td, th\n  'scope' // th\n]);\n\n/**\n * An array of TD tag properties and events.\n *\n * @public\n */\nexport const tdProperties = htmlElementProperties.concat([\n  'colSpan', // td\n  'headers', // td\n  'rowSpan', // td, th\n  'scope' // th\n]);\n\nexport const colGroupProperties = htmlElementProperties.concat([\n  'span' // col, colgroup\n]);\n\nexport const colProperties = htmlElementProperties.concat([\n  'span' // col, colgroup\n]);\n\n/**\n * An array of FORM tag properties and events.\n *\n * @public\n */\nexport const formProperties = htmlElementProperties.concat([\n  'acceptCharset', // form\n  'action', // form\n  'encType', // form\n  'encType', // form\n  'method', // form\n  'noValidate', // form\n  'target' // form\n]);\n\n/**\n * An array of IFRAME tag properties and events.\n *\n * @public\n */\nexport const iframeProperties = htmlElementProperties.concat([\n  'allow', // iframe\n  'allowFullScreen', // iframe\n  'allowPaymentRequest', // iframe\n  'allowTransparency', // iframe\n  'csp', // iframe\n  'height', // canvas, embed, iframe, img, input, object, video\n  'importance', // iframe\n  'referrerPolicy', // iframe\n  'sandbox', // iframe\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcDoc', // iframe\n  'width' // canvas, embed, iframe, img, input, object, video,\n]);\n\n/**\n * An array of IMAGE tag properties and events.\n *\n * @public\n */\nexport const imgProperties = htmlElementProperties.concat([\n  'alt', // area, img, input\n  'crossOrigin', // img\n  'height', // canvas, embed, iframe, img, input, object, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcSet', // img, source\n  'useMap', // img, object,\n  'width' // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * @deprecated Use imgProperties for img elements.\n */\nexport const imageProperties = imgProperties;\n\n/**\n * An array of DIV tag properties and events.\n *\n * @public\n */\nexport const divProperties = htmlElementProperties;\n\n/**\n * Gets native supported props for an html element provided the allowance set. Use one of the property\n * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given\n * props set. Note that all data- and aria- prefixed attributes will be allowed.\n * NOTE: getNativeProps should always be applied first when adding props to a react component. The\n * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.\n * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to\n * the component after an onClick function is added, then the getNativeProps onClick will override it.\n *\n * @public\n * @param props - The unfiltered input props\n * @param allowedPropsNames-  The array of allowed propnames.\n * @returns The filtered props\n */\nexport function getNativeProps<T>(props: {}, allowedPropNames: string[], excludedPropNames?: string[]): T {\n  return filteredAssign(\n    (propName: string) => {\n      return (\n        (!excludedPropNames || excludedPropNames.indexOf(propName) < 0) &&\n        (propName.indexOf('data-') === 0 || propName.indexOf('aria-') === 0 || allowedPropNames.indexOf(propName) >= 0)\n      );\n    },\n    {},\n    props\n  ) as T;\n}\n","/**\n * Dictionary of booleans.\n *\n * @internal\n */\nexport interface IDictionary {\n  [className: string]: boolean;\n}\n\n/**\n * Serializable object.\n *\n * @internal\n */\nexport interface ISerializableObject {\n  toString?: () => string;\n}\n\n/**\n * css input type.\n *\n * @internal\n */\nexport type ICssInput = string | ISerializableObject | IDictionary | null | undefined | boolean;\n\n/**\n * Concatination helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function css(...args: ICssInput[]): string {\n  let classes = [];\n\n  for (let arg of args) {\n    if (arg) {\n      if (typeof arg === 'string') {\n        classes.push(arg);\n      } else if (arg.hasOwnProperty('toString') && typeof arg.toString === 'function') {\n        classes.push(arg.toString());\n      } else {\n        // tslint:disable-next-line:no-any\n        for (let key in arg as any) {\n          // tslint:disable-next-line:no-any\n          if ((arg as any)[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n","import { getWindow } from './dom/getWindow';\n\nlet isMacResult: boolean | undefined;\n\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset?: boolean): boolean {\n  if (typeof isMacResult === 'undefined' || reset) {\n    const win = getWindow();\n    const userAgent = win && win.navigator.userAgent;\n\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}\n","/**\n * Returns true if and only if the user is on a iOS device.\n * Used to determine whether iOS-specific behavior should be applied.\n */\nexport const isIOS = (): boolean => {\n  if (!window || !window.navigator || !window.navigator.userAgent) {\n    return false;\n  }\n  return /iPad|iPhone|iPod/i.test(window.navigator.userAgent);\n};\n","import * as React from 'react';\nimport { Async, KeyCodes, divProperties, doesElementContainFocus, getDocument, getNativeProps, on } from '../../Utilities';\nimport { IPopupProps } from './Popup.types';\n\nexport interface IPopupState {\n  needsVerticalScrollBar?: boolean;\n}\n\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport class Popup extends React.Component<IPopupProps, IPopupState> {\n  public static defaultProps: IPopupProps = {\n    shouldRestoreFocus: true\n  };\n\n  public _root = React.createRef<HTMLDivElement>();\n  private _disposables: (() => void)[] = [];\n  private _originalFocusedElement: HTMLElement;\n  private _containsFocus: boolean;\n  private _async: Async;\n\n  public constructor(props: IPopupProps) {\n    super(props);\n    this._async = new Async(this);\n    this.state = { needsVerticalScrollBar: false };\n  }\n\n  public componentWillMount(): void {\n    this._originalFocusedElement = getDocument()!.activeElement as HTMLElement;\n  }\n\n  public componentDidMount(): void {\n    if (this._root.current) {\n      this._disposables.push(on(this._root.current, 'focus', this._onFocus, true), on(this._root.current, 'blur', this._onBlur, true));\n      if (doesElementContainFocus(this._root.current)) {\n        this._containsFocus = true;\n      }\n    }\n\n    this._updateScrollBarAsync();\n  }\n\n  public componentDidUpdate() {\n    this._updateScrollBarAsync();\n    this._async.dispose();\n  }\n\n  public componentWillUnmount(): void {\n    this._disposables.forEach((dispose: () => void) => dispose());\n    if (\n      this.props.shouldRestoreFocus &&\n      this._originalFocusedElement &&\n      this._containsFocus &&\n      (this._originalFocusedElement as any) !== window\n    ) {\n      // This slight delay is required so that we can unwind the stack, let react try to mess with focus, and then\n      // apply the correct focus. Without the setTimeout, we end up focusing the correct thing, and then React wants\n      // to reset the focus back to the thing it thinks should have been focused.\n      if (this._originalFocusedElement) {\n        this._originalFocusedElement.focus();\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const { role, className, ariaLabel, ariaLabelledBy, ariaDescribedBy, style } = this.props;\n\n    return (\n      <div\n        ref={this._root}\n        {...getNativeProps(this.props, divProperties)}\n        className={className}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        onKeyDown={this._onKeyDown}\n        style={{ overflowY: this.state.needsVerticalScrollBar ? 'scroll' : undefined, outline: 'none', ...style }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    switch (ev.which) {\n      case KeyCodes.escape:\n        if (this.props.onDismiss) {\n          this.props.onDismiss(ev);\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n\n        break;\n    }\n  };\n\n  private _updateScrollBarAsync(): void {\n    this._async.requestAnimationFrame(() => {\n      this._getScrollBar();\n    });\n  }\n\n  private _getScrollBar(): void {\n    // If overflowY is overriden, don't waste time calculating whether the scrollbar is necessary.\n    if (this.props.style && this.props.style.overflowY) {\n      return;\n    }\n\n    let needsVerticalScrollBar = false;\n    if (this._root && this._root.current && this._root.current.firstElementChild) {\n      // ClientHeight returns the client height of an element rounded to an\n      // integer. On some browsers at different zoom levels this rounding\n      // can generate different results for the root container and child even\n      // though they are the same height. This causes us to show a scroll bar\n      // when not needed. Ideally we would use BoundingClientRect().height\n      // instead however seems that the API is 90% slower than using ClientHeight.\n      // Therefore instead we will calculate the difference between heights and\n      // allow for a 1px difference to still be considered ok and not show the\n      // scroll bar.\n      const rootHeight = this._root.current.clientHeight;\n      const firstChildHeight = this._root.current.firstElementChild.clientHeight;\n      if (rootHeight > 0 && firstChildHeight > rootHeight) {\n        needsVerticalScrollBar = firstChildHeight - rootHeight > 1;\n      }\n    }\n    if (this.state.needsVerticalScrollBar !== needsVerticalScrollBar) {\n      this.setState({\n        needsVerticalScrollBar: needsVerticalScrollBar\n      });\n    }\n  }\n\n  private _onFocus = (): void => {\n    this._containsFocus = true;\n  };\n\n  private _onBlur = (ev: FocusEvent): void => {\n    if (this._root.current && this._root.current.contains(ev.relatedTarget as HTMLElement)) {\n      this._containsFocus = false;\n    }\n  };\n}\n","export function on(element: Element | Window, eventName: string, callback: (ev: Event) => void, options?: boolean): () => void {\n  element.addEventListener(eventName, callback, options);\n\n  return () => element.removeEventListener(eventName, callback, options);\n}\n","import { getDocument } from './dom/getDocument';\nimport { mergeStyles } from '@uifabric/merge-styles';\nimport { EventGroup } from './EventGroup';\nimport { getWindow } from './dom/getWindow';\n\nlet _scrollbarWidth: number;\nlet _bodyScrollDisabledCount = 0;\n\nconst DisabledScrollClassName = mergeStyles({\n  overflow: 'hidden !important' as 'hidden'\n});\n\n/**\n * Placing this attribute on scrollable divs optimizes detection to know\n * if the div is scrollable or not (given we can avoid expensive operations\n * like getComputedStyle.)\n *\n * @public\n */\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\n\n/**\n * Allows the user to scroll within a element,\n * while preventing the user from scrolling the body\n */\nexport const allowScrollOnElement = (element: HTMLElement | null, events: EventGroup): void => {\n  if (!element) {\n    return;\n  }\n\n  let _previousClientY = 0;\n  let _element: Element | null = null;\n\n  // remember the clientY for future calls of _preventOverscrolling\n  const _saveClientY = (event: TouchEvent): void => {\n    if (event.targetTouches.length === 1) {\n      _previousClientY = event.targetTouches[0].clientY;\n    }\n  };\n\n  // prevent the body from scrolling when the user attempts\n  // to scroll past the top or bottom of the element\n  const _preventOverscrolling = (event: TouchEvent): void => {\n    // only respond to a single-finger touch\n    if (event.targetTouches.length !== 1) {\n      return;\n    }\n\n    // prevent the body touchmove handler from firing\n    // so that scrolling is allowed within the element\n    event.stopPropagation();\n\n    if (!_element) {\n      return;\n    }\n\n    const clientY = event.targetTouches[0].clientY - _previousClientY;\n\n    const scrollableParent = findScrollableParent(event.target as HTMLElement);\n    if (scrollableParent) {\n      _element = scrollableParent;\n    }\n\n    // if the element is scrolled to the top,\n    // prevent the user from scrolling up\n    if (_element.scrollTop === 0 && clientY > 0) {\n      event.preventDefault();\n    }\n\n    // if the element is scrolled to the bottom,\n    // prevent the user from scrolling down\n    if (_element.scrollHeight - _element.scrollTop <= _element.clientHeight && clientY < 0) {\n      event.preventDefault();\n    }\n  };\n\n  events.on(element, 'touchstart', _saveClientY, { passive: false });\n  events.on(element, 'touchmove', _preventOverscrolling, { passive: false });\n\n  _element = element;\n};\n\nconst _disableIosBodyScroll = (event: TouchEvent) => {\n  event.preventDefault();\n};\n\n/**\n * Disables the body scrolling.\n *\n * @public\n */\nexport function disableBodyScroll(): void {\n  let doc = getDocument();\n\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\n    doc.body.classList.add(DisabledScrollClassName);\n    doc.body.addEventListener('touchmove', _disableIosBodyScroll, { passive: false, capture: false });\n  }\n\n  _bodyScrollDisabledCount++;\n}\n\n/**\n * Enables the body scrolling.\n *\n * @public\n */\nexport function enableBodyScroll(): void {\n  if (_bodyScrollDisabledCount > 0) {\n    let doc = getDocument();\n\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\n      doc.body.classList.remove(DisabledScrollClassName);\n      doc.body.removeEventListener('touchmove', _disableIosBodyScroll);\n    }\n\n    _bodyScrollDisabledCount--;\n  }\n}\n\n/**\n * Calculates the width of a scrollbar for the browser/os.\n *\n * @public\n */\nexport function getScrollbarWidth(): number {\n  if (_scrollbarWidth === undefined) {\n    let scrollDiv: HTMLElement = document.createElement('div');\n    scrollDiv.style.setProperty('width', '100px');\n    scrollDiv.style.setProperty('height', '100px');\n    scrollDiv.style.setProperty('overflow', 'scroll');\n    scrollDiv.style.setProperty('position', 'absolute');\n    scrollDiv.style.setProperty('top', '-9999px');\n    document.body.appendChild(scrollDiv);\n    // Get the scrollbar width\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n  }\n\n  return _scrollbarWidth;\n}\n\n/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\n * document.body.\n *\n * @public\n */\nexport function findScrollableParent(startingElement: HTMLElement | null): HTMLElement | null {\n  let el: HTMLElement | null = startingElement;\n  const doc = getDocument(startingElement)!;\n\n  // First do a quick scan for the scrollable attribute.\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\n      return el;\n    }\n    el = el.parentElement;\n  }\n\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\n  el = startingElement;\n\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\n      const computedStyles = getComputedStyle(el);\n      let overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';\n\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\n        return el;\n      }\n    }\n\n    el = el.parentElement;\n  }\n\n  // Fall back to window scroll.\n  if (!el || el === doc.body) {\n    // tslint:disable-next-line:no-any\n    el = getWindow(startingElement) as any;\n  }\n\n  return el;\n}\n","import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext, ICustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@uifabric/merge-styles';\n\nexport function customizable(\n  scope: string,\n  fields: string[],\n  concatStyles?: boolean\n  // tslint:disable-next-line:no-any\n): <P>(ComposedComponent: React.ComponentType<P>) => any {\n  // tslint:disable-next-line:no-shadowed-variable\n  return function customizableFactory<P>(\n    // tslint:disable-next-line:no-any\n    ComposedComponent: React.ComponentType<P>\n    // tslint:disable-next-line:no-any\n  ): any {\n    const resultClass = class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static displayName: string = 'Customized' + scope;\n\n      // tslint:disable-next-line:no-any\n      constructor(props: P) {\n        super(props);\n\n        this._onSettingChanged = this._onSettingChanged.bind(this);\n      }\n\n      public componentDidMount(): void {\n        Customizations.observe(this._onSettingChanged);\n      }\n\n      public componentWillUnmount(): void {\n        Customizations.unobserve(this._onSettingChanged);\n      }\n\n      public render(): JSX.Element {\n        return (\n          <CustomizerContext.Consumer>\n            {(context: ICustomizerContext) => {\n              const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\n\n              // tslint:disable-next-line:no-any\n              const componentProps = this.props as any;\n\n              // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n              if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n                defaultProps.styles = defaultProps.styles({ ...defaultProps, ...componentProps });\n              }\n\n              // If concatStyles is true and custom styles have been defined compute those styles\n              if (concatStyles && (defaultProps.styles || componentProps.styles)) {\n                const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n                return <ComposedComponent {...defaultProps} {...componentProps} styles={mergedStyles} />;\n              }\n\n              return <ComposedComponent {...defaultProps} {...componentProps} />;\n            }}\n          </CustomizerContext.Consumer>\n        );\n      }\n\n      private _onSettingChanged(): void {\n        this.forceUpdate();\n      }\n    };\n\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}\n","import * as React from 'react';\nimport { IBaseProps } from './BaseComponent.types';\nimport { extendComponent } from './extendComponent';\n\n/**\n * Helper to manage componentRef resolution. Internally appends logic to\n * lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\nexport function initializeComponentRef<TProps extends IBaseProps, TState>(obj: React.Component<TProps, TState>): void {\n  extendComponent(obj, {\n    componentDidMount: _onMount,\n    componentDidUpdate: _onUpdate,\n    componentWillUnmount: _onUnmount\n  });\n}\n\nfunction _onMount(): void {\n  _setComponentRef(this.props.componentRef, this);\n}\n\nfunction _onUpdate(prevProps: IBaseProps): void {\n  if (prevProps.componentRef !== this.props.componentRef) {\n    // tslint:disable-next-line:no-any\n    _setComponentRef((prevProps as any).componentRef, null);\n    _setComponentRef(this.props.componentRef, this);\n  }\n}\n\nfunction _onUnmount(): void {\n  _setComponentRef(this.props.componentRef, null);\n}\n\nfunction _setComponentRef<TInterface>(componentRef: React.RefObject<TInterface>, value: TInterface | null): void {\n  if (componentRef) {\n    if (typeof componentRef === 'object') {\n      (componentRef as { current: TInterface | null }).current = value;\n    } else if (typeof componentRef === 'function') {\n      (componentRef as Function)(value);\n    }\n  }\n}\n","import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target: HTMLElement, parent?: HTMLElement): boolean {\n  const elementMatch = findElementRecursive(\n    target,\n    (testElement: HTMLElement) => parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE)\n  );\n  return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n}\n","/**\n * Helper to find the index of an item within an array, using a callback to\n * determine the match.\n *\n * @public\n * @param array - Array to search.\n * @param cb - Callback which returns true on matches.\n */\nexport function findIndex<T>(array: T[], cb: (item: T, index: number) => boolean): number {\n  let index = -1;\n\n  for (let i = 0; array && i < array.length; i++) {\n    if (cb(array[i], i)) {\n      index = i;\n      break;\n    }\n  }\n\n  return index;\n}\n\n/**\n * Helper to find the first item within an array that satisfies the callback.\n * @param array - Array to search\n * @param cb - Callback which returns true on matches\n */\nexport function find<T>(array: T[], cb: (item: T, index: number) => boolean): T | undefined {\n  let index = findIndex(array, cb);\n\n  if (index < 0) {\n    return undefined;\n  }\n\n  return array[index];\n}\n\n/**\n * Creates an array of a given size and helper method to populate.\n *\n * @public\n * @param size - Size of array.\n * @param getItem - Callback to populate given cell index.\n */\nexport function createArray<T>(size: number, getItem: (index: number) => T): T[] {\n  let array: T[] = [];\n\n  for (let i = 0; i < size; i++) {\n    array.push(getItem(i));\n  }\n\n  return array;\n}\n\n/**\n * Convert the given array to a matrix with columnCount number\n * of columns.\n *\n * @public\n * @param items - The array to convert\n * @param columnCount - The number of columns for the resulting matrix\n * @returns A matrix of items\n */\nexport function toMatrix<T>(items: T[], columnCount: number): T[][] {\n  return items.reduce(\n    (rows: T[][], currentValue: T, index: number) => {\n      if (index % columnCount === 0) {\n        rows.push([currentValue]);\n      } else {\n        rows[rows.length - 1].push(currentValue);\n      }\n      return rows;\n    },\n    [] as T[][]\n  );\n}\n\n/**\n * Given an array, it returns a new array that does not contain the item at the given index.\n * @param array - The array to operate on\n * @param index - The index of the element to remove\n */\nexport function removeIndex<T>(array: T[], index: number): T[] {\n  return array.filter((_: T, i: number) => index !== i);\n}\n\n/**\n * Given an array, this function returns a new array where the element at a given index has been replaced.\n * @param array - The array to operate on\n * @param newElement - The element that will be placed in the new array\n * @param index - The index of the element that should be replaced\n */\nexport function replaceElement<T>(array: T[], newElement: T, index: number): T[] {\n  const copy = array.slice();\n  copy[index] = newElement;\n  return copy;\n}\n\n/**\n * Given an array, this function returns a new array where an element has been inserted at the given index.\n * @param array - The array to operate on\n * @param index - The index where an element should be inserted\n * @param itemToAdd - The element to insert\n */\nexport function addElementAtIndex<T>(array: T[], index: number, itemToAdd: T): T[] {\n  const copy = array.slice();\n  copy.splice(index, 0, itemToAdd);\n  return copy;\n}\n\n/**\n * Given an array where each element is of type T or T[], flatten it into an array of T\n * @param array - The array where each element can optionally also be an array\n */\nexport function flatten<T>(array: (T | T[])[]): T[] {\n  let result: T[] = [];\n  array.forEach((item: T | T[]): T[] => (result = result.concat(item)));\n  return result;\n}\n\n/**\n * Returns a boolean indicating if the two given arrays are equal in length and values.\n *\n * @param array1 - First array to compare\n * @param array2 - Second array to compare\n * @returns True if the arrays are the same length and have the same values in the same positions, false otherwise.\n */\nexport function arraysEqual<T>(array1: T[], array2: T[]): boolean {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * ARIA helper to concatenate attributes, returning undefined if all attributes\n * are undefined. (Empty strings are not a valid ARIA attribute value.)\n *\n * @param ariaAttributes - ARIA attributes to merge\n */\nexport function mergeAriaAttributeValues(...ariaAttributes: (string | undefined | false)[]): string | undefined {\n  const mergedAttribute = ariaAttributes\n    .filter((arg: string | undefined | false) => arg)\n    .join(' ')\n    .trim();\n  return mergedAttribute === '' ? undefined : mergedAttribute;\n}\n","import * as React from 'react';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\nexport interface IDelayedRenderProps extends React.Props<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: false\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = setTimeout(() => {\n      this.setState({\n        isRendered: true\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? React.Children.only(this.props.children) : null;\n  }\n}\n","import { getGlobalClassNames } from '../../Styling';\nimport { IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nconst GlobalClassNames = {\n  root: 'ms-Fabric'\n};\n\nexport interface IFabricClassNames {\n  root: string;\n}\n\nexport const getStyles = (props: IFabricStyleProps): IFabricStyles => {\n  const { theme, className, isFocusVisible } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      isFocusVisible && 'is-focusVisible ms-Fabric--isFocusVisible',\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n        selectors: {\n          '& button': inheritFont,\n          '& input': inheritFont,\n          '& textarea': inheritFont\n        }\n      },\n      className\n    ]\n  };\n};\n","import * as React from 'react';\nimport { getNativeProps, on, divProperties, classNamesFunction, getWindow, isDirectionalKeyCode } from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\n\nexport class FabricBase extends React.Component<\n  IFabricProps,\n  {\n    isFocusVisible: boolean;\n  }\n> {\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _disposables: (() => void)[] = [];\n\n  constructor(props: IFabricProps) {\n    super(props);\n    this.state = { isFocusVisible: false };\n  }\n\n  public render() {\n    const { className, ...rest } = this.props;\n\n    const classNames = getClassNames(getStyles, {\n      theme: this.props.theme!,\n      className,\n      isFocusVisible: this.state.isFocusVisible\n    });\n    const divProps = getNativeProps(rest, divProperties);\n\n    return <div {...divProps} className={classNames.root} ref={this._rootElement} />;\n  }\n\n  public componentDidMount(): void {\n    const win = getWindow(this._rootElement.current);\n\n    if (win) {\n      this._disposables.push(on(win, 'mousedown', this._onMouseDown, true), on(win, 'keydown', this._onKeyDown, true));\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._disposables.forEach((dispose: () => void) => dispose());\n  }\n\n  private _onMouseDown = (ev: MouseEvent): void => {\n    this.setState({ isFocusVisible: false });\n  };\n\n  private _onKeyDown = (ev: KeyboardEvent): void => {\n    if (isDirectionalKeyCode(ev.which)) {\n      this.setState({ isFocusVisible: true });\n    }\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { FabricBase } from './Fabric.base';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nexport const Fabric: React.StatelessComponent<IFabricProps> = styled<IFabricProps, IFabricStyleProps, IFabricStyles>(\n  FabricBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Fabric'\n  }\n);\n","const _layersByHostId: { [hostId: string]: (() => void)[] } = {};\n\nlet _defaultHostSelector: string | undefined;\n\n/**\n * Register a layer for a given host id\n * @param hostId Id of the layer host\n * @param layer Layer instance\n */\nexport function registerLayer(hostId: string, callback: () => void) {\n  if (!_layersByHostId[hostId]) {\n    _layersByHostId[hostId] = [];\n  }\n\n  _layersByHostId[hostId].push(callback);\n}\n\n/**\n * Unregister a layer for a given host id\n * @param hostId Id of the layer host\n * @param layer Layer instance\n */\nexport function unregisterLayer(hostId: string, callback: () => void) {\n  if (_layersByHostId[hostId]) {\n    const idx = _layersByHostId[hostId].indexOf(callback);\n    if (idx >= 0) {\n      _layersByHostId[hostId].splice(idx, 1);\n      if (_layersByHostId[hostId].length === 0) {\n        delete _layersByHostId[hostId];\n      }\n    }\n  }\n}\n\n/**\n * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n * care about the specific host.\n */\nexport function notifyHostChanged(id: string) {\n  if (_layersByHostId[id]) {\n    _layersByHostId[id].forEach(callback => callback());\n  }\n}\n\n/**\n * Sets the default target selector to use when determining the host in which\n * Layered content will be injected into. If not provided, an element will be\n * created at the end of the document body.\n *\n * Passing in a falsey value will clear the default target and reset back to\n * using a created element at the end of document body.\n */\nexport function setDefaultTarget(selector?: string) {\n  _defaultHostSelector = selector;\n}\n\n/**\n * Get the default target selector when determining a host\n */\nexport function getDefaultTarget(): string | undefined {\n  return _defaultHostSelector;\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { Fabric } from '../../Fabric';\nimport { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport { classNamesFunction, customizable, getDocument, setPortalAttribute, setVirtualParent, warnDeprecations } from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer } from './Layer.notification';\n\nexport type ILayerBaseState = {\n  hostId?: string;\n  layerElement?: HTMLElement;\n};\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\n@customizable('Layer', ['theme', 'hostId'])\nexport class LayerBase extends React.Component<ILayerProps, ILayerBaseState> {\n  public static defaultProps: ILayerProps = {\n    onLayerDidMount: () => undefined,\n    onLayerWillUnmount: () => undefined\n  };\n\n  private _rootRef = React.createRef<HTMLSpanElement>();\n\n  constructor(props: ILayerProps) {\n    super(props);\n\n    this.state = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('Layer', props, {\n        onLayerMounted: 'onLayerDidMount'\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    const { hostId } = this.props;\n\n    this._createLayerElement();\n\n    if (hostId) {\n      registerLayer(hostId, this._createLayerElement);\n    }\n  }\n\n  public render(): React.ReactNode {\n    const { layerElement } = this.state;\n    const classNames = this._getClassNames();\n    const { eventBubblingEnabled } = this.props;\n\n    return (\n      <span className=\"ms-layer\" ref={this._rootRef}>\n        {layerElement &&\n          ReactDOM.createPortal(\n            <Fabric {...(!eventBubblingEnabled && _getFilteredEvents())} className={classNames.content}>\n              {this.props.children}\n            </Fabric>,\n            layerElement\n          )}\n      </span>\n    );\n  }\n\n  public componentDidUpdate(): void {\n    if (this.props.hostId !== this.state.hostId) {\n      this._createLayerElement();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { hostId } = this.props;\n\n    this._removeLayerElement();\n    if (hostId) {\n      unregisterLayer(hostId, this._createLayerElement);\n    }\n  }\n\n  private _createLayerElement = () => {\n    const { hostId } = this.props;\n\n    const doc = getDocument(this._rootRef.current);\n    const host = this._getHost();\n\n    if (!doc || !host) {\n      return;\n    }\n\n    // If one was already existing, remove.\n    this._removeLayerElement();\n\n    const layerElement = doc.createElement('div');\n    const classNames = this._getClassNames();\n\n    layerElement.className = classNames.root!;\n    setPortalAttribute(layerElement);\n    setVirtualParent(layerElement, this._rootRef.current!);\n\n    this.props.insertFirst ? host.insertBefore(layerElement, host.firstChild) : host.appendChild(layerElement);\n\n    this.setState(\n      {\n        hostId,\n        layerElement\n      },\n      () => {\n        const { onLayerDidMount, onLayerMounted } = this.props;\n        if (onLayerMounted) {\n          onLayerMounted();\n        }\n\n        if (onLayerDidMount) {\n          onLayerDidMount();\n        }\n      }\n    );\n  };\n\n  private _removeLayerElement(): void {\n    const { onLayerWillUnmount } = this.props;\n    const { layerElement } = this.state;\n\n    if (onLayerWillUnmount) {\n      onLayerWillUnmount();\n    }\n\n    if (layerElement && layerElement.parentNode) {\n      const parentNode = layerElement.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(layerElement);\n      }\n    }\n  }\n\n  private _getClassNames() {\n    const { className, styles, theme } = this.props;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !this.props.hostId\n    });\n\n    return classNames;\n  }\n\n  private _getHost(): Node | undefined {\n    const { hostId } = this.props;\n    const doc = getDocument(this._rootRef.current);\n    if (!doc) {\n      return undefined;\n    }\n\n    if (hostId) {\n      return doc.getElementById(hostId) as Node;\n    } else {\n      const defaultHostSelector = getDefaultTarget();\n      return defaultHostSelector ? (doc.querySelector(defaultHostSelector) as Node) : doc.body;\n    }\n  }\n}\n\nconst _onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though mouseenter and\n  //    mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on event name rather than ev.bubble.\n  if (ev.eventPhase === Event.BUBBLING_PHASE && ev.type !== 'mouseenter' && ev.type !== 'mouseleave') {\n    ev.stopPropagation();\n  }\n};\n\nlet _filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement>) => void };\n\nfunction _getFilteredEvents() {\n  if (!_filteredEventProps) {\n    _filteredEventProps = {} as any;\n\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit'\n    ].forEach(name => (_filteredEventProps[name] = _onFilterEvent));\n  }\n\n  return _filteredEventProps;\n}\n","import { IVirtualElement } from './IVirtualElement';\n/**\n * Sets the virtual parent of an element.\n * Pass `undefined` as the `parent` to clear the virtual parent.\n *\n * @public\n */\nexport function setVirtualParent(child: HTMLElement, parent: HTMLElement): void {\n  let virtualChild = <IVirtualElement>child;\n  let virtualParent = <IVirtualElement>parent;\n  if (!virtualChild._virtual) {\n    virtualChild._virtual = {\n      children: []\n    };\n  }\n  let oldParent = virtualChild._virtual.parent;\n  if (oldParent && oldParent !== parent) {\n    // Remove the child from its old parent.\n    let index = oldParent._virtual.children.indexOf(virtualChild);\n    if (index > -1) {\n      oldParent._virtual.children.splice(index, 1);\n    }\n  }\n  virtualChild._virtual.parent = virtualParent || undefined;\n  if (virtualParent) {\n    if (!virtualParent._virtual) {\n      virtualParent._virtual = {\n        children: []\n      };\n    }\n    virtualParent._virtual.children.push(virtualChild);\n  }\n}\n","import { ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport { ZIndexes, getGlobalClassNames } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Layer',\n  rootNoHost: 'ms-Layer--fixed',\n  content: 'ms-Layer-content'\n};\n\nexport const getStyles = (props: ILayerStyleProps): ILayerStyles => {\n  const { className, isNotHost, theme } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isNotHost && [\n        classNames.rootNoHost,\n        {\n          position: 'fixed',\n          zIndex: ZIndexes.Layer,\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          visibility: 'hidden'\n        }\n      ],\n      className\n    ],\n    content: [\n      classNames.content,\n      {\n        visibility: 'visible'\n      }\n    ]\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport { LayerBase } from './Layer.base';\nimport { getStyles } from './Layer.styles';\n\nexport const Layer: React.StatelessComponent<ILayerProps> = styled<ILayerProps, ILayerStyleProps, ILayerStyles>(\n  LayerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Layer',\n    fields: ['hostId', 'theme', 'styles']\n  }\n);\n","/**\n * Rectangle helper class.\n *\n * @public\n * {@docCategory Rectangle}\n */\nexport class Rectangle {\n  public top: number;\n  public bottom: number;\n  public left: number;\n  public right: number;\n\n  constructor(left: number = 0, right: number = 0, top: number = 0, bottom: number = 0) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n  }\n\n  /**\n   * Calculated automatically by subtracting the right from left\n   */\n  get width(): number {\n    return this.right - this.left;\n  }\n\n  /**\n   * Calculated automatically by subtracting the bottom from top.\n   */\n  get height(): number {\n    return this.bottom - this.top;\n  }\n\n  /**\n   * Tests if another rect is approximately equal to this rect (within 4 decimal places.)\n   */\n  public equals(rect: Rectangle): boolean {\n    // I'm fixing it to 4 decimal places because it allows enough precision and will handle cases when something should be rounded,\n    // like .999999 should round to 1.\n    return (\n      parseFloat(this.top.toFixed(4)) === parseFloat(rect.top.toFixed(4)) &&\n      parseFloat(this.bottom.toFixed(4)) === parseFloat(rect.bottom.toFixed(4)) &&\n      parseFloat(this.left.toFixed(4)) === parseFloat(rect.left.toFixed(4)) &&\n      parseFloat(this.right.toFixed(4)) === parseFloat(rect.right.toFixed(4))\n    );\n  }\n}\n","import { DirectionalHint } from '../../common/DirectionalHint';\nimport { getScrollbarWidth, getRTL, Rectangle as FullRectangle, IRectangle } from '../../Utilities';\nimport {\n  IPositionDirectionalHintData,\n  IPositionedData,\n  IPoint,\n  ICalloutPositionedInfo,\n  ICalloutBeakPositionedInfo,\n  IPositionProps,\n  ICalloutPositionProps,\n  RectangleEdge\n} from './positioning.types';\n\nexport class Rectangle extends FullRectangle {\n  [key: string]: number | boolean | any;\n}\n\nfunction _createPositionData(targetEdge: RectangleEdge, alignmentEdge?: RectangleEdge, isAuto?: boolean): IPositionDirectionalHintData {\n  return {\n    targetEdge: targetEdge,\n    alignmentEdge: alignmentEdge,\n    isAuto: isAuto\n  };\n}\n\n// Currently the beakPercent is set to 50 for all positions meaning that it should tend to the center of the target\nconst DirectionalDictionary: { [key: number]: IPositionDirectionalHintData } = {\n  [DirectionalHint.topLeftEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.left),\n  [DirectionalHint.topCenter]: _createPositionData(RectangleEdge.top),\n  [DirectionalHint.topRightEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.right),\n  [DirectionalHint.topAutoEdge]: _createPositionData(RectangleEdge.top, undefined, true),\n  [DirectionalHint.bottomLeftEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.left),\n  [DirectionalHint.bottomCenter]: _createPositionData(RectangleEdge.bottom),\n  [DirectionalHint.bottomRightEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.right),\n  [DirectionalHint.bottomAutoEdge]: _createPositionData(RectangleEdge.bottom, undefined, true),\n  [DirectionalHint.leftTopEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.top),\n  [DirectionalHint.leftCenter]: _createPositionData(RectangleEdge.left),\n  [DirectionalHint.leftBottomEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.bottom),\n  [DirectionalHint.rightTopEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.top),\n  [DirectionalHint.rightCenter]: _createPositionData(RectangleEdge.right),\n  [DirectionalHint.rightBottomEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.bottom)\n};\n\n/**\n * Do not call methods from this directly, use either positionCallout or positionElement or make another function that\n * utilizes them.\n * START Private functions and interfaces\n */\n\nexport interface IElementPosition {\n  elementRectangle: Rectangle;\n  targetEdge: RectangleEdge;\n  alignmentEdge: RectangleEdge | undefined;\n}\n\nexport interface IElementPositionInfo extends IElementPosition {\n  targetRectangle: Rectangle;\n}\n\ntype PartialIRectangle = Partial<IRectangle>;\n\ninterface IPartialIRectangle extends PartialIRectangle {\n  [key: string]: number | undefined;\n}\n\nfunction _isRectangleWithinBounds(rect: Rectangle, boundingRect: Rectangle): boolean {\n  if (rect.top < boundingRect.top) {\n    return false;\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    return false;\n  }\n  if (rect.left < boundingRect.left) {\n    return false;\n  }\n  if (rect.right > boundingRect.right) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Gets all of the edges of a rectangle that are outside of the given bounds.\n * If there are no out of bounds edges it returns an empty array.\n */\nfunction _getOutOfBoundsEdges(rect: Rectangle, boundingRect: Rectangle): RectangleEdge[] {\n  const outOfBounds: RectangleEdge[] = new Array<RectangleEdge>();\n\n  if (rect.top < boundingRect.top) {\n    outOfBounds.push(RectangleEdge.top);\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    outOfBounds.push(RectangleEdge.bottom);\n  }\n  if (rect.left < boundingRect.left) {\n    outOfBounds.push(RectangleEdge.left);\n  }\n  if (rect.right > boundingRect.right) {\n    outOfBounds.push(RectangleEdge.right);\n  }\n\n  return outOfBounds;\n}\n\nfunction _getEdgeValue(rect: Rectangle, edge: RectangleEdge): number {\n  return rect[RectangleEdge[edge]];\n}\n\nfunction _setEdgeValue(rect: Rectangle, edge: RectangleEdge, value: number) {\n  rect[RectangleEdge[edge]] = value;\n  return rect;\n}\n\n/**\n * Returns the middle value of an edge. Only returns 1 value rather than xy coordinates as\n * the itself already contains the other coordinate.\n * For instance, a bottom edge's current value is it's y coordinate, so the number returned is the x.\n *\n * @param {Rectangle} rect\n * @param {RectangleEdge} edge\n * @returns {number}\n */\nfunction _getCenterValue(rect: Rectangle, edge: RectangleEdge): number {\n  const edges = _getFlankingEdges(edge);\n  return (_getEdgeValue(rect, edges.positiveEdge) + _getEdgeValue(rect, edges.negativeEdge)) / 2;\n}\n\n/**\n * Flips the value depending on the edge.\n * If the edge is a \"positive\" edge, Top or Left, then the value should stay as it is.\n * If the edge is a \"negative\" edge, Bottom or Right, then the value should be flipped.\n * This is to account for the fact that the coordinates are effectively reveserved in certain cases for the \"negative\" edges.\n * For example, when testing to see if a bottom edge 1 is within the bounds of another bottom edge 2.\n * If edge 1 is greater than edge 2 then it is out of bounds. This is reversed for top edge 1 and top edge 2.\n * If top edge 1 is less than edge 2 then it is out of bounds.\n *\n *\n * @param {RectangleEdge} edge\n * @param {number} value\n * @returns {number}\n */\nfunction _getRelativeEdgeValue(edge: RectangleEdge, value: number): number {\n  if (edge > 0) {\n    return value;\n  } else {\n    return value * -1;\n  }\n}\n\nfunction _getRelativeRectEdgeValue(edge: RectangleEdge, rect: Rectangle): number {\n  return _getRelativeEdgeValue(edge, _getEdgeValue(rect, edge));\n}\n\nfunction _getRelativeEdgeDifference(rect: Rectangle, hostRect: Rectangle, edge: RectangleEdge): number {\n  const edgeDifference = _getEdgeValue(rect, edge) - _getEdgeValue(hostRect, edge);\n  return _getRelativeEdgeValue(edge, edgeDifference);\n}\n\n/**\n * Moves the edge of a rectangle to the value given. It only moves the edge in a linear direction based on that edge.\n * For example, if it's a bottom edge it will only change y coordinates.\n *\n * @param {Rectangle} rect\n * @param {RectangleEdge} edge\n * @param {number} newValue\n * @returns {Rectangle}\n */\nfunction _moveEdge(rect: Rectangle, edge: RectangleEdge, newValue: number): Rectangle {\n  const difference = _getEdgeValue(rect, edge) - newValue;\n  rect = _setEdgeValue(rect, edge, newValue);\n  rect = _setEdgeValue(rect, edge * -1, _getEdgeValue(rect, edge * -1) - difference);\n  return rect;\n}\n\n/**\n * Aligns the edge on the passed in rect to the target. If there is a gap then it will have that space between the two.\n *\n * @param {Rectangle} rect\n * @param {Rectangle} target\n * @param {RectangleEdge} edge\n * @param {number} [gap=0]\n * @returns {Rectangle}\n */\nfunction _alignEdges(rect: Rectangle, target: Rectangle, edge: RectangleEdge, gap: number = 0): Rectangle {\n  return _moveEdge(rect, edge, _getEdgeValue(target, edge) + _getRelativeEdgeValue(edge, gap));\n}\n\n/**\n * Aligns the targetEdge on the passed in target to the rects corresponding opposite edge.\n * For instance if targetEdge is bottom, then the rects top will be moved to match it.\n *\n * @param {Rectangle} rect\n * @param {Rectangle} target\n * @param {RectangleEdge} targetEdge\n * @param {number} [gap=0]\n * @returns {Rectangle}\n */\nfunction _alignOppositeEdges(rect: Rectangle, target: Rectangle, targetEdge: RectangleEdge, gap: number = 0): Rectangle {\n  const oppositeEdge = targetEdge * -1;\n  const adjustedGap = _getRelativeEdgeValue(oppositeEdge, gap);\n  return _moveEdge(rect, targetEdge * -1, _getEdgeValue(target, targetEdge) + adjustedGap);\n}\n\n/**\n * Tests to see if the given edge is within the bounds of the given rectangle.\n *\n * @param {Rectangle} rect\n * @param {Rectangle} bounds\n * @param {RectangleEdge} edge\n * @returns {boolean}\n */\nfunction _isEdgeInBounds(rect: Rectangle, bounds: Rectangle, edge: RectangleEdge): boolean {\n  const adjustedRectValue = _getRelativeRectEdgeValue(edge, rect);\n  return adjustedRectValue > _getRelativeRectEdgeValue(edge, bounds);\n}\n\n/**\n * Attempts to move the rectangle through various sides of the target to find a place to fit.\n * If no fit is found, the original position should be returned.\n *\n * @param {Rectangle} rect\n * @param {Rectangle} target\n * @param {Rectangle} bounding\n * @param {IPositionDirectionalHintData} positionData\n * @param {number} [gap=0]\n * @returns {IElementPosition}\n */\nfunction _flipToFit(\n  rect: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0\n): IElementPosition {\n  const directions: RectangleEdge[] = [RectangleEdge.left, RectangleEdge.right, RectangleEdge.bottom, RectangleEdge.top];\n  let currentEstimate = rect;\n  let currentEdge = positionData.targetEdge;\n  let currentAlignment = positionData.alignmentEdge;\n  // Keep switching sides until one is found with enough space. If all sides don't fit then return the unmodified element.\n  for (let i = 0; i < 4; i++) {\n    if (!_isEdgeInBounds(currentEstimate, bounding, currentEdge)) {\n      directions.splice(directions.indexOf(currentEdge), 1);\n      if (directions.indexOf(currentEdge * -1) > -1) {\n        currentEdge = currentEdge * -1;\n      } else {\n        currentAlignment = currentEdge;\n        currentEdge = directions.slice(-1)[0];\n      }\n      currentEstimate = _estimatePosition(rect, target, { targetEdge: currentEdge, alignmentEdge: currentAlignment }, gap);\n    } else {\n      return {\n        elementRectangle: currentEstimate,\n        targetEdge: currentEdge,\n        alignmentEdge: currentAlignment\n      };\n    }\n  }\n  return {\n    elementRectangle: rect,\n    targetEdge: positionData.targetEdge,\n    alignmentEdge: currentAlignment\n  };\n}\n\n/**\n * Flips only the alignment edge of an element rectangle. This is used instead of nudging the alignment edges into position,\n * when alignTargetEdge is specified.\n * @param elementEstimate\n * @param target\n * @param bounding\n * @param gap\n */\nfunction _flipAlignmentEdge(elementEstimate: IElementPosition, target: Rectangle, gap: number, coverTarget?: boolean): IElementPosition {\n  const { alignmentEdge, targetEdge, elementRectangle } = elementEstimate;\n  const oppositeEdge = alignmentEdge! * -1;\n  const newEstimate = _estimatePosition(\n    elementRectangle,\n    target,\n    { targetEdge: targetEdge, alignmentEdge: oppositeEdge },\n    gap,\n    coverTarget\n  );\n\n  return {\n    elementRectangle: newEstimate,\n    targetEdge: targetEdge,\n    alignmentEdge: oppositeEdge\n  };\n}\n\n/**\n * Adjusts a element rectangle to fit within the bounds given. If directionalHintFixed or covertarget is passed in\n * then the element will not flip sides on the target. They will, however, be nudged to fit within the bounds given.\n *\n * @param {Rectangle} element\n * @param {Rectangle} target\n * @param {Rectangle} bounding\n * @param {IPositionDirectionalHintData} positionData\n * @param {number} [gap=0]\n * @param {boolean} [directionalHintFixed]\n * @param {boolean} [coverTarget]\n * @returns {IElementPosition}\n */\nfunction _adjustFitWithinBounds(\n  element: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean\n): IElementPosition {\n  const { alignmentEdge, alignTargetEdge } = positionData;\n  let elementEstimate: IElementPosition = {\n    elementRectangle: element,\n    targetEdge: positionData.targetEdge,\n    alignmentEdge: alignmentEdge\n  };\n\n  if (!directionalHintFixed && !coverTarget) {\n    elementEstimate = _flipToFit(element, target, bounding, positionData, gap);\n  }\n\n  const outOfBounds = _getOutOfBoundsEdges(element, bounding);\n\n  if (alignTargetEdge) {\n    // The edge opposite to the alignment edge might be out of bounds. Flip alignment to see if we can get it within bounds.\n    if (elementEstimate.alignmentEdge && outOfBounds.indexOf(elementEstimate.alignmentEdge * -1) > -1) {\n      const flippedElementEstimate = _flipAlignmentEdge(elementEstimate, target, gap, coverTarget);\n      if (_isRectangleWithinBounds(flippedElementEstimate.elementRectangle, bounding)) {\n        return flippedElementEstimate;\n      }\n    }\n  } else {\n    for (const direction of outOfBounds) {\n      elementEstimate.elementRectangle = _alignEdges(elementEstimate.elementRectangle, bounding, direction);\n    }\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Moves the middle point on an edge to the point given.\n * Only moves in one direction. For instance if a bottom edge is passed in, then\n * the bottom edge will be moved in the x axis to match the point.\n *\n * @param {Rectangle} rect\n * @param {RectangleEdge} edge\n * @param {number} point\n * @returns {Rectangle}\n */\nfunction _centerEdgeToPoint(rect: Rectangle, edge: RectangleEdge, point: number): Rectangle {\n  const { positiveEdge } = _getFlankingEdges(edge);\n  const elementMiddle = _getCenterValue(rect, edge);\n  const distanceToMiddle = elementMiddle - _getEdgeValue(rect, positiveEdge);\n  return _moveEdge(rect, positiveEdge, point - distanceToMiddle);\n}\n\n/**\n * Moves the element rectangle to be appropriately positioned relative to a given target.\n * Does not flip or adjust the element.\n *\n * @param {Rectangle} elementToPosition\n * @param {Rectangle} target\n * @param {IPositionDirectionalHintData} positionData\n * @param {number} [gap=0]\n * @param {boolean} [coverTarget]\n * @returns {Rectangle}\n */\nfunction _estimatePosition(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  coverTarget?: boolean\n): Rectangle {\n  let estimatedElementPosition: Rectangle;\n  const { alignmentEdge, targetEdge } = positionData;\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  estimatedElementPosition = coverTarget\n    ? _alignEdges(elementToPosition, target, targetEdge, gap)\n    : _alignOppositeEdges(elementToPosition, target, targetEdge, gap);\n  // if no alignment edge is provided it's supposed to be centered.\n  if (!alignmentEdge) {\n    const targetMiddlePoint = _getCenterValue(target, targetEdge);\n    estimatedElementPosition = _centerEdgeToPoint(estimatedElementPosition, elementEdge, targetMiddlePoint);\n  } else {\n    estimatedElementPosition = _alignEdges(estimatedElementPosition, target, alignmentEdge);\n  }\n\n  return estimatedElementPosition;\n}\n\n/**\n * Returns the non-opposite edges of the target edge.\n * For instance if bottom is passed in then left and right will be returned.\n *\n * @param {RectangleEdge} edge\n * @returns {{ firstEdge: RectangleEdge, secondEdge: RectangleEdge }}\n */\nfunction _getFlankingEdges(edge: RectangleEdge): { positiveEdge: RectangleEdge; negativeEdge: RectangleEdge } {\n  if (edge === RectangleEdge.top || edge === RectangleEdge.bottom) {\n    return {\n      positiveEdge: RectangleEdge.left,\n      negativeEdge: RectangleEdge.right\n    };\n  } else {\n    return {\n      positiveEdge: RectangleEdge.top,\n      negativeEdge: RectangleEdge.bottom\n    };\n  }\n}\n\n/**\n * Retrieve the final value for the return edge of elementRectangle.\n * If the elementRectangle is closer to one side of the bounds versus the other, the return edge is flipped to grow inward.\n * The finalized return edge should not flip if the element has already been positiuoned successfully to prevent the callout from\n * appearing to jump\n *\n * @param elementRectangle\n * @param targetEdge\n * @param bounds\n * @param previousPositions\n */\nfunction _finalizeReturnEdge(\n  elementRectangle: Rectangle,\n  returnEdge: RectangleEdge,\n  bounds?: Rectangle,\n  previousPositions?: boolean\n): RectangleEdge {\n  if (\n    !previousPositions &&\n    bounds &&\n    Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge)) >\n      Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge * -1))\n  ) {\n    return returnEdge * -1;\n  }\n\n  return returnEdge;\n}\n\n/**\n * Finalizes the element positon based on the hostElement. Only returns the\n * rectangle values to position such that they are anchored to the target.\n * This helps prevent resizing from looking very strange.\n * For instance, if the target edge is top and aligned with the left side then\n * the bottom and left values are returned so as the callou shrinks it shrinks towards that corner.\n *\n * @param {Rectangle} elementRectangle\n * @param {HTMLElement} hostElement\n * @param {RectangleEdge} targetEdge\n * @param {RectangleEdge} bounds\n * @param {RectangleEdge} [alignmentEdge]\n * @param {boolean} coverTarget\n * @param {previousPositions} previousPositions\n * @returns {IPartialIRectangle}\n */\nfunction _finalizeElementPosition(\n  elementRectangle: Rectangle,\n  hostElement: HTMLElement,\n  targetEdge: RectangleEdge,\n  bounds?: Rectangle,\n  alignmentEdge?: RectangleEdge,\n  coverTarget?: boolean,\n  previousPositions?: boolean\n): IPartialIRectangle {\n  const returnValue: IPartialIRectangle = {};\n\n  const hostRect: Rectangle = _getRectangleFromElement(hostElement);\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  const elementEdgeString = RectangleEdge[elementEdge];\n  const returnEdge = _finalizeReturnEdge(\n    elementRectangle,\n    alignmentEdge ? alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge,\n    bounds,\n    previousPositions\n  );\n\n  returnValue[elementEdgeString] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge);\n\n  return returnValue;\n}\n\n// Since the beak is rotated 45 degrees the actual height/width is the length of the diagonal.\n// We still want to position the beak based on it's midpoint which does not change. It will\n// be at (beakwidth / 2, beakwidth / 2)\nfunction _calculateActualBeakWidthInPixels(beakWidth: number): number {\n  return Math.sqrt(beakWidth * beakWidth * 2);\n}\n\n/**\n * Returns the appropriate IPositionData based on the props altered for RTL.\n * If directionalHintForRTL is passed in that is used if the page is RTL.\n * If a directionalHint is specified and no directionalHintForRTL is available and the page is RTL the hint will be flipped.\n * For instance bottomLeftEdge would become bottomRightEdge.\n * If there is no directionalHint passed in bottomAutoEdge is chosen automatically.\n *\n * @param {IPositionProps} props\n * @returns {IPositionDirectionalHintData}\n */\nfunction _getPositionData(\n  directionalHint: DirectionalHint = DirectionalHint.bottomAutoEdge,\n  directionalHintForRTL?: DirectionalHint,\n  previousPositions?: IPositionDirectionalHintData\n): IPositionDirectionalHintData {\n  if (previousPositions) {\n    return {\n      alignmentEdge: previousPositions.alignmentEdge,\n      isAuto: previousPositions.isAuto,\n      targetEdge: previousPositions.targetEdge\n    };\n  }\n  const positionInformation: IPositionDirectionalHintData = { ...DirectionalDictionary[directionalHint] };\n  if (getRTL()) {\n    // If alignment edge exists and that alignment edge is -2 or 2, right or left, then flip it.\n    if (positionInformation.alignmentEdge && positionInformation.alignmentEdge % 2 === 0) {\n      positionInformation.alignmentEdge = positionInformation.alignmentEdge * -1;\n    }\n\n    return directionalHintForRTL !== undefined ? DirectionalDictionary[directionalHintForRTL] : positionInformation;\n  }\n  return positionInformation;\n}\n\n/**\n * Get's the alignment data for the given information. This only really matters if the positioning is Auto.\n * If it is auto then the alignmentEdge should be chosen based on the target edge's position relative to\n * the center of the page.\n *\n * @param {IPositionDirectionalHintData} positionData\n * @param {Rectangle} target\n * @param {Rectangle} boundingRect\n * @param {boolean} [coverTarget]\n * @returns {IPositionDirectionalHintData}\n */\nfunction _getAlignmentData(\n  positionData: IPositionDirectionalHintData,\n  target: Rectangle,\n  boundingRect: Rectangle,\n  coverTarget?: boolean,\n  alignTargetEdge?: boolean\n): IPositionDirectionalHintData {\n  if (positionData.isAuto) {\n    positionData.alignmentEdge = getClosestEdge(positionData.targetEdge, target, boundingRect);\n  }\n\n  positionData.alignTargetEdge = alignTargetEdge;\n  return positionData;\n}\n\nfunction getClosestEdge(targetEdge: RectangleEdge, target: Rectangle, boundingRect: Rectangle): RectangleEdge {\n  const targetCenter: number = _getCenterValue(target, targetEdge);\n  const boundingCenter: number = _getCenterValue(boundingRect, targetEdge);\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(targetEdge);\n  if (targetCenter <= boundingCenter) {\n    return positiveEdge;\n  } else {\n    return negativeEdge;\n  }\n}\n\nfunction _positionElementWithinBounds(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean\n): IElementPosition {\n  const estimatedElementPosition: Rectangle = _estimatePosition(elementToPosition, target, positionData, gap, coverTarget);\n  if (_isRectangleWithinBounds(estimatedElementPosition, bounding)) {\n    return {\n      elementRectangle: estimatedElementPosition,\n      targetEdge: positionData.targetEdge,\n      alignmentEdge: positionData.alignmentEdge\n    };\n  } else {\n    return _adjustFitWithinBounds(elementToPosition, target, bounding, positionData, gap, directionalHintFixed, coverTarget);\n  }\n}\n\nfunction _finalizeBeakPosition(\n  elementPosition: IElementPosition,\n  positionedBeak: Rectangle,\n  bounds?: Rectangle\n): ICalloutBeakPositionedInfo {\n  const targetEdge = elementPosition.targetEdge * -1;\n  // The \"host\" element that we will use to help position the beak.\n  const actualElement = new Rectangle(0, elementPosition.elementRectangle.width, 0, elementPosition.elementRectangle.height);\n  const returnValue: IPartialIRectangle = {};\n  const returnEdge = _finalizeReturnEdge(\n    elementPosition.elementRectangle,\n    elementPosition.alignmentEdge ? elementPosition.alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge,\n    bounds\n  );\n\n  returnValue[RectangleEdge[targetEdge]] = _getEdgeValue(positionedBeak, targetEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(positionedBeak, actualElement, returnEdge);\n\n  return {\n    elementPosition: { ...returnValue },\n    closestEdge: getClosestEdge(elementPosition.targetEdge, positionedBeak, actualElement),\n    targetEdge: targetEdge\n  };\n}\n\nfunction _positionBeak(beakWidth: number, elementPosition: IElementPositionInfo): Rectangle {\n  const target = elementPosition.targetRectangle;\n  /**\n   * Note about beak positioning: The actual beak width only matters for getting the gap between the callout and\n   * target, it does not impact the beak placement within the callout. For example example, if the beakWidth is 8,\n   * then the actual beakWidth is sqrroot(8^2 + 8^2) = 11.31x11.31. So the callout will need to be an extra 3 pixels\n   * away from its target. While the beak is being positioned in the callout it still acts as though it were 8x8.\n   * */\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(elementPosition.targetEdge);\n  const beakTargetPoint = _getCenterValue(target, elementPosition.targetEdge);\n  const elementBounds = new Rectangle(\n    beakWidth / 2,\n    elementPosition.elementRectangle.width - beakWidth / 2,\n    beakWidth / 2,\n    elementPosition.elementRectangle.height - beakWidth / 2\n  );\n\n  let beakPosition: Rectangle = new Rectangle(0, beakWidth, 0, beakWidth);\n\n  beakPosition = _moveEdge(beakPosition, elementPosition.targetEdge * -1, -beakWidth / 2);\n\n  beakPosition = _centerEdgeToPoint(\n    beakPosition,\n    elementPosition.targetEdge * -1,\n    beakTargetPoint - _getRelativeRectEdgeValue(positiveEdge, elementPosition.elementRectangle)\n  );\n\n  if (!_isEdgeInBounds(beakPosition, elementBounds, positiveEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, positiveEdge);\n  } else if (!_isEdgeInBounds(beakPosition, elementBounds, negativeEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, negativeEdge);\n  }\n\n  return beakPosition;\n}\n\nfunction _getRectangleFromElement(element: Element): Rectangle {\n  const clientRect: ClientRect = element.getBoundingClientRect();\n\n  return new Rectangle(clientRect.left, clientRect.right, clientRect.top, clientRect.bottom);\n}\n\nfunction _getRectangleFromIRect(rect: IRectangle): Rectangle {\n  return new Rectangle(rect.left, rect.right, rect.top, rect.bottom);\n}\n\nfunction _getTargetRect(bounds: Rectangle, target: Element | MouseEvent | IPoint | undefined): Rectangle {\n  let targetRectangle: Rectangle;\n  if (target) {\n    if ((target as MouseEvent).preventDefault) {\n      const ev = target as MouseEvent;\n      targetRectangle = new Rectangle(ev.clientX, ev.clientX, ev.clientY, ev.clientY);\n    } else if ((target as Element).getBoundingClientRect) {\n      targetRectangle = _getRectangleFromElement(target as Element);\n      // HTMLImgElements can have x and y values. The check for it being a point must go last.\n    } else {\n      const point: IPoint = target as IPoint;\n      targetRectangle = new Rectangle(point.x, point.x, point.y, point.y);\n    }\n\n    if (!_isRectangleWithinBounds(targetRectangle, bounds)) {\n      const outOfBounds: RectangleEdge[] = _getOutOfBoundsEdges(targetRectangle, bounds);\n\n      for (const direction of outOfBounds) {\n        (targetRectangle as any)[RectangleEdge[direction]] = (bounds as any)[RectangleEdge[direction]];\n      }\n    }\n  } else {\n    targetRectangle = new Rectangle(0, 0, 0, 0);\n  }\n\n  return targetRectangle;\n}\n\n/**\n * If max height is less than zero it returns the bounds height instead.\n */\nfunction _getMaxHeightFromTargetRectangle(\n  targetRectangle: Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number,\n  bounds: Rectangle,\n  coverTarget?: boolean\n) {\n  let maxHeight = 0;\n  const directionalHint = DirectionalDictionary[targetEdge];\n\n  // If cover target is set, then the max height should be calculated using the opposite of the target edge since\n  // that's the direction that the callout will expand in.\n  // For instance, if the directionalhint is bottomLeftEdge then the callout will position so it's bottom edge\n  // is aligned with the bottom of the target and expand up towards the top of the screen and the calculated max height\n  // is (bottom of target) - (top of screen) - gapSpace.\n  const target = coverTarget ? directionalHint.targetEdge * -1 : directionalHint.targetEdge;\n\n  if (target === RectangleEdge.top) {\n    maxHeight = _getEdgeValue(targetRectangle, directionalHint.targetEdge) - bounds.top - gapSpace;\n  } else if (target === RectangleEdge.bottom) {\n    maxHeight = bounds.bottom - _getEdgeValue(targetRectangle, directionalHint.targetEdge) - gapSpace;\n  } else {\n    maxHeight = bounds.bottom - targetRectangle.top - gapSpace;\n  }\n\n  return maxHeight > 0 ? maxHeight : bounds.height;\n}\n\nfunction _positionElementRelative(\n  props: IPositionProps,\n  elementToPosition: HTMLElement,\n  boundingRect: Rectangle,\n  previousPositions?: IPositionedData\n): IElementPositionInfo {\n  const gap: number = props.gapSpace ? props.gapSpace : 0;\n  const targetRect: Rectangle = _getTargetRect(boundingRect, props.target);\n  const positionData: IPositionDirectionalHintData = _getAlignmentData(\n    _getPositionData(props.directionalHint, props.directionalHintForRTL, previousPositions)!,\n    targetRect,\n    boundingRect,\n    props.coverTarget,\n    props.alignTargetEdge\n  );\n  const positionedElement: IElementPosition = _positionElementWithinBounds(\n    _getRectangleFromElement(elementToPosition),\n    targetRect,\n    boundingRect,\n    positionData,\n    gap,\n    props.directionalHintFixed,\n    props.coverTarget\n  );\n  return { ...positionedElement, targetRectangle: targetRect };\n}\n\n/**\n *\n * @param positionedElement The elements estimated position, is not page relative yet\n * @param hostElement The element which is hosting the positioning element\n * @param bounds The space in which the positioning element can render\n * @param coverTarget Whether or not the element should cover the target\n * @param previousPositions If the element has already been positioned before.\n */\nfunction _finalizePositionData(\n  positionedElement: IElementPosition,\n  hostElement: HTMLElement,\n  bounds?: Rectangle,\n  coverTarget?: boolean,\n  previousPositions?: boolean\n): IPositionedData {\n  const finalizedElement: IPartialIRectangle = _finalizeElementPosition(\n    positionedElement.elementRectangle,\n    hostElement,\n    positionedElement.targetEdge,\n    bounds,\n    positionedElement.alignmentEdge,\n    coverTarget,\n    previousPositions\n  );\n  return {\n    elementPosition: finalizedElement,\n    targetEdge: positionedElement.targetEdge,\n    alignmentEdge: positionedElement.alignmentEdge\n  };\n}\n\nfunction _positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData\n): IPositionedData {\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPosition = _positionElementRelative(props, elementToPosition, boundingRect, previousPositions);\n  return _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget, !!previousPositions);\n}\n\nfunction _positionCallout(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo\n): ICalloutPositionedInfo {\n  const beakWidth: number = props.isBeakVisible ? props.beakWidth || 0 : 0;\n  const gap: number = _calculateActualBeakWidthInPixels(beakWidth) / 2 + (props.gapSpace ? props.gapSpace : 0);\n  const positionProps: IPositionProps = props;\n  positionProps.gapSpace = gap;\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPositionInfo = _positionElementRelative(positionProps, callout, boundingRect, previousPositions);\n  const beakPositioned: Rectangle = _positionBeak(beakWidth, positionedElement);\n  const finalizedBeakPosition: ICalloutBeakPositionedInfo = _finalizeBeakPosition(positionedElement, beakPositioned, boundingRect);\n  return {\n    ..._finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget, !!previousPositions),\n    beakPosition: finalizedBeakPosition\n  };\n}\n// END PRIVATE FUNCTIONS\n\n/* tslint:disable:variable-name */\nexport const __positioningTestPackage = {\n  _finalizePositionData,\n  _finalizeBeakPosition,\n  _calculateActualBeakWidthInPixels,\n  _positionElementWithinBounds,\n  _positionBeak,\n  _getPositionData,\n  _getMaxHeightFromTargetRectangle\n};\n/* tslint:enable:variable-name */\n\n/**\n * Used to position an element relative to the given positioning props.\n * If positioning has been completed before, previousPositioningData\n * can be passed to ensure that the positioning element repositions based on\n * its previous targets rather than starting with directionalhint.\n *\n * @export\n * @param {IPositionProps} props\n * @param {HTMLElement} hostElement\n * @param {HTMLElement} elementToPosition\n * @param {IPositionedData} previousPositions\n * @returns\n */\nexport function positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData\n): IPositionedData {\n  return _positionElement(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCallout(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, elementToPosition, previousPositions);\n}\n\n/**\n * Get's the maximum height that a rectangle can have in order to fit below or above a target.\n * If the directional hint specifies a left or right edge (i.e. leftCenter) it will limit the height to the topBorder\n * of the target given.\n * If no bounds are provided then the window is treated as the bounds.\n */\nexport function getMaxHeight(\n  target: Element | MouseEvent | IPoint,\n  targetEdge: DirectionalHint,\n  gapSpace: number = 0,\n  bounds?: IRectangle,\n  coverTarget?: boolean\n): number {\n  const mouseTarget: MouseEvent = target as MouseEvent;\n  const elementTarget: Element = target as Element;\n  const pointTarget: IPoint = target as IPoint;\n  let targetRect: Rectangle;\n  const boundingRectangle = bounds\n    ? _getRectangleFromIRect(bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n\n  if (mouseTarget.stopPropagation) {\n    targetRect = new Rectangle(mouseTarget.clientX, mouseTarget.clientX, mouseTarget.clientY, mouseTarget.clientY);\n  } else if (pointTarget.x !== undefined && pointTarget.y !== undefined) {\n    targetRect = new Rectangle(pointTarget.x, pointTarget.x, pointTarget.y, pointTarget.y);\n  } else {\n    targetRect = _getRectangleFromElement(elementTarget);\n  }\n\n  return _getMaxHeightFromTargetRectangle(targetRect, targetEdge, gapSpace, boundingRectangle, coverTarget);\n}\n\n/**\n * Returns the opposite edge of the given RectangleEdge.\n */\nexport function getOppositeEdge(edge: RectangleEdge): RectangleEdge {\n  return edge * -1;\n}\n","import * as React from 'react';\nimport { ICalloutProps, ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  Async,\n  IPoint,\n  IRectangle,\n  assign,\n  css,\n  divProperties,\n  elementContains,\n  focusFirstChild,\n  getDocument,\n  getNativeProps,\n  getWindow,\n  on,\n  shallowCompare\n} from '../../Utilities';\nimport {\n  positionCallout,\n  ICalloutPositionedInfo,\n  IPositionProps,\n  getMaxHeight,\n  IPosition,\n  RectangleEdge\n} from '../../utilities/positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\n\nconst ANIMATIONS: { [key: number]: string | undefined } = {\n  [RectangleEdge.top]: AnimationClassNames.slideUpIn10,\n  [RectangleEdge.bottom]: AnimationClassNames.slideDownIn10,\n  [RectangleEdge.left]: AnimationClassNames.slideLeftIn10,\n  [RectangleEdge.right]: AnimationClassNames.slideRightIn10\n};\n\nconst getClassNames = classNamesFunction<ICalloutContentStyleProps, ICalloutContentStyles>({\n  disableCaching: true\n});\nconst BORDER_WIDTH = 1;\nconst BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\nconst OFF_SCREEN_STYLE = { opacity: 0, filter: 'opacity(0)' };\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nconst ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nexport interface ICalloutState {\n  positions?: ICalloutPositionedInfo;\n  slideDirectionalClassName?: string;\n  calloutElementRect?: ClientRect;\n  heightOffset?: number;\n}\n\nexport class CalloutContentBase extends React.Component<ICalloutProps, ICalloutState> {\n  public static defaultProps = {\n    preventDismissOnLostFocus: false,\n    preventDismissOnScroll: false,\n    preventDismissOnResize: false,\n    isBeakVisible: true,\n    beakWidth: 16,\n    gapSpace: 0,\n    minPagePadding: 8,\n    directionalHint: DirectionalHint.bottomAutoEdge\n  };\n\n  private _classNames: { [key in keyof ICalloutContentStyles]: string };\n  private _didSetInitialFocus: boolean;\n  private _hostElement = React.createRef<HTMLDivElement>();\n  private _calloutElement = React.createRef<HTMLDivElement>();\n  private _targetWindow: Window;\n  private _bounds: IRectangle | undefined;\n  private _positionAttempts: number;\n  private _target: Element | MouseEvent | IPoint | null;\n  private _setHeightOffsetTimer: number;\n  private _hasListeners = false;\n  private _maxHeight: number | undefined;\n  private _blockResetHeight: boolean;\n\n  private _async: Async;\n  private _disposables: (() => void)[] = [];\n\n  constructor(props: ICalloutProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._didSetInitialFocus = false;\n    this.state = {\n      positions: undefined,\n      slideDirectionalClassName: undefined,\n      // @TODO it looks like this is not even being used anymore.\n      calloutElementRect: undefined,\n      heightOffset: 0\n    };\n    this._positionAttempts = 0;\n  }\n\n  public componentDidUpdate() {\n    if (!this.props.hidden) {\n      this._setInitialFocus();\n      if (!this._hasListeners) {\n        this._addListeners();\n      }\n      this._updateAsyncPosition();\n    } else {\n      if (this._hasListeners) {\n        this._removeListeners();\n      }\n    }\n  }\n\n  public shouldComponentUpdate(newProps: ICalloutProps, newState: ICalloutState): boolean {\n    if (this.props.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return false;\n    }\n\n    return !shallowCompare(this.props, newProps) || !shallowCompare(this.state, newState);\n  }\n\n  public componentWillMount() {\n    this._setTargetWindowAndElement(this._getTarget());\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n    this._disposables.forEach((dispose: () => void) => dispose());\n  }\n\n  public componentWillUpdate(newProps: ICalloutProps): void {\n    // If the target element changed, find the new one. If we are tracking target with class name, always find element because we\n    // do not know if fabric has rendered a new element and disposed the old element.\n    const newTarget = this._getTarget(newProps);\n    const oldTarget = this._getTarget();\n    if ((newTarget !== oldTarget || typeof newTarget === 'string' || newTarget instanceof String) && !this._blockResetHeight) {\n      this._maxHeight = undefined;\n      this._setTargetWindowAndElement(newTarget!);\n    }\n    if (newProps.gapSpace !== this.props.gapSpace || this.props.beakWidth !== newProps.beakWidth) {\n      this._maxHeight = undefined;\n    }\n\n    if (newProps.finalHeight !== this.props.finalHeight) {\n      this._setHeightOffsetEveryFrame();\n    }\n\n    // Ensure positioning is recalculated when we are about to show a persisted menu.\n    if (!newProps.hidden && newProps.hidden !== this.props.hidden) {\n      this._maxHeight = undefined;\n      // Target might have been updated while hidden.\n      this._setTargetWindowAndElement(newTarget);\n      this.setState({\n        positions: undefined\n      });\n      this._didSetInitialFocus = false;\n      this._bounds = undefined;\n    }\n\n    this._blockResetHeight = false;\n  }\n\n  public componentDidMount(): void {\n    if (!this.props.hidden) {\n      this._onComponentDidMount();\n    }\n  }\n\n  public render(): JSX.Element | null {\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!this._targetWindow) {\n      return null;\n    }\n    let { target } = this.props;\n    const {\n      styles,\n      style,\n      ariaLabel,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      className,\n      isBeakVisible,\n      children,\n      beakWidth,\n      calloutWidth,\n      calloutMaxWidth,\n      finalHeight,\n      hideOverflow = !!finalHeight,\n      backgroundColor,\n      calloutMaxHeight,\n      onScroll,\n      shouldRestoreFocus = true\n    } = this.props;\n    target = this._getTarget();\n    const { positions } = this.state;\n\n    const getContentMaxHeight: number | undefined = this._getMaxHeight() ? this._getMaxHeight()! + this.state.heightOffset! : undefined;\n    const contentMaxHeight: number | undefined =\n      calloutMaxHeight! && getContentMaxHeight && calloutMaxHeight! < getContentMaxHeight ? calloutMaxHeight! : getContentMaxHeight!;\n    const overflowYHidden = hideOverflow;\n\n    const beakVisible = isBeakVisible && !!target;\n    this._classNames = getClassNames(styles!, {\n      theme: this.props.theme!,\n      className,\n      overflowYHidden: overflowYHidden,\n      calloutWidth,\n      positions,\n      beakWidth,\n      backgroundColor,\n      calloutMaxWidth\n    });\n\n    const overflowStyle: React.CSSProperties = {\n      ...style,\n      maxHeight: contentMaxHeight,\n      ...(overflowYHidden && { overflowY: 'hidden' })\n    };\n\n    const visibilityStyle: React.CSSProperties | undefined = this.props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    const content = (\n      <div ref={this._hostElement} className={this._classNames.container} style={visibilityStyle}>\n        <div\n          {...getNativeProps(this.props, divProperties, ARIA_ROLE_ATTRIBUTES)}\n          className={css(this._classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge!])}\n          style={positions ? positions.elementPosition : OFF_SCREEN_STYLE}\n          tabIndex={-1} // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          ref={this._calloutElement}\n        >\n          {beakVisible && <div className={this._classNames.beak} style={this._getBeakPosition()} />}\n          {beakVisible && <div className={this._classNames.beakCurtain} />}\n          <Popup\n            {...getNativeProps(this.props, ARIA_ROLE_ATTRIBUTES)}\n            ariaLabel={ariaLabel}\n            ariaDescribedBy={ariaDescribedBy}\n            ariaLabelledBy={ariaLabelledBy}\n            className={this._classNames.calloutMain}\n            onDismiss={this.dismiss}\n            onScroll={onScroll}\n            shouldRestoreFocus={shouldRestoreFocus}\n            style={overflowStyle}\n          >\n            {children}\n          </Popup>\n        </div>\n      </div>\n    );\n\n    return content;\n  }\n\n  public dismiss = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { onDismiss } = this.props;\n\n    if (onDismiss) {\n      onDismiss(ev);\n    }\n  };\n\n  protected _dismissOnScroll = (ev: Event) => {\n    const { preventDismissOnScroll } = this.props;\n    if (this.state.positions && !preventDismissOnScroll) {\n      this._dismissOnClickOrScroll(ev);\n    }\n  };\n\n  protected _dismissOnResize = (ev: Event) => {\n    const { preventDismissOnResize } = this.props;\n    if (!preventDismissOnResize) {\n      this.dismiss(ev);\n    }\n  };\n\n  protected _dismissOnLostFocus = (ev: Event) => {\n    const { preventDismissOnLostFocus } = this.props;\n    if (!preventDismissOnLostFocus) {\n      this._dismissOnClickOrScroll(ev);\n    }\n  };\n\n  protected _setInitialFocus = (): void => {\n    if (this.props.setInitialFocus && !this._didSetInitialFocus && this.state.positions && this._calloutElement.current) {\n      this._didSetInitialFocus = true;\n      this._async.requestAnimationFrame(() => focusFirstChild(this._calloutElement.current!), this._calloutElement.current);\n    }\n  };\n\n  protected _onComponentDidMount = (): void => {\n    this._addListeners();\n\n    if (this.props.onLayerMounted) {\n      this.props.onLayerMounted();\n    }\n\n    this._updateAsyncPosition();\n    this._setHeightOffsetEveryFrame();\n  };\n\n  private _dismissOnClickOrScroll(ev: Event) {\n    const target = ev.target as HTMLElement;\n    const isEventTargetOutsideCallout = this._hostElement.current && !elementContains(this._hostElement.current, target);\n\n    if (\n      (!this._target && isEventTargetOutsideCallout) ||\n      (ev.target !== this._targetWindow &&\n        isEventTargetOutsideCallout &&\n        ((this._target as MouseEvent).stopPropagation ||\n          (!this._target || (target !== this._target && !elementContains(this._target as HTMLElement, target)))))\n    ) {\n      this.dismiss(ev);\n    }\n  }\n\n  private _addListeners() {\n    // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n    this._async.setTimeout(() => {\n      this._disposables.push(\n        on(this._targetWindow, 'scroll', this._dismissOnScroll, true),\n        on(this._targetWindow, 'resize', this._dismissOnResize, true),\n        on(this._targetWindow.document.documentElement, 'focus', this._dismissOnLostFocus, true),\n        on(this._targetWindow.document.documentElement, 'click', this._dismissOnLostFocus, true)\n      );\n      this._hasListeners = true;\n    }, 0);\n  }\n\n  private _removeListeners() {\n    this._disposables.forEach((dispose: () => void) => dispose());\n    this._disposables = [];\n    this._hasListeners = false;\n  }\n\n  private _updateAsyncPosition(): void {\n    this._async.requestAnimationFrame(() => this._updatePosition(), this._calloutElement.current);\n  }\n\n  private _getBeakPosition(): React.CSSProperties {\n    const { positions } = this.state;\n    const beakPostionStyle: React.CSSProperties = {\n      ...(positions && positions.beakPosition ? positions.beakPosition.elementPosition : null)\n    };\n\n    if (!beakPostionStyle.top && !beakPostionStyle.bottom && !beakPostionStyle.left && !beakPostionStyle.right) {\n      beakPostionStyle.left = BEAK_ORIGIN_POSITION.left;\n      beakPostionStyle.top = BEAK_ORIGIN_POSITION.top;\n    }\n\n    return beakPostionStyle;\n  }\n\n  private _updatePosition(): void {\n    // Try to update the target, page might have changed\n    this._setTargetWindowAndElement(this._getTarget());\n\n    const { positions } = this.state;\n    const hostElement: HTMLElement | null = this._hostElement.current;\n    const calloutElement: HTMLElement | null = this._calloutElement.current;\n\n    // If we expect a target element to position against, we need to wait until `this._target` is resolved. Otherwise\n    // we can try to position.\n    const expectsTarget = !!this.props.target;\n\n    if (hostElement && calloutElement && (!expectsTarget || this._target)) {\n      let currentProps: IPositionProps | undefined;\n      currentProps = assign(currentProps, this.props);\n      currentProps!.bounds = this._getBounds();\n      currentProps!.target = this._target!;\n      const newPositions: ICalloutPositionedInfo = positionCallout(currentProps!, hostElement, calloutElement, positions);\n\n      // Set the new position only when the positions are not exists or one of the new callout positions are different.\n      // The position should not change if the position is within 2 decimal places.\n      if (\n        (!positions && newPositions) ||\n        (positions && newPositions && !this._arePositionsEqual(positions, newPositions) && this._positionAttempts < 5)\n      ) {\n        // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n        // and we should stop trying to reposition to prevent a stack overflow.\n        this._positionAttempts++;\n        this.setState({\n          positions: newPositions\n        });\n      } else if (this._positionAttempts > 0) {\n        // Only call the onPositioned callback if the callout has been re-positioned at least once.\n        this._positionAttempts = 0;\n        if (this.props.onPositioned) {\n          this.props.onPositioned(this.state.positions);\n        }\n      }\n    }\n  }\n\n  private _getBounds(): IRectangle {\n    if (!this._bounds) {\n      let currentBounds = this.props.bounds;\n\n      if (!currentBounds) {\n        currentBounds = {\n          top: 0 + this.props.minPagePadding!,\n          left: 0 + this.props.minPagePadding!,\n          right: this._targetWindow.innerWidth - this.props.minPagePadding!,\n          bottom: this._targetWindow.innerHeight - this.props.minPagePadding!,\n          width: this._targetWindow.innerWidth - this.props.minPagePadding! * 2,\n          height: this._targetWindow.innerHeight - this.props.minPagePadding! * 2\n        };\n      }\n      this._bounds = currentBounds;\n    }\n    return this._bounds;\n  }\n\n  // Max height should remain as synchronous as possible, which is why it is not done using set state.\n  // It needs to be synchronous since it will impact the ultimate position of the callout.\n  private _getMaxHeight(): number | undefined {\n    if (!this._maxHeight) {\n      if (this.props.directionalHintFixed && this._target) {\n        const beakWidth = this.props.isBeakVisible ? this.props.beakWidth : 0;\n        const gapSpace = this.props.gapSpace ? this.props.gapSpace : 0;\n        // Since the callout cannot measure it's border size it must be taken into account here. Otherwise it will\n        // overlap with the target.\n        const totalGap = gapSpace + beakWidth! + BORDER_WIDTH * 2;\n        this._async.requestAnimationFrame(\n          () => {\n            if (this._target) {\n              this._maxHeight = getMaxHeight(\n                this._target,\n                this.props.directionalHint!,\n                totalGap,\n                this._getBounds(),\n                this.props.coverTarget\n              );\n              this._blockResetHeight = true;\n              this.forceUpdate();\n            }\n          },\n          this._target as Element\n        );\n      } else {\n        this._maxHeight = this._getBounds().height! - BORDER_WIDTH * 2;\n      }\n    }\n    return this._maxHeight!;\n  }\n\n  private _arePositionsEqual(positions: ICalloutPositionedInfo, newPosition: ICalloutPositionedInfo): boolean {\n    return (\n      this._comparePositions(positions.elementPosition, newPosition.elementPosition) &&\n      this._comparePositions(positions.beakPosition.elementPosition, newPosition.beakPosition.elementPosition)\n    );\n  }\n\n  private _comparePositions(oldPositions: IPosition, newPositions: IPosition): boolean {\n    for (const key in newPositions) {\n      // This needs to be checked here and below because there is a linting error if for in does not immediately have an if statement\n      if (newPositions.hasOwnProperty(key)) {\n        const oldPositionEdge = oldPositions[key];\n        const newPositionEdge = newPositions[key];\n\n        if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n          if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  private _setTargetWindowAndElement(target: Element | string | MouseEvent | IPoint | null): void {\n    const currentElement = this._calloutElement.current;\n\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument(currentElement)!;\n        this._target = currentDoc ? (currentDoc.querySelector(target) as Element) : null;\n        this._targetWindow = getWindow(currentElement)!;\n      } else if ((target as MouseEvent).stopPropagation) {\n        this._targetWindow = getWindow((target as MouseEvent).toElement as HTMLElement)!;\n        this._target = target;\n      } else if ((target as Element).getBoundingClientRect) {\n        const targetElement: Element = target as Element;\n        this._targetWindow = getWindow(targetElement)!;\n        this._target = target;\n        // HTMLImgElements can have x and y values. The check for it being a point must go last.\n      } else {\n        this._targetWindow = getWindow(currentElement)!;\n        this._target = target as IPoint;\n      }\n    } else {\n      this._targetWindow = getWindow(currentElement)!;\n    }\n  }\n\n  private _setHeightOffsetEveryFrame(): void {\n    if (this._calloutElement.current && this.props.finalHeight) {\n      this._setHeightOffsetTimer = this._async.requestAnimationFrame(() => {\n        const calloutMainElem = this._calloutElement.current && (this._calloutElement.current.lastChild as HTMLElement);\n\n        if (!calloutMainElem) {\n          return;\n        }\n\n        const cardScrollHeight: number = calloutMainElem.scrollHeight;\n        const cardCurrHeight: number = calloutMainElem.offsetHeight;\n        const scrollDiff: number = cardScrollHeight - cardCurrHeight;\n\n        this.setState({\n          heightOffset: this.state.heightOffset! + scrollDiff\n        });\n\n        if (calloutMainElem.offsetHeight < this.props.finalHeight!) {\n          this._setHeightOffsetEveryFrame();\n        } else {\n          this._async.cancelAnimationFrame(this._setHeightOffsetTimer, this._calloutElement.current);\n        }\n      }, this._calloutElement.current);\n    }\n  }\n\n  private _getTarget(props: ICalloutProps = this.props): Element | string | MouseEvent | IPoint | null {\n    const { target } = props;\n    return target!;\n  }\n}\n","import { HighContrastSelector, IRawStyle, focusClear, getGlobalClassNames } from '../../Styling';\nimport { ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\n\nfunction getBeakStyle(beakWidth?: number): IRawStyle {\n  return {\n    height: beakWidth,\n    width: beakWidth\n  };\n}\n\nconst GlobalClassNames = {\n  container: 'ms-Callout-container',\n  root: 'ms-Callout',\n  beak: 'ms-Callout-beak',\n  beakCurtain: 'ms-Callout-beakCurtain',\n  calloutMain: 'ms-Callout-main'\n};\n\nexport const getStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  const { theme, className, overflowYHidden, calloutWidth, beakWidth, backgroundColor, calloutMaxWidth } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { palette } = theme;\n  return {\n    container: [\n      classNames.container,\n      {\n        position: 'relative'\n      }\n    ],\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'absolute',\n        boxSizing: 'border-box',\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: palette.neutralLight,\n        boxShadow: '0 0 5px 0px rgba(0,0,0,0.4)',\n        selectors: {\n          [HighContrastSelector]: {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'WindowText'\n          }\n        }\n      },\n      focusClear(),\n      className,\n      !!calloutWidth && { width: calloutWidth },\n      !!calloutMaxWidth && { maxWidth: calloutMaxWidth }\n    ],\n    beak: [\n      classNames.beak,\n      {\n        position: 'absolute',\n        backgroundColor: palette.white,\n        boxShadow: 'inherit',\n        border: 'inherit',\n        boxSizing: 'border-box',\n        transform: 'rotate(45deg)'\n      },\n      getBeakStyle(beakWidth),\n      backgroundColor && {\n        backgroundColor: backgroundColor\n      }\n    ],\n    beakCurtain: [\n      classNames.beakCurtain,\n      {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        backgroundColor: palette.white\n      }\n    ],\n    calloutMain: [\n      classNames.calloutMain,\n      {\n        backgroundColor: palette.white,\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        position: 'relative'\n      },\n      overflowYHidden && {\n        overflowY: 'hidden'\n      },\n      backgroundColor && {\n        backgroundColor: backgroundColor\n      }\n    ]\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ICalloutProps, ICalloutContentStyles, ICalloutContentStyleProps } from './Callout.types';\nimport { CalloutContentBase } from './CalloutContent.base';\nimport { getStyles } from './CalloutContent.styles';\n\nexport const CalloutContent: React.StatelessComponent<ICalloutProps> = styled<\n  ICalloutProps,\n  ICalloutContentStyleProps,\n  ICalloutContentStyles\n>(CalloutContentBase, getStyles, undefined, { scope: 'CalloutContent' });\n","import * as React from 'react';\nimport { ICalloutProps } from './Callout.types';\nimport { ICalloutState } from './CalloutContent.base';\nimport { CalloutContent } from './CalloutContent';\nimport { Layer } from '../../Layer';\n\nexport class Callout extends React.Component<ICalloutProps, ICalloutState> {\n  public render(): JSX.Element {\n    const { layerProps, ...rest } = this.props;\n    const content = <CalloutContent {...rest} />;\n    return this.props.doNotLayer ? content : <Layer {...layerProps}>{content}</Layer>;\n  }\n}\n","import * as React from 'react';\nimport { Async } from './Async';\nimport { EventGroup } from './EventGroup';\nimport { IDisposable } from './IDisposable';\nimport { ISettingsMap } from './warn/warn';\nimport { warnConditionallyRequiredProps } from './warn/warnConditionallyRequiredProps';\nimport { warnMutuallyExclusive } from './warn/warnMutuallyExclusive';\nimport { warnDeprecations } from './warn/warnDeprecations';\nimport { initializeFocusRects } from './initializeFocusRects';\nimport { initializeDir } from './initializeDir';\nimport { IRefObject } from './createRef';\nimport { IBaseProps } from './BaseComponent.types';\n\n/**\n * BaseComponent class, which provides basic helpers for all components.\n *\n * @public\n * {@docCategory BaseComponent}\n */\nexport class BaseComponent<TProps extends IBaseProps = {}, TState = {}> extends React.Component<TProps, TState> {\n  /**\n   * @deprecated Use React's error boundaries instead.\n   */\n  // tslint:disable-next-line:no-any\n  public static onError: (errorMessage?: string, ex?: any) => void;\n\n  /**\n   * Controls whether the componentRef prop will be resolved by this component instance. If you are\n   * implementing a passthrough (higher-order component), you would set this to false and pass through\n   * the props to the inner component, allowing it to resolve the componentRef.\n   */\n  protected _skipComponentRefResolution: boolean;\n\n  // tslint:disable:variable-name\n  private __async: Async;\n  private __events: EventGroup;\n  private __disposables: IDisposable[] | null;\n  private __resolves: { [name: string]: (ref: React.ReactNode) => React.ReactNode };\n  private __className: string;\n  // tslint:enable:variable-name\n\n  /**\n   * BaseComponent constructor\n   * @param props - The props for the component.\n   * @param context - The context for the component.\n   */\n  // tslint:disable-next-line:no-any\n  constructor(props: TProps, context?: any) {\n    super(props, context);\n\n    // Ensure basic assumptions about the environment.\n    initializeFocusRects();\n    initializeDir();\n\n    _makeAllSafe(this, BaseComponent.prototype, [\n      'componentDidMount',\n      'shouldComponentUpdate',\n      'getSnapshotBeforeUpdate',\n      'render',\n      'componentDidUpdate',\n      'componentWillUnmount'\n    ]);\n  }\n\n  /**\n   * When the component receives props, make sure the componentRef is updated.\n   */\n  public componentDidUpdate(prevProps: TProps, prevState: TState): void {\n    this._updateComponentRef(prevProps, this.props);\n  }\n\n  /**\n   * When the component has mounted, update the componentRef.\n   */\n  public componentDidMount(): void {\n    this._setComponentRef(this.props.componentRef, this);\n  }\n\n  /**\n   * If we have disposables, dispose them automatically on unmount.\n   */\n  public componentWillUnmount(): void {\n    this._setComponentRef(this.props.componentRef, null);\n\n    if (this.__disposables) {\n      for (let i = 0, len = this._disposables.length; i < len; i++) {\n        let disposable = this.__disposables[i];\n\n        if (disposable.dispose) {\n          disposable.dispose();\n        }\n      }\n      this.__disposables = null;\n    }\n  }\n\n  /**\n   * Gets the object's class name.\n   */\n  public get className(): string {\n    if (!this.__className) {\n      let funcNameRegex = /function (.{1,})\\(/;\n      let results = funcNameRegex.exec(this.constructor.toString());\n\n      this.__className = results && results.length > 1 ? results[1] : '';\n    }\n\n    return this.__className;\n  }\n\n  /**\n   * Allows subclasses to push things to this._disposables to be auto disposed.\n   */\n  protected get _disposables(): IDisposable[] {\n    if (!this.__disposables) {\n      this.__disposables = [];\n    }\n    return this.__disposables;\n  }\n\n  /**\n   * Gets the async instance associated with the component, created on demand. The async instance gives\n   * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks\n   * will be cleared/ignored automatically after unmounting. The helpers within the async object also\n   * preserve the this pointer so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _async(): Async {\n    if (!this.__async) {\n      this.__async = new Async(this);\n      this._disposables.push(this.__async);\n    }\n\n    return this.__async;\n  }\n\n  /**\n   * Gets the event group instance assocaited with the component, created on demand. The event instance\n   * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks\n   * will be automatically disconnected after unmounting. The helpers within the events object also\n   * preserve the this reference so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _events(): EventGroup {\n    if (!this.__events) {\n      this.__events = new EventGroup(this);\n      this._disposables.push(this.__events);\n    }\n\n    return this.__events;\n  }\n\n  /**\n   * Helper to return a memoized ref resolver function.\n   * @param refName - Name of the member to assign the ref to.\n   * @returns A function instance keyed from the given refname.\n   * @deprecated Use `createRef` from React.createRef.\n   */\n  protected _resolveRef(refName: string): (ref: React.ReactNode) => React.ReactNode {\n    if (!this.__resolves) {\n      this.__resolves = {};\n    }\n\n    if (!this.__resolves[refName]) {\n      // tslint:disable-next-line:no-any\n      this.__resolves[refName] = (ref: React.ReactNode) => {\n        // tslint:disable-next-line:no-any\n        return ((this as any)[refName] = ref);\n      };\n    }\n\n    return this.__resolves[refName];\n  }\n\n  /**\n   * Updates the componentRef (by calling it with \"this\" when necessary.)\n   */\n  protected _updateComponentRef(currentProps: IBaseProps, newProps: IBaseProps = {}): void {\n    // currentProps *should* always be defined, but verify that just in case a subclass is manually\n    // calling a lifecycle method with no parameters (which has happened) or other odd usage.\n    if (currentProps && newProps && currentProps.componentRef !== newProps.componentRef) {\n      this._setComponentRef(currentProps.componentRef, null);\n      this._setComponentRef(newProps.componentRef, this);\n    }\n  }\n\n  /**\n   * Warns when a deprecated props are being used.\n   *\n   * @param deprecationMap - The map of deprecations, where key is the prop name and the value is\n   * either null or a replacement prop name.\n   */\n  protected _warnDeprecations(deprecationMap: ISettingsMap<TProps>): void {\n    warnDeprecations(this.className, this.props, deprecationMap);\n  }\n\n  /**\n   * Warns when props which are mutually exclusive with each other are both used.\n   *\n   * @param mutuallyExclusiveMap - The map of mutually exclusive props.\n   */\n  protected _warnMutuallyExclusive(mutuallyExclusiveMap: ISettingsMap<TProps>): void {\n    warnMutuallyExclusive(this.className, this.props, mutuallyExclusiveMap);\n  }\n\n  /**\n   * Warns when props are required if a condition is met.\n   *\n   * @param requiredProps - The name of the props that are required when the condition is met.\n   * @param conditionalPropName - The name of the prop that the condition is based on.\n   * @param condition - Whether the condition is met.\n   */\n  protected _warnConditionallyRequiredProps(requiredProps: string[], conditionalPropName: string, condition: boolean): void {\n    warnConditionallyRequiredProps(this.className, this.props, requiredProps, conditionalPropName, condition);\n  }\n\n  private _setComponentRef<TRefInterface>(ref: IRefObject<TRefInterface> | undefined, value: TRefInterface | null): void {\n    if (!this._skipComponentRefResolution && ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      }\n\n      if (typeof ref === 'object') {\n        // tslint:disable:no-any\n        (ref as any).current = value;\n      }\n    }\n  }\n}\n\n/**\n * Helper to override a given method with a wrapper method that can try/catch the original, but also\n * ensures that the BaseComponent's methods are called before the subclass's. This ensures that\n * componentWillUnmount in the base is called and that things in the _disposables array are disposed.\n */\nfunction _makeAllSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodNames: string[]): void {\n  for (let i = 0, len = methodNames.length; i < len; i++) {\n    _makeSafe(obj, prototype, methodNames[i]);\n  }\n}\n\nfunction _makeSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodName: string): void {\n  // tslint:disable:no-any\n  let classMethod = (obj as any)[methodName];\n  let prototypeMethod = (prototype as any)[methodName];\n  // tslint:enable:no-any\n\n  if (classMethod || prototypeMethod) {\n    // tslint:disable-next-line:no-any\n    (obj as any)[methodName] = function(): any {\n      let retVal;\n\n      if (prototypeMethod) {\n        retVal = prototypeMethod.apply(this, arguments);\n      }\n      if (classMethod !== prototypeMethod) {\n        retVal = classMethod.apply(this, arguments);\n      }\n\n      return retVal;\n    };\n  }\n}\n\n/**\n * Simple constant function for returning null, used to render empty templates in JSX.\n *\n * @public\n */\nexport function nullRender(): JSX.Element | null {\n  return null;\n}\n","import { getWindow } from './dom/getWindow';\n\nexport function initializeDir(win?: Window): void {\n  const w = (win || getWindow()) as (Window & { __hasInitializedDir__: boolean });\n\n  if (w && !w.__hasInitializedDir__) {\n    w.__hasInitializedDir__ = true;\n\n    // Ensure that the documentElement has a 'dir' attribute.\n    const { documentElement } = w.document;\n\n    if (!documentElement.hasAttribute('dir')) {\n      documentElement.setAttribute('dir', 'ltr');\n    }\n  }\n}\n","import * as React from 'react';\nimport { BaseButton, Button } from '../../Button';\nimport { ITheme, IStyle } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBar {}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IMessageBar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IMessageBar>;\n\n  /**\n   * The type of MessageBar to render.\n   * @defaultvalue MessageBarType.info\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * The actions you want to show on the other side.\n   */\n  actions?: JSX.Element;\n\n  /**\n   * A description of the message bar for the benefit of screen readers.\n   * @deprecated Use native prop `aria-label` instead.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Whether the message bar has a dismiss button and its callback.\n   * If null, we don't show a dismiss button.\n   * @defaultvalue null\n   */\n  onDismiss?: (ev?: React.MouseEvent<HTMLButtonElement | BaseButton | HTMLAnchorElement | HTMLDivElement | Button>) => any;\n\n  /**\n   * Determines if the message bar is multi lined.\n   * If false, and the text overflows over buttons or to another line, it is clipped.\n   * @defaultvalue true\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Aria label on dismiss button if onDismiss is defined.\n   */\n  dismissButtonAriaLabel?: string;\n\n  /**\n   * Determines if the message bar text is truncated.\n   * If true, a button will render to toggle between a single line view and multiline view.\n   * This prop is for single line message bars with no buttons only in a limited space scenario.\n   * @defaultvalue false\n   */\n  truncated?: boolean;\n\n  /**\n   * Aria label on overflow button if truncated is defined.\n   */\n  overflowButtonAriaLabel?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the MessageBar.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es).\n   */\n  className?: string;\n\n  /**\n   * Type of the MessageBar.\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * Whether the MessageBar contains a dismiss button.\n   */\n  onDismiss?: boolean;\n\n  /**\n   * Whether the text is truncated.\n   */\n  truncated?: boolean;\n\n  /**\n   * Whether the MessageBar is rendered in multi line (as opposed to single line) mode.\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Whether the single line MessageBar is being expanded.\n   */\n  expandSingleLine?: boolean;\n\n  /**\n   * Whether the MessageBar contains any action elements.\n   */\n  actions?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the element containing the icon, text, and optional dismiss button.\n   */\n  content?: IStyle;\n\n  /**\n   * Style set for the element containing the icon.\n   */\n  iconContainer?: IStyle;\n\n  /**\n   * Style set for the icon.\n   */\n  icon?: IStyle;\n\n  /**\n   * Style set for the element containing the text.\n   */\n  text?: IStyle;\n\n  /**\n   * Style set for the text.\n   */\n  innerText?: IStyle;\n\n  /**\n   * Style set for the optional dismiss button.\n   */\n  dismissal?: IStyle;\n\n  /**\n   * Style set for the icon used to expand and collapse the MessageBar.\n   */\n  expand?: IStyle;\n\n  /**\n   * Style set for the element containing the dismiss button.\n   */\n  dismissSingleLine?: IStyle;\n\n  /**\n   * Style set for the element containing the expand icon.\n   */\n  expandSingleLine?: IStyle;\n\n  /**\n   * Style set for the optional element containing the action elements.\n   */\n  actions?: IStyle;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport enum MessageBarType {\n  /** Info styled MessageBar */\n  info = 0,\n  /** Error styled MessageBar */\n  error = 1,\n  /** Blocked styled MessageBar */\n  blocked = 2,\n  /** SevereWarning styled MessageBar */\n  severeWarning = 3,\n  /** Success styled MessageBar */\n  success = 4,\n  /** Warning styled MessageBar */\n  warning = 5,\n  /**\n   * Deprecated at v0.48.0, to be removed at \\>= v1.0.0. Use `blocked` instead.\n   * @deprecated Use `blocked` instead.\n   */\n  remove = 90000\n}\n","import * as React from 'react';\nimport { BaseComponent, DelayedRender, getId, classNamesFunction, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\n\nconst getClassNames = classNamesFunction<IMessageBarStyleProps, IMessageBarStyles>();\n\nexport interface IMessageBarState {\n  labelId?: string;\n  showContent?: boolean;\n  expandSingleLine?: boolean;\n}\n\nexport class MessageBarBase extends BaseComponent<IMessageBarProps, IMessageBarState> {\n  public static defaultProps: IMessageBarProps = {\n    messageBarType: MessageBarType.info,\n    onDismiss: undefined,\n    isMultiline: true\n  };\n\n  private ICON_MAP = {\n    [MessageBarType.info]: 'Info',\n    [MessageBarType.warning]: 'Info',\n    [MessageBarType.error]: 'ErrorBadge',\n    [MessageBarType.blocked]: 'Blocked2',\n    [MessageBarType.remove]: 'Blocked', // TODO remove deprecated value at >= 1.0.0\n    [MessageBarType.severeWarning]: 'Warning',\n    [MessageBarType.success]: 'Completed'\n  };\n\n  private _classNames: { [key in keyof IMessageBarStyles]: string };\n\n  constructor(props: IMessageBarProps) {\n    super(props);\n\n    this.state = {\n      labelId: getId('MessageBar'),\n      showContent: false,\n      expandSingleLine: false\n    };\n  }\n\n  public render(): JSX.Element {\n    const { isMultiline } = this.props;\n\n    this._classNames = this._getClassNames();\n\n    return isMultiline ? this._renderMultiLine() : this._renderSingleLine();\n  }\n\n  private _getActionsDiv(): JSX.Element | null {\n    if (this.props.actions) {\n      return <div className={this._classNames.actions}>{this.props.actions}</div>;\n    }\n    return null;\n  }\n\n  private _getDismissDiv(): JSX.Element | null {\n    if (this.props.onDismiss) {\n      return (\n        <IconButton\n          disabled={false}\n          className={this._classNames.dismissal}\n          onClick={this.props.onDismiss}\n          iconProps={{ iconName: 'Clear' }}\n          ariaLabel={this.props.dismissButtonAriaLabel}\n        />\n      );\n    }\n    return null;\n  }\n\n  private _getDismissSingleLine(): JSX.Element | null {\n    if (this.props.onDismiss) {\n      return <div className={this._classNames.dismissSingleLine}>{this._getDismissDiv()}</div>;\n    }\n    return null;\n  }\n\n  private _getExpandSingleLine(): JSX.Element | null {\n    if (!this.props.actions && this.props.truncated) {\n      return (\n        <div className={this._classNames.expandSingleLine}>\n          <IconButton\n            disabled={false}\n            className={this._classNames.expand}\n            onClick={this._onClick}\n            iconProps={{ iconName: this.state.expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' }}\n            ariaLabel={this.props.overflowButtonAriaLabel}\n            aria-expanded={this.state.expandSingleLine}\n            aria-controls={this.state.labelId}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private _getIconSpan(): JSX.Element {\n    return (\n      <div className={this._classNames.iconContainer} aria-hidden>\n        <Icon iconName={this.ICON_MAP[this.props.messageBarType!]} className={this._classNames.icon} />\n      </div>\n    );\n  }\n\n  private _renderMultiLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const { theme } = this.props;\n    return (\n      <div style={{ background: theme!.semanticColors.bodyBackground }}>\n        <div className={this._classNames.root}>\n          <div className={this._classNames.content}>\n            {this._getIconSpan()}\n            {this._renderInnerText()}\n            {this._getDismissDiv()}\n          </div>\n          {this._getActionsDiv()}\n        </div>\n      </div>\n    );\n  }\n\n  private _renderSingleLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const { theme } = this.props;\n    return (\n      <div style={{ background: theme!.semanticColors.bodyBackground }}>\n        <div className={this._classNames.root}>\n          <div className={this._classNames.content}>\n            {this._getIconSpan()}\n            {this._renderInnerText()}\n            {this._getExpandSingleLine()}\n            {this._getActionsDiv()}\n            {this._getDismissSingleLine()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderInnerText(): JSX.Element {\n    const nativeProps = getNativeProps(this.props, htmlElementProperties, ['className']);\n\n    return (\n      <div className={this._classNames.text} id={this.state.labelId}>\n        <span className={this._classNames.innerText} role=\"status\" aria-live={this._getAnnouncementPriority()} {...nativeProps}>\n          <DelayedRender>\n            <span>{this.props.children}</span>\n          </DelayedRender>\n        </span>\n      </div>\n    );\n  }\n\n  private _getClassNames(): { [key in keyof IMessageBarStyles]: string } {\n    const { theme, className, messageBarType, onDismiss, actions, truncated, isMultiline } = this.props;\n    const { expandSingleLine } = this.state;\n\n    return getClassNames(this.props.styles!, {\n      theme: theme!,\n      messageBarType: messageBarType || MessageBarType.info,\n      onDismiss: onDismiss !== undefined,\n      actions: actions !== undefined,\n      truncated: truncated,\n      isMultiline: isMultiline,\n      expandSingleLine: expandSingleLine,\n      className\n    });\n  }\n\n  private _getAnnouncementPriority(): 'assertive' | 'polite' {\n    switch (this.props.messageBarType) {\n      case MessageBarType.blocked:\n      case MessageBarType.error:\n      case MessageBarType.severeWarning:\n        return 'assertive';\n    }\n    return 'polite';\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    this.setState({ expandSingleLine: !this.state.expandSingleLine });\n  };\n}\n","import {\n  IStyle,\n  IPalette,\n  ISemanticColors,\n  HighContrastSelector,\n  ScreenWidthMaxSmall,\n  getScreenSelector,\n  getFocusStyle,\n  getGlobalClassNames\n} from '../../Styling';\nimport { IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\n\nconst GlobalClassNames = {\n  root: 'ms-MessageBar',\n  error: 'ms-MessageBar--error',\n  blocked: 'ms-MessageBar--blocked',\n  severeWarning: 'ms-MessageBar--severeWarning',\n  success: 'ms-MessageBar--success',\n  warning: 'ms-MessageBar--warning',\n  multiline: 'ms-MessageBar-multiline',\n  singleline: 'ms-MessageBar-singleline',\n  dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n  expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n  content: 'ms-MessageBar-content',\n  iconContainer: 'ms-MessageBar-icon',\n  text: 'ms-MessageBar-text',\n  innerText: 'ms-MessageBar-innerText',\n  dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n  expandSingleLine: 'ms-MessageBar-expandSingleLine',\n  dismissal: 'ms-MessageBar-dismissal',\n  expand: 'ms-MessageBar-expand',\n  actions: 'ms-MessageBar-actions',\n  actionsSingleline: 'ms-MessageBar-actionsSingleLine'\n};\n\n// Returns the background color of the MessageBar root element based on the type of MessageBar.\nconst getRootBackground = (messageBarType: MessageBarType | undefined, palette: IPalette, semanticColors: ISemanticColors): string => {\n  switch (messageBarType) {\n    case MessageBarType.error:\n    case MessageBarType.blocked:\n      return semanticColors.errorBackground;\n    case MessageBarType.severeWarning:\n      return semanticColors.blockingBackground;\n    case MessageBarType.success:\n      return semanticColors.successBackground;\n    case MessageBarType.warning:\n      return semanticColors.warningBackground;\n  }\n  return palette.neutralLighter;\n};\n\n// Returns the icon color based on the type of MessageBar.\nconst getIconColor = (messageBarType: MessageBarType | undefined, palette: IPalette, semanticColors: ISemanticColors): string => {\n  switch (messageBarType) {\n    case MessageBarType.error:\n    case MessageBarType.blocked:\n    case MessageBarType.severeWarning:\n      return semanticColors.errorText;\n    case MessageBarType.success:\n      return palette.green;\n    case MessageBarType.warning:\n      return semanticColors.warningText;\n  }\n  return palette.neutralSecondary;\n};\n\nexport const getStyles = (props: IMessageBarStyleProps): IMessageBarStyles => {\n  const { theme, className, messageBarType, onDismiss, actions, truncated, isMultiline, expandSingleLine } = props;\n  const { semanticColors, palette, fonts } = theme;\n\n  const SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const dismissalAndExpandIconStyle: IStyle = {\n    fontSize: 12,\n    height: 12,\n    lineHeight: '12px',\n    color: palette.neutralPrimary,\n    selectors: {\n      [HighContrastSelector]: {\n        MsHighContrastAdjust: 'none',\n        color: 'window'\n      }\n    }\n  };\n\n  const dismissalAndExpandSingleLineStyle: IStyle = {\n    display: 'flex',\n    selectors: {\n      '& .ms-Button-icon': dismissalAndExpandIconStyle\n    }\n  };\n\n  const dismissalAndExpandStyle: IStyle = [\n    getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: {\n        outlineOffset: '-4px',\n        outlineColor: 'Window'\n      },\n      borderColor: 'transparent'\n    }),\n    {\n      flexShrink: 0,\n      margin: 8,\n      marginLeft: 0,\n      selectors: {\n        '& .ms-Button-icon': dismissalAndExpandIconStyle,\n        [SmallScreenSelector]: {\n          margin: '0px 0px 0px 8px'\n        }\n      }\n    }\n  ];\n\n  const focusStyle = getFocusStyle(theme, { borderColor: palette.black });\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      messageBarType === MessageBarType.error && classNames.error,\n      messageBarType === MessageBarType.blocked && classNames.blocked,\n      messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n      messageBarType === MessageBarType.success && classNames.success,\n      messageBarType === MessageBarType.warning && classNames.warning,\n      isMultiline ? classNames.multiline : classNames.singleline,\n      !isMultiline && onDismiss && classNames.dismissalSingleLine,\n      !isMultiline && truncated && classNames.expandingSingleLine,\n      {\n        background: getRootBackground(messageBarType, palette, semanticColors),\n        color: palette.neutralPrimary,\n        minHeight: 32,\n        width: '100%',\n        boxSizing: 'border-box',\n        display: 'flex',\n        wordBreak: 'break-word',\n        selectors: {\n          '& .ms-Link': {\n            color: palette.themeDark,\n            ...fonts.small\n          },\n          [HighContrastSelector]: {\n            background: 'windowText',\n            color: 'Window'\n          }\n        }\n      },\n      isMultiline && {\n        flexDirection: 'column'\n      },\n      !isMultiline && {\n        selectors: {\n          [SmallScreenSelector]: {\n            flexDirection: 'column'\n          }\n        }\n      },\n      truncated && {\n        flexDirection: 'column',\n        selectors: {\n          '& .ms-Button-icon': dismissalAndExpandIconStyle\n        }\n      },\n      className\n    ],\n    content: [\n      classNames.content,\n      {\n        display: 'flex',\n        lineHeight: 'normal',\n        width: '100%',\n        boxSizing: 'border-box'\n      },\n      !isMultiline && {\n        selectors: {\n          [SmallScreenSelector]: {\n            flexDirection: 'row'\n          }\n        }\n      },\n      (truncated || isMultiline) && {\n        flexDirection: 'row'\n      }\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        fontSize: 16,\n        minWidth: 16,\n        minHeight: 16,\n        display: 'flex',\n        color: palette.neutralSecondary,\n        flexShrink: 0,\n        margin: 16,\n        marginRight: 0,\n        selectors: {\n          [SmallScreenSelector]: {\n            margin: '8px 0px 8px 8px'\n          }\n        }\n      }\n    ],\n    icon: {\n      color: getIconColor(messageBarType, palette, semanticColors),\n      selectors: {\n        [HighContrastSelector]: {\n          MsHighContrastAdjust: 'none',\n          color: 'window'\n        }\n      }\n    },\n    text: [\n      classNames.text,\n      {\n        minWidth: 0,\n        display: 'flex',\n        flexGrow: 1,\n        margin: '16px 8px',\n        ...fonts.small,\n        selectors: {\n          [SmallScreenSelector]: {\n            margin: '8px 0px 8px 8px'\n          },\n          [HighContrastSelector]: {\n            MsHighContrastAdjust: 'none',\n            color: 'window'\n          }\n        }\n      },\n      !onDismiss && {\n        marginRight: 16,\n        selectors: {\n          [SmallScreenSelector]: {\n            marginRight: 8\n          }\n        }\n      },\n      isMultiline &&\n        actions && {\n          marginBottom: 8,\n          selectors: {\n            [SmallScreenSelector]: {\n              marginBottom: 0\n            }\n          }\n        },\n      !isMultiline &&\n        actions && {\n          selectors: {\n            [SmallScreenSelector]: {\n              marginBottom: 0\n            }\n          }\n        }\n    ],\n    innerText: [\n      classNames.innerText,\n      {\n        lineHeight: 16,\n        selectors: {\n          '& span': {\n            selectors: {\n              '& a': {\n                paddingLeft: 4\n              }\n            }\n          }\n        }\n      },\n      truncated && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap'\n      },\n      !isMultiline && {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n      },\n      !isMultiline &&\n        !truncated && {\n          selectors: {\n            [SmallScreenSelector]: {\n              overflow: 'visible',\n              whiteSpace: 'pre-wrap'\n            }\n          }\n        },\n      expandSingleLine && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap'\n      }\n    ],\n    dismissSingleLine: [classNames.dismissSingleLine, dismissalAndExpandSingleLineStyle],\n    expandSingleLine: [classNames.expandSingleLine, dismissalAndExpandSingleLineStyle],\n    dismissal: [classNames.dismissal, dismissalAndExpandStyle, focusStyle],\n    expand: [classNames.expand, dismissalAndExpandStyle, focusStyle],\n    actions: [\n      isMultiline ? classNames.actions : classNames.actionsSingleline,\n      {\n        display: 'flex',\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        margin: '8px 8px 8px 0',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 8\n          }\n        }\n      },\n      isMultiline && {\n        margin: '0px 12px 12px 0',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 12\n          }\n        }\n      }\n    ]\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { MessageBarBase } from './MessageBar.base';\nimport { getStyles } from './MessageBar.styles';\nimport { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nexport const MessageBar: React.StatelessComponent<IMessageBarProps> = styled<IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles>(\n  MessageBarBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'MessageBar'\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MessageBar,\n  MessageBarType\n} from 'office-ui-fabric-react/lib/MessageBar';\n\nexport const ErrorMessageBar = ({ error, ...props }) => {\n  return (\n    <MessageBar\n      messageBarType={MessageBarType.severeWarning}\n      {...props}\n    >\n      {error}\n    </MessageBar>\n  );\n}\n\nErrorMessageBar.propTypes = {\n  error: PropTypes.string\n}\n\nexport default ErrorMessageBar;","export const KTP_PREFIX = 'ktp';\nexport const KTP_SEPARATOR = '-';\nexport const KTP_FULL_PREFIX = KTP_PREFIX + KTP_SEPARATOR;\nexport const DATAKTP_TARGET = 'data-ktp-target';\nexport const DATAKTP_EXECUTE_TARGET = 'data-ktp-execute-target';\nexport const KTP_LAYER_ID = 'ktp-layer-id';\nexport const KTP_ARIA_SEPARATOR = ', ';\n\n// Events\nexport namespace KeytipEvents {\n  export const KEYTIP_ADDED = 'keytipAdded';\n  export const KEYTIP_REMOVED = 'keytipRemoved';\n  export const KEYTIP_UPDATED = 'keytipUpdated';\n  export const PERSISTED_KEYTIP_ADDED = 'persistedKeytipAdded';\n  export const PERSISTED_KEYTIP_REMOVED = 'persistedKeytipRemoved';\n  export const PERSISTED_KEYTIP_EXECUTE = 'persistedKeytipExecute';\n  export const ENTER_KEYTIP_MODE = 'enterKeytipMode';\n  export const EXIT_KEYTIP_MODE = 'exitKeytipMode';\n}\n","import { IKeytipProps } from '../../Keytip';\nimport { arraysEqual, replaceElement, findIndex, find, EventGroup, getId } from '../../Utilities';\nimport { KeytipEvents } from '../../utilities/keytips/KeytipConstants';\n\nexport interface IUniqueKeytip {\n  uniqueID: string;\n  keytip: IKeytipProps;\n}\n\n/**\n * This class is responsible for handling registering, updating, and unregistering of keytips\n */\nexport class KeytipManager {\n  private static _instance: KeytipManager = new KeytipManager();\n\n  public keytips: IUniqueKeytip[] = [];\n  public persistedKeytips: IUniqueKeytip[] = [];\n\n  // This is (and should be) updated and kept in sync\n  // with the inKeytipMode in KeytipLayer.\n  public inKeytipMode = false;\n\n  // Boolean that gets checked before entering keytip mode by the KeytipLayer\n  // Used for an override in special cases (e.g. Disable entering keytip mode when a modal is shown)\n  public shouldEnterKeytipMode = true;\n\n  /**\n   * Static function to get singleton KeytipManager instance\n   *\n   * @returns {KeytipManager} Singleton KeytipManager instance\n   */\n  public static getInstance(): KeytipManager {\n    return this._instance;\n  }\n\n  /**\n   * Registers a keytip\n   *\n   * @param keytipProps - Keytip to register\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   * @returns {string} Unique ID for this keytip\n   */\n  public register(keytipProps: IKeytipProps, persisted: boolean = false): string {\n    let props: IKeytipProps = keytipProps;\n    if (!persisted) {\n      // Add the overflowSetSequence if necessary\n      props = this.addParentOverflow(keytipProps);\n    }\n    // Create a unique keytip\n    const uniqueKeytip: IUniqueKeytip = this._getUniqueKtp(props);\n    // Add to array\n    persisted ? this.persistedKeytips.push(uniqueKeytip) : this.keytips.push(uniqueKeytip);\n\n    const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_ADDED : KeytipEvents.KEYTIP_ADDED;\n    EventGroup.raise(this, event, {\n      keytip: props,\n      uniqueID: uniqueKeytip.uniqueID\n    });\n\n    return uniqueKeytip.uniqueID;\n  }\n\n  /**\n   * Update a keytip\n   *\n   * @param keytipProps - Keytip to update\n   * @param uniqueID - Unique ID of this keytip\n   */\n  public update(keytipProps: IKeytipProps, uniqueID: string): void {\n    const newKeytipProps = this.addParentOverflow(keytipProps);\n    const uniqueKeytip = this._getUniqueKtp(newKeytipProps, uniqueID);\n    const keytipIndex = findIndex(this.keytips, (ktp: IUniqueKeytip) => {\n      return ktp.uniqueID === uniqueID;\n    });\n    if (keytipIndex >= 0) {\n      // Update everything except 'visible'\n      uniqueKeytip.keytip.visible = this.keytips[keytipIndex].keytip.visible;\n      // Update keytip in this.keytips\n      this.keytips = replaceElement(this.keytips, uniqueKeytip, keytipIndex);\n      // Raise event\n      EventGroup.raise(this, KeytipEvents.KEYTIP_UPDATED, {\n        keytip: uniqueKeytip.keytip,\n        uniqueID: uniqueKeytip.uniqueID\n      });\n    }\n  }\n\n  /**\n   * Unregisters a keytip\n   *\n   * @param keytipToRemove - IKeytipProps of the keytip to remove\n   * @param uniqueID - Unique ID of this keytip\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   */\n  public unregister(keytipToRemove: IKeytipProps, uniqueID: string, persisted: boolean = false): void {\n    if (persisted) {\n      // Remove keytip from this.persistedKeytips\n      this.persistedKeytips = this.persistedKeytips.filter((uniqueKtp: IUniqueKeytip) => {\n        return uniqueKtp.uniqueID !== uniqueID;\n      });\n    } else {\n      // Remove keytip from this.keytips\n      this.keytips = this.keytips.filter((uniqueKtp: IUniqueKeytip) => {\n        return uniqueKtp.uniqueID !== uniqueID;\n      });\n    }\n\n    const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_REMOVED : KeytipEvents.KEYTIP_REMOVED;\n    EventGroup.raise(this, event, {\n      keytip: keytipToRemove,\n      uniqueID: uniqueID\n    });\n  }\n\n  /**\n   * Manual call to enter keytip mode\n   */\n  public enterKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.ENTER_KEYTIP_MODE);\n  }\n\n  /**\n   * Manual call to exit keytip mode\n   */\n  public exitKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.EXIT_KEYTIP_MODE);\n  }\n\n  /**\n   * Gets all IKeytipProps from this.keytips\n   *\n   * @returns {IKeytipProps[]} All keytips stored in the manager\n   */\n  public getKeytips(): IKeytipProps[] {\n    return this.keytips.map((uniqueKeytip: IUniqueKeytip) => {\n      return uniqueKeytip.keytip;\n    });\n  }\n\n  /**\n   * Adds the overflowSetSequence to the keytipProps if its parent keytip also has it\n   *\n   * @param keytipProps - Keytip props to add overflowSetSequence to if necessary\n   * @returns {IKeytipProps} - Modified keytip props, if needed to be modified\n   */\n  public addParentOverflow(keytipProps: IKeytipProps): IKeytipProps {\n    const fullSequence = [...keytipProps.keySequences];\n    fullSequence.pop();\n    if (fullSequence.length !== 0) {\n      const parentKeytip = find(this.getKeytips(), (keytip: IKeytipProps) => {\n        return arraysEqual(fullSequence, keytip.keySequences);\n      });\n      if (parentKeytip && parentKeytip.overflowSetSequence) {\n        return {\n          ...keytipProps,\n          overflowSetSequence: parentKeytip.overflowSetSequence\n        };\n      }\n    }\n    return keytipProps;\n  }\n\n  /**\n   * Public function to bind for overflow items that have a submenu\n   *\n   * @param overflowButtonSequences\n   * @param keytipSequences\n   */\n  public menuExecute(overflowButtonSequences: string[], keytipSequences: string[]) {\n    EventGroup.raise(this, KeytipEvents.PERSISTED_KEYTIP_EXECUTE, {\n      overflowButtonSequences,\n      keytipSequences\n    });\n  }\n\n  /**\n   * Creates an IUniqueKeytip object\n   *\n   * @param keytipProps - IKeytipProps\n   * @param uniqueID - Unique ID, will default to the next unique ID if not passed\n   * @returns {IUniqueKeytip} IUniqueKeytip object\n   */\n  private _getUniqueKtp(keytipProps: IKeytipProps, uniqueID: string = getId()): IUniqueKeytip {\n    return { keytip: { ...keytipProps }, uniqueID };\n  }\n}\n","import { KTP_SEPARATOR, KTP_PREFIX, DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET, KTP_LAYER_ID } from './KeytipConstants';\nimport { addElementAtIndex } from '../../Utilities';\n\n/**\n * Converts a whole set of KeySequences into one keytip ID, which will be the ID for the last keytip sequence specified\n * keySequences should not include the initial keytip 'start' sequence.\n *\n * @param keySequences - Full path of IKeySequences for one keytip.\n * @returns {string} String to use for the keytip ID.\n */\nexport function sequencesToID(keySequences: string[]): string {\n  return keySequences.reduce((prevValue: string, keySequence: string): string => {\n    return prevValue + KTP_SEPARATOR + keySequence.split('').join(KTP_SEPARATOR);\n  }, KTP_PREFIX);\n}\n\n/**\n * Merges an overflow sequence with a key sequence.\n *\n * @param keySequences - Full sequence for one keytip.\n * @param overflowKeySequences - Full overflow keytip sequence.\n * @returns {string[]} Sequence that will be used by the keytip when in the overflow.\n */\nexport function mergeOverflows(keySequences: string[], overflowKeySequences: string[]): string[] {\n  const overflowSequenceLen = overflowKeySequences.length;\n  const overflowSequence = [...overflowKeySequences].pop();\n  const newKeySequences = [...keySequences];\n  return addElementAtIndex(newKeySequences, overflowSequenceLen - 1, overflowSequence!);\n}\n\n/**\n * Constructs the data-ktp-target attribute selector from a full key sequence.\n *\n * @param keySequences - Full string[] for a Keytip.\n * @returns {string} String selector to use to query for the keytip target.\n */\nexport function ktpTargetFromSequences(keySequences: string[]): string {\n  return '[' + DATAKTP_TARGET + '=\"' + sequencesToID(keySequences) + '\"]';\n}\n\n/**\n * Constructs the data-ktp-execute-target attribute selector from a keytip ID.\n *\n * @param keytipId - ID of the Keytip.\n * @returns {string} String selector to use to query for the keytip execute target.\n */\nexport function ktpTargetFromId(keytipId: string): string {\n  return '[' + DATAKTP_EXECUTE_TARGET + '=\"' + keytipId + '\"]';\n}\n\n/**\n * Gets the aria-describedby value to put on the component with this keytip.\n *\n * @param keySequences - KeySequences of the keytip.\n * @returns {string} The aria-describedby value to set on the component with this keytip.\n */\nexport function getAriaDescribedBy(keySequences: string[]): string {\n  const describedby = ' ' + KTP_LAYER_ID;\n  if (!keySequences.length) {\n    // Return just the layer ID\n    return describedby;\n  }\n\n  return describedby + ' ' + sequencesToID(keySequences);\n}\n","import * as React from 'react';\nimport { IRenderComponent, mergeAriaAttributeValues } from '../../Utilities';\nimport { IKeytipDataProps } from './KeytipData.types';\nimport { IKeytipProps } from '../../Keytip';\nimport { KeytipManager } from '../../utilities/keytips/KeytipManager';\nimport { mergeOverflows, sequencesToID, getAriaDescribedBy } from '../../utilities/keytips/KeytipUtils';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport class KeytipData extends React.Component<IKeytipDataProps & IRenderComponent<{}>, {}> {\n  private _uniqueId: string;\n  private _keytipManager: KeytipManager = KeytipManager.getInstance();\n\n  public componentDidMount() {\n    // Register Keytip in KeytipManager\n    if (this.props.keytipProps) {\n      this._uniqueId = this._keytipManager.register(this._getKtpProps());\n    }\n  }\n\n  public componentWillUnmount() {\n    // Unregister Keytip in KeytipManager\n    this.props.keytipProps && this._keytipManager.unregister(this._getKtpProps(), this._uniqueId);\n  }\n\n  public componentDidUpdate() {\n    // Update Keytip in KeytipManager\n    this.props.keytipProps && this._keytipManager.update(this._getKtpProps(), this._uniqueId);\n  }\n\n  public render(): JSX.Element {\n    const { children, keytipProps, ariaDescribedBy } = this.props;\n    let nativeKeytipProps: any = {};\n    if (keytipProps) {\n      nativeKeytipProps = this._getKtpAttrs(keytipProps, ariaDescribedBy);\n    }\n    return children(nativeKeytipProps);\n  }\n\n  private _getKtpProps(): IKeytipProps {\n    return {\n      disabled: this.props.disabled,\n      ...this.props.keytipProps!\n    };\n  }\n\n  /**\n   * Gets the aria- and data- attributes to attach to the component\n   * @param keytipProps - props for Keytip\n   * @param describedByPrepend - ariaDescribedBy value to prepend\n   */\n  private _getKtpAttrs(keytipProps: IKeytipProps, describedByPrepend?: string): any {\n    if (keytipProps) {\n      // Add the parent overflow sequence if necessary\n      const newKeytipProps = this._keytipManager.addParentOverflow(keytipProps);\n\n      // Construct aria-describedby and data-ktp-id attributes and return\n      const ariaDescribedBy = getAriaDescribedBy(newKeytipProps.keySequences);\n      let keySequences = [...newKeytipProps.keySequences];\n      if (newKeytipProps.overflowSetSequence) {\n        keySequences = mergeOverflows(keySequences, newKeytipProps.overflowSetSequence);\n      }\n      const ktpId = sequencesToID(keySequences);\n\n      return {\n        'aria-describedby': mergeAriaAttributeValues(describedByPrepend, ariaDescribedBy),\n        'data-ktp-target': ktpId,\n        'data-ktp-execute-target': ktpId\n      };\n    }\n    return undefined;\n  }\n}\n","import * as React from 'react';\nimport { IImageProps } from '../Image/Image.types';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IBaseProps, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n */\nexport enum IconType {\n  /**\n   * Render using the fabric icon font.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  default = 0,\n\n  /**\n   * Render using an image, where imageProps would be used.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  image = 1,\n\n  /**\n   * Deprecated, use `default`.\n   * @deprecated Use `default`.\n   */\n  Default = 100000,\n\n  /**\n   * Deprecated, use `image`.\n   * @deprecated Use `image`.\n   */\n  Image = 100001\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconProps extends IBaseProps, React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * The aria label of the icon for the benefit of screen readers.\n   * @deprecated Use the native prop `aria-label`\n   */\n  ariaLabel?: string;\n\n  /**\n   * The type of icon to render (image or icon font).\n   * @deprecated Inferred based on the presence of `imageProps`\n   */\n  iconType?: IconType;\n\n  /**\n   * If rendering an image icon, these props will be passed to the Image component.\n   */\n  imageProps?: IImageProps;\n\n  /**\n   * If rendering an image icon, this component will be rendered in the event that loading the image fails.\n   */\n  imageErrorAs?: React.ComponentType<IImageProps>;\n\n  /**\n   * Gets the styles for an Icon.\n   */\n  styles?: IStyleFunctionOrObject<IIconStyleProps, IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyleProps {\n  className?: string;\n  iconClassName?: string;\n  isPlaceholder: boolean;\n  isImage: boolean;\n  styles?: Partial<IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyles {\n  root?: IStyle;\n\n  /**\n   * Deprecated. Use `root`.\n   * @deprecated Use `root`.\n   */\n  imageContainer?: IStyle;\n}\n\n/**\n * Props for a basic icon component which only supports font glyphs and isn't themeable.\n * {@docCategory Icon}\n */\nexport interface IFontIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n\n/**\n * Props for a basic image icon component which doesn't directly provide image load error handling\n * and isn't themeable.\n * {@docCategory Icon}\n */\nexport interface IImageIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Props passed to the Image component.\n   */\n  imageProps: IImageProps;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n","import * as React from 'react';\n\nimport { IIconProps, IconType, IIconStyleProps, IIconStyles } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { ImageLoadState, IImageProps } from '../Image/Image.types';\nimport { getNativeProps, htmlElementProperties, classNamesFunction } from '../../Utilities';\nimport { getIconContent } from './FontIcon';\n\nexport interface IIconState {\n  imageLoadError: boolean;\n}\n\nconst getClassNames = classNamesFunction<IIconStyleProps, IIconStyles>({\n  disableCaching: true\n});\n\nexport class IconBase extends React.Component<IIconProps, IIconState> {\n  constructor(props: IIconProps) {\n    super(props);\n    this.state = {\n      imageLoadError: false\n    };\n  }\n\n  public render() {\n    const { className, styles, iconName, imageErrorAs, theme } = this.props;\n    const isPlaceholder = typeof iconName === 'string' && iconName.length === 0;\n    const isImage = this.props.iconType === IconType.image || this.props.iconType === IconType.Image || !!this.props.imageProps;\n    const { iconClassName, children } = getIconContent(iconName);\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      iconClassName,\n      isImage,\n      isPlaceholder\n    });\n\n    const RootType = isImage ? 'div' : 'i';\n    const nativeProps = getNativeProps(this.props, htmlElementProperties, ['aria-label']);\n    const { imageLoadError } = this.state;\n    const imageProps: IImageProps = {\n      ...this.props.imageProps,\n      onLoadingStateChange: this.onImageLoadingStateChange\n    };\n    const ImageType = (imageLoadError && imageErrorAs) || Image;\n\n    const ariaLabel = this.props.ariaLabel || this.props['aria-label'];\n    const containerProps = ariaLabel\n      ? {\n          'aria-label': ariaLabel\n        }\n      : {\n          role: 'presentation',\n          'aria-hidden': imageProps.alt || imageProps['aria-labelledby'] ? false : true\n        };\n\n    return (\n      <RootType data-icon-name={iconName} {...containerProps} {...nativeProps} className={classNames.root}>\n        {isImage ? <ImageType {...imageProps} /> : children}\n      </RootType>\n    );\n  }\n\n  private onImageLoadingStateChange = (state: ImageLoadState): void => {\n    if (this.props.imageProps && this.props.imageProps.onLoadingStateChange) {\n      this.props.imageProps.onLoadingStateChange(state);\n    }\n    if (state === ImageLoadState.error) {\n      this.setState({ imageLoadError: true });\n    }\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\nimport { IconBase } from './Icon.base';\nimport { getStyles } from './Icon.styles';\n\n/**\n * Icons are used for rendering an individual's avatar, presence and details.\n * They are used within the PeoplePicker components.\n */\nexport const Icon: React.StatelessComponent<IIconProps> = styled<IIconProps, IIconStyleProps, IIconStyles>(\n  IconBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Icon'\n  },\n  true\n);\n","import { KeyCodes } from './KeyCodes';\nimport { getDocument } from './dom/getDocument';\nimport { getItem, setItem } from './sessionStorage';\nimport { setRTL as mergeStylesSetRTL } from '@uifabric/merge-styles';\n\nconst RTL_LOCAL_STORAGE_KEY = 'isRTL';\n\n// Default to undefined so that we initialize on first read.\nlet _isRTL: boolean | undefined;\n\n/**\n * Gets the rtl state of the page (returns true if in rtl.)\n */\nexport function getRTL(): boolean {\n  if (_isRTL === undefined) {\n    // Fabric supports persisting the RTL setting between page refreshes via session storage\n    let savedRTL = getItem(RTL_LOCAL_STORAGE_KEY);\n    if (savedRTL !== null) {\n      _isRTL = savedRTL === '1';\n      setRTL(_isRTL);\n    }\n\n    let doc = getDocument();\n    if (_isRTL === undefined && doc) {\n      _isRTL = ((doc.body && doc.body.getAttribute('dir')) || doc.documentElement.getAttribute('dir')) === 'rtl';\n      mergeStylesSetRTL(_isRTL);\n    }\n  }\n\n  return !!_isRTL;\n}\n\n/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n */\nexport function setRTL(isRTL: boolean, persistSetting: boolean = false): void {\n  let doc = getDocument();\n  if (doc) {\n    doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\n  }\n\n  if (persistSetting) {\n    setItem(RTL_LOCAL_STORAGE_KEY, isRTL ? '1' : '0');\n  }\n\n  _isRTL = isRTL;\n  mergeStylesSetRTL(_isRTL);\n}\n\n/**\n * Returns the given key, but flips right/left arrows if necessary.\n */\nexport function getRTLSafeKeyCode(key: number): number {\n  if (getRTL()) {\n    if (key === KeyCodes.left) {\n      key = KeyCodes.right;\n    } else if (key === KeyCodes.right) {\n      key = KeyCodes.left;\n    }\n  }\n\n  return key;\n}\n","/**\n * Fetches an item from session storage without throwing an exception\n * @param key The key of the item to fetch from session storage\n */\nexport function getItem(key: string): string | null {\n  let result = null;\n  try {\n    result = window.sessionStorage.getItem(key);\n  } catch (e) {\n    /* Eat the exception */\n  }\n  return result;\n}\n\n/**\n * Inserts an item into session storage without throwing an exception\n * @param key The key of the item to add to session storage\n * @param data The data to put into session storage\n */\nexport function setItem(key: string, data: string): void {\n  try {\n    window.sessionStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}\n","import { elementContainsAttribute } from './dom/elementContainsAttribute';\nimport { elementContains } from './dom/elementContains';\nimport { getParent } from './dom/getParent';\nimport { getWindow } from './dom/getWindow';\nimport { getDocument } from './dom/getDocument';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_VISIBLE_ATTRIBUTE = 'data-is-visible';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst FOCUSZONE_SUB_ATTRIBUTE = 'data-is-sub-focuszone';\n\n/**\n * Gets the first focusable element.\n *\n * @public\n */\nexport function getFirstFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean\n): HTMLElement | null {\n  return getNextElement(\n    rootElement,\n    currentElement,\n    true /*checkNode*/,\n    false /*suppressParentTraversal*/,\n    false /*suppressChildTraversal*/,\n    includeElementsInFocusZones\n  );\n}\n\n/**\n * Gets the last focusable element.\n *\n * @public\n */\nexport function getLastFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean\n): HTMLElement | null {\n  return getPreviousElement(\n    rootElement,\n    currentElement,\n    true /*checkNode*/,\n    false /*suppressParentTraversal*/,\n    true /*traverseChildren*/,\n    includeElementsInFocusZones\n  );\n}\n\n/**\n * Gets the first tabbable element.\n * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.\n * @param rootElement - The parent element to search beneath.\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\n * and iteration continues forward.  Typical use passes rootElement.firstChild.\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n * @public\n */\nexport function getFirstTabbable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n  checkNode: boolean = true\n): HTMLElement | null {\n  return getNextElement(\n    rootElement,\n    currentElement,\n    checkNode,\n    false /*suppressParentTraversal*/,\n    false /*suppressChildTraversal*/,\n    includeElementsInFocusZones,\n    false /*allowFocusRoot*/,\n    true /*tabbable*/\n  );\n}\n\n/**\n * Gets the last tabbable element.\n * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.\n * @param rootElement - The parent element to search beneath.\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\n * and iteration continues in reverse.  Typical use passes rootElement.lastChild.\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n * @public\n */\nexport function getLastTabbable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n  checkNode: boolean = true\n): HTMLElement | null {\n  return getPreviousElement(\n    rootElement,\n    currentElement,\n    checkNode,\n    false /*suppressParentTraversal*/,\n    true /*traverseChildren*/,\n    includeElementsInFocusZones,\n    false /*allowFocusRoot*/,\n    true /*tabbable*/\n  );\n}\n\n/**\n * Attempts to focus the first focusable element that is a child or child's child of the rootElement.\n *\n * @public\n * @param rootElement - Element to start the search for a focusable child.\n * @returns True if focus was set, false if it was not.\n */\nexport function focusFirstChild(rootElement: HTMLElement): boolean {\n  let element: HTMLElement | null = getNextElement(rootElement, rootElement, true, false, false, true);\n\n  if (element) {\n    focusAsync(element);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Traverse to find the previous element.\n * If tabbable is true, the element must have tabIndex != -1.\n *\n * @public\n */\nexport function getPreviousElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement | null,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  traverseChildren?: boolean,\n  includeElementsInFocusZones?: boolean,\n  allowFocusRoot?: boolean,\n  tabbable?: boolean\n): HTMLElement | null {\n  if (!currentElement || (!allowFocusRoot && currentElement === rootElement)) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check its children.\n  if (\n    traverseChildren &&\n    isCurrentElementVisible &&\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\n  ) {\n    const childMatch = getPreviousElement(\n      rootElement,\n      currentElement.lastElementChild as HTMLElement,\n      true,\n      true,\n      true,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable\n    );\n\n    if (childMatch) {\n      if ((tabbable && isElementTabbable(childMatch, true)) || !tabbable) {\n        return childMatch;\n      }\n\n      const childMatchSiblingMatch = getPreviousElement(\n        rootElement,\n        childMatch.previousElementSibling as HTMLElement,\n        true,\n        true,\n        true,\n        includeElementsInFocusZones,\n        allowFocusRoot,\n        tabbable\n      );\n      if (childMatchSiblingMatch) {\n        return childMatchSiblingMatch;\n      }\n\n      let childMatchParent = childMatch.parentElement;\n\n      // At this point if we have not found any potential matches\n      // start looking at the rest of the subtree under the currentParent.\n      // NOTE: We do not want to recurse here because doing so could\n      // cause elements to get skipped.\n      while (childMatchParent && childMatchParent !== currentElement) {\n        const childMatchParentMatch = getPreviousElement(\n          rootElement,\n          childMatchParent.previousElementSibling as HTMLElement,\n          true,\n          true,\n          true,\n          includeElementsInFocusZones,\n          allowFocusRoot,\n          tabbable\n        );\n\n        if (childMatchParentMatch) {\n          return childMatchParentMatch;\n        }\n\n        childMatchParent = childMatchParent.parentElement;\n      }\n    }\n  }\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\n    return currentElement;\n  }\n\n  // Check its previous sibling.\n  const siblingMatch = getPreviousElement(\n    rootElement,\n    currentElement.previousElementSibling as HTMLElement,\n    true,\n    true,\n    true,\n    includeElementsInFocusZones,\n    allowFocusRoot,\n    tabbable\n  );\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  // Check its parent.\n  if (!suppressParentTraversal) {\n    return getPreviousElement(\n      rootElement,\n      currentElement.parentElement,\n      true,\n      false,\n      false,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable\n    );\n  }\n\n  return null;\n}\n\n/**\n * Traverse to find the next focusable element.\n * If tabbable is true, the element must have tabIndex != -1.\n *\n * @public\n * @param checkNode - Include currentElement in search when true.\n */\nexport function getNextElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement | null,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  suppressChildTraversal?: boolean,\n  includeElementsInFocusZones?: boolean,\n  allowFocusRoot?: boolean,\n  tabbable?: boolean\n): HTMLElement | null {\n  if (!currentElement || (currentElement === rootElement && suppressChildTraversal && !allowFocusRoot)) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\n    return currentElement;\n  }\n\n  // Check its children.\n  if (\n    !suppressChildTraversal &&\n    isCurrentElementVisible &&\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\n  ) {\n    const childMatch = getNextElement(\n      rootElement,\n      currentElement.firstElementChild as HTMLElement,\n      true,\n      true,\n      false,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable\n    );\n\n    if (childMatch) {\n      return childMatch;\n    }\n  }\n\n  if (currentElement === rootElement) {\n    return null;\n  }\n\n  // Check its sibling.\n  const siblingMatch = getNextElement(\n    rootElement,\n    currentElement.nextElementSibling as HTMLElement,\n    true,\n    true,\n    false,\n    includeElementsInFocusZones,\n    allowFocusRoot,\n    tabbable\n  );\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  if (!suppressParentTraversal) {\n    return getNextElement(\n      rootElement,\n      currentElement.parentElement,\n      false,\n      false,\n      true,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable\n    );\n  }\n\n  return null;\n}\n\n/**\n * Determines if an element is visible.\n *\n * @public\n */\nexport function isElementVisible(element: HTMLElement | undefined | null): boolean {\n  // If the element is not valid, return false.\n  if (!element || !element.getAttribute) {\n    return false;\n  }\n\n  const visibilityAttribute = element.getAttribute(IS_VISIBLE_ATTRIBUTE);\n\n  // If the element is explicitly marked with the visibility attribute, return that value as boolean.\n  if (visibilityAttribute !== null && visibilityAttribute !== undefined) {\n    return visibilityAttribute === 'true';\n  }\n\n  // Fallback to other methods of determining actual visibility.\n  return (\n    element.offsetHeight !== 0 ||\n    element.offsetParent !== null ||\n    // tslint:disable-next-line:no-any\n    (element as any).isVisible === true\n  ); // used as a workaround for testing.\n}\n\n/**\n * Determines if an element can receive focus programmatically or via a mouse click.\n * If checkTabIndex is true, additionally checks to ensure the element can be focused with the tab key, meaning tabIndex != -1.\n *\n * @public\n */\nexport function isElementTabbable(element: HTMLElement, checkTabIndex?: boolean): boolean {\n  // If this element is null or is disabled, it is not considered tabbable.\n  if (!element || (element as HTMLButtonElement).disabled) {\n    return false;\n  }\n\n  let tabIndex = 0;\n  let tabIndexAttributeValue = null;\n\n  if (element && element.getAttribute) {\n    tabIndexAttributeValue = element.getAttribute('tabIndex');\n\n    if (tabIndexAttributeValue) {\n      tabIndex = parseInt(tabIndexAttributeValue, 10);\n    }\n  }\n\n  let isFocusableAttribute = element.getAttribute ? element.getAttribute(IS_FOCUSABLE_ATTRIBUTE) : null;\n  let isTabIndexSet = tabIndexAttributeValue !== null && tabIndex >= 0;\n\n  const result =\n    !!element &&\n    isFocusableAttribute !== 'false' &&\n    (element.tagName === 'A' ||\n      element.tagName === 'BUTTON' ||\n      element.tagName === 'INPUT' ||\n      element.tagName === 'TEXTAREA' ||\n      isFocusableAttribute === 'true' ||\n      isTabIndexSet);\n\n  return checkTabIndex ? tabIndex !== -1 && result : result;\n}\n\n/**\n * Determines if a given element is a focus zone.\n *\n * @public\n */\nexport function isElementFocusZone(element?: HTMLElement): boolean {\n  return !!(element && element.getAttribute && !!element.getAttribute(FOCUSZONE_ID_ATTRIBUTE));\n}\n\n/**\n * Determines if a given element is a focus sub zone.\n *\n * @public\n */\nexport function isElementFocusSubZone(element?: HTMLElement): boolean {\n  return !!(element && element.getAttribute && element.getAttribute(FOCUSZONE_SUB_ATTRIBUTE) === 'true');\n}\n\n/**\n * Determines if an element, or any of its children, contain focus.\n *\n * @public\n */\nexport function doesElementContainFocus(element: HTMLElement): boolean {\n  let document = getDocument(element);\n  let currentActiveElement: HTMLElement | undefined = document && (document.activeElement as HTMLElement);\n  if (currentActiveElement && elementContains(element, currentActiveElement)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Determines if an, or any of its ancestors, sepcificies that it doesn't want focus to wrap\n * @param element - element to start searching from\n * @param noWrapDataAttribute - the no wrap data attribute to match (either)\n * @returns true if focus should wrap, false otherwise\n */\nexport function shouldWrapFocus(element: HTMLElement, noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap'): boolean {\n  return elementContainsAttribute(element, noWrapDataAttribute) === 'true' ? false : true;\n}\n\nlet targetToFocusOnNextRepaint: HTMLElement | { focus: () => void } | null | undefined = undefined;\n\n/**\n * Sets focus to an element asynchronously. The focus will be set at the next browser repaint,\n * meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame,\n * only the latest called focusAsync element will actually be focused\n * @param element - The element to focus\n */\nexport function focusAsync(element: HTMLElement | { focus: () => void } | undefined | null): void {\n  if (element) {\n    // An element was already queued to be focused, so replace that one with the new element\n    if (targetToFocusOnNextRepaint) {\n      targetToFocusOnNextRepaint = element;\n      return;\n    }\n\n    targetToFocusOnNextRepaint = element;\n\n    const win = getWindow(element as Element);\n\n    if (win) {\n      // element.focus() is a no-op if the element is no longer in the DOM, meaning this is always safe\n      win.requestAnimationFrame(() => {\n        targetToFocusOnNextRepaint && targetToFocusOnNextRepaint.focus();\n\n        // We are done focusing for this frame, so reset the queued focus element\n        targetToFocusOnNextRepaint = undefined;\n      });\n    }\n  }\n}\n\n/**\n * Finds the closest focusable element via an index path from a parent. See\n * `getElementIndexPath` for getting an index path from an element to a child.\n */\nexport function getFocusableByIndexPath(parent: HTMLElement, path: number[]): HTMLElement | undefined {\n  let element = parent;\n\n  for (const index of path) {\n    const nextChild = element.children[Math.min(index, element.children.length - 1)] as HTMLElement;\n\n    if (!nextChild) {\n      break;\n    }\n    element = nextChild;\n  }\n\n  element =\n    isElementTabbable(element) && isElementVisible(element)\n      ? element\n      : getNextElement(parent, element, true) || getPreviousElement(parent, element)!;\n\n  return element as HTMLElement;\n}\n\n/**\n * Finds the element index path from a parent element to a child element.\n *\n * If you had this node structure: \"A has children [B, C] and C has child D\",\n * the index path from A to D would be [1, 0], or `parent.chidren[1].children[0]`.\n */\nexport function getElementIndexPath(fromElement: HTMLElement, toElement: HTMLElement): number[] {\n  const path: number[] = [];\n\n  while (toElement && fromElement && toElement !== fromElement) {\n    const parent = getParent(toElement, true);\n\n    if (parent === null) {\n      return [];\n    }\n\n    path.unshift(Array.prototype.indexOf.call(parent.children, toElement));\n    toElement = parent;\n  }\n\n  return path;\n}\n","import { findElementRecursive } from './findElementRecursive';\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string): string | null {\n  let elementMatch = findElementRecursive(element, (testElement: HTMLElement) => testElement.hasAttribute(attribute));\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n","/** Raises a click event. */\nexport function raiseClick(target: Element): void {\n  const event = createNewEvent('MouseEvents');\n  event.initEvent('click', true, true);\n  target.dispatchEvent(event);\n}\n\nfunction createNewEvent(eventName: string): Event {\n  let event;\n  if (typeof Event === 'function') {\n    // Chrome, Opera, Firefox\n    event = new Event(eventName);\n  } else {\n    // IE\n    event = document.createEvent('Event');\n    event.initEvent(eventName, true, true);\n  }\n  return event;\n}\n","import * as React from 'react';\nimport { FocusZoneDirection, FocusZoneTabbableElements, IFocusZone, IFocusZoneProps } from './FocusZone.types';\nimport {\n  KeyCodes,\n  css,\n  elementContains,\n  getDocument,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  getId,\n  getNativeProps,\n  getNextElement,\n  getParent,\n  getPreviousElement,\n  getRTL,\n  htmlElementProperties,\n  initializeComponentRef,\n  isElementFocusSubZone,\n  isElementFocusZone,\n  isElementTabbable,\n  on,\n  raiseClick,\n  shouldWrapFocus,\n  warnDeprecations,\n  portalContainsElement,\n  IPoint\n} from '../../Utilities';\nimport { mergeStyles } from '@uifabric/merge-styles';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_ENTER_DISABLED_ATTRIBUTE = 'data-disable-click-on-enter';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nlet focusZoneStyles: string;\n\nconst focusZoneClass: string = 'ms-FocusZone';\n\n// Helper function that will return a class for when the root is focused\nfunction getRootClass(): string {\n  if (!focusZoneStyles) {\n    focusZoneStyles = mergeStyles(\n      {\n        selectors: {\n          ':focus': {\n            outline: 'none'\n          }\n        }\n      },\n      focusZoneClass\n    );\n  }\n  return focusZoneStyles;\n}\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\nconst _outerZones: Set<FocusZone> = new Set();\n\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\nexport class FocusZone extends React.Component<IFocusZoneProps> implements IFocusZone {\n  public static defaultProps: IFocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional\n  };\n\n  private _disposables: Function[] = [];\n  private _root = React.createRef<HTMLElement>();\n  private _id: string;\n\n  /** The most recently focused child element. */\n  private _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  private _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  private _isParked: boolean;\n\n  /** The child element with tabindex=0. */\n  private _defaultFocusElement: HTMLElement | null;\n  private _focusAlignment: IPoint;\n  private _isInnerZone: boolean;\n  private _parkedTabIndex: string | null | undefined;\n\n  /** Used to allow us to move to next focusable element even when we're focusing on a input element when pressing tab */\n  private _processingTabKey: boolean;\n\n  /** Used for testing purposes only. */\n  public static getOuterZones(): number {\n    return _outerZones.size;\n  }\n\n  constructor(props: IFocusZoneProps) {\n    super(props);\n    // Manage componentRef resolution.\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('FocusZone', props, {\n        rootProps: undefined,\n        allowTabKey: 'handleTabKey',\n        elementType: 'as',\n        ariaDescribedBy: 'aria-describedby',\n        ariaLabelledBy: 'aria-labelledby'\n      });\n    }\n\n    this._id = getId('FocusZone');\n\n    this._focusAlignment = {\n      x: 0,\n      y: 0\n    };\n\n    this._processingTabKey = false;\n  }\n\n  public componentDidMount(): void {\n    const { current: root } = this._root;\n\n    _allInstances[this._id] = this;\n\n    if (root) {\n      const windowElement = root.ownerDocument!.defaultView;\n\n      let parentElement = getParent(root, ALLOW_VIRTUAL_ELEMENTS);\n\n      while (parentElement && parentElement !== document.body && parentElement.nodeType === 1) {\n        if (isElementFocusZone(parentElement)) {\n          this._isInnerZone = true;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n      }\n\n      if (!this._isInnerZone) {\n        _outerZones.add(this);\n      }\n\n      if (windowElement && _outerZones.size === 1) {\n        this._disposables.push(on(windowElement, 'keydown', this._onKeyDownCapture, true));\n      }\n      this._disposables.push(on(root, 'blur', this._onBlur, true));\n\n      // Assign initial tab indexes so that we can set initial focus as appropriate.\n      this._updateTabIndexes();\n\n      if (this.props.defaultActiveElement) {\n        this._activeElement = getDocument()!.querySelector(this.props.defaultActiveElement) as HTMLElement;\n        this.focus();\n      }\n    }\n  }\n\n  public componentDidUpdate(): void {\n    const { current: root } = this._root;\n    const doc = getDocument(root);\n\n    if (doc && this._lastIndexPath && (doc.activeElement === doc.body || doc.activeElement === root)) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(root as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this._setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this._setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this._setParkedFocus(true);\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    delete _allInstances[this._id];\n\n    if (!this._isInnerZone) {\n      _outerZones.delete(this);\n    }\n\n    // Dispose all events.\n    this._disposables.forEach(d => d());\n  }\n\n  public render() {\n    const { rootProps, ariaDescribedBy, ariaLabelledBy, className } = this.props;\n    const divProps = getNativeProps(this.props, htmlElementProperties);\n\n    const Tag = this.props.as || this.props.elementType || 'div';\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this._evaluateFocusBeforeRender();\n\n    return (\n      <Tag\n        role=\"presentation\"\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        {...divProps}\n        {\n          // root props has been deprecated and should get removed.\n          // it needs to be marked as \"any\" since root props expects a div element, but really Tag can\n          // be any native element so typescript rightly flags this as a problem.\n          ...rootProps as any\n        }\n        // Once the getClassName correctly memoizes inputs this should\n        // be replaced so that className is passed to getRootClass and is included there so\n        // the class names will always be in the same order.\n        className={css(getRootClass(), className)}\n        ref={this._root}\n        data-focuszone-id={this._id}\n        onKeyDown={this._onKeyDown}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </Tag>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (!forceIntoFirstElement && this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' && this._isInnerZone) {\n        const ownerZoneElement = this._getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      } else if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement) &&\n        isElementTabbable(this._activeElement)\n      ) {\n        this._activeElement.focus();\n        return true;\n      } else {\n        const firstChild = this._root.current.firstChild as HTMLElement;\n\n        return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * onBeforeFocus to created delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusElement(element: HTMLElement): boolean {\n    const { onBeforeFocus } = this.props;\n\n    if (onBeforeFocus && !onBeforeFocus(element)) {\n      return false;\n    }\n\n    if (element) {\n      // when we Set focus to a specific child, we should recalculate the alignment depend on its position\n      this._setActiveElement(element);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference, rather than a center based on\n   * the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  public setFocusAlignment(point: IPoint): void {\n    this._focusAlignment = point;\n  }\n\n  private _evaluateFocusBeforeRender(): void {\n    const { current: root } = this._root;\n    const doc = getDocument(root);\n\n    if (doc) {\n      const focusedElement = doc.activeElement as HTMLElement;\n\n      // Only update the index path if we are not parked on the root.\n      if (focusedElement !== root) {\n        const shouldRestoreFocus = elementContains(root, focusedElement, false);\n\n        this._lastIndexPath = shouldRestoreFocus ? getElementIndexPath(root as HTMLElement, doc.activeElement as HTMLElement) : undefined;\n      }\n    }\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { onActiveElementChanged, doNotAllowFocusEventToPropagate, onFocusNotification } = this.props;\n    const isImmediateDescendant = this._isImmediateDescendantOfZone(ev.target as HTMLElement);\n    let newActiveElement: HTMLElement | undefined;\n\n    if (onFocusNotification) {\n      onFocusNotification();\n    }\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this._isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    const initialElementFocused = !this._activeElement;\n\n    // If the new active element is a child of this zone and received focus,\n    // update alignment an immediate descendant\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      if (isImmediateDescendant || initialElementFocused) {\n        this._setFocusAlignment(newActiveElement, initialElementFocused);\n      }\n\n      this._activeElement = newActiveElement;\n\n      if (initialElementFocused) {\n        this._updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (doNotAllowFocusEventToPropagate) {\n      ev.stopPropagation();\n    }\n  };\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  private _setParkedFocus(isParked: boolean): void {\n    const { current: root } = this._root;\n\n    if (root && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = root.getAttribute('tabindex');\n          root.setAttribute('tabindex', '-1');\n        }\n        root.focus();\n      } else {\n        if (!this.props.allowFocusRoot) {\n          if (this._parkedTabIndex) {\n            root.setAttribute('tabindex', this._parkedTabIndex);\n            this._parkedTabIndex = undefined;\n          } else {\n            root.removeAttribute('tabindex');\n          }\n        }\n      }\n    }\n  }\n\n  private _onBlur = (): void => {\n    this._setParkedFocus(false);\n  };\n\n  /**\n   * Handle global tab presses so that we can patch tabindexes on the fly.\n   */\n  private _onKeyDownCapture = (ev: KeyboardEvent): void => {\n    if (ev.which === KeyCodes.tab) {\n      _outerZones.forEach(zone => zone._updateTabIndexes());\n    }\n  };\n\n  private _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this._setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  private _setActiveElement(element: HTMLElement, forceAlignment?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this._updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignment) {\n        this._setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean | undefined => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { direction, disabled, isInnerZoneKeystroke } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return;\n    }\n\n    if (document.activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return;\n    }\n\n    if (isInnerZoneKeystroke && isInnerZoneKeystroke(ev) && this._isImmediateDescendantOfZone(ev.target as HTMLElement)) {\n      // Try to focus\n      const innerZone = this._getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(getNextElement(\n            ev.target as HTMLElement,\n            (ev.target as HTMLElement).firstChild as HTMLElement,\n            true\n          ) as HTMLElement)\n        ) {\n          return;\n        }\n      } else {\n        return;\n      }\n    } else if (ev.altKey) {\n      return;\n    } else {\n      switch (ev.which) {\n        case KeyCodes.space:\n          if (this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.left:\n          if (direction !== FocusZoneDirection.vertical && this._moveFocusLeft()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.right:\n          if (direction !== FocusZoneDirection.vertical && this._moveFocusRight()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.up:\n          if (direction !== FocusZoneDirection.horizontal && this._moveFocusUp()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.down:\n          if (direction !== FocusZoneDirection.horizontal && this._moveFocusDown()) {\n            break;\n          }\n          return;\n\n        case KeyCodes.tab:\n          if (\n            this.props.allowTabKey ||\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly && this._isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this._moveFocusUp() : this._moveFocusDown();\n            } else if (direction === FocusZoneDirection.horizontal || direction === FocusZoneDirection.bidirectional) {\n              const tabWithDirection = getRTL() ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this._moveFocusLeft() : this._moveFocusRight();\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.home:\n          if (this._isElementInput(ev.target as HTMLElement) && !this._shouldInputLoseFocus(ev.target as HTMLInputElement, false)) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (this._root.current && firstChild && this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.end:\n          if (this._isElementInput(ev.target as HTMLElement) && !this._shouldInputLoseFocus(ev.target as HTMLInputElement, true)) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (this._root.current && this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.enter:\n          if (this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        default:\n          return;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  private _tryInvokeClickForFocusable(target: HTMLElement): boolean {\n    if (target === this._root.current) {\n      return false;\n    }\n\n    do {\n      if (target.tagName === 'BUTTON' || target.tagName === 'A' || target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n        return false;\n      }\n\n      if (\n        this._isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true'\n      ) {\n        raiseClick(target);\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  private _getFirstInnerZone(rootElement?: HTMLElement | null): FocusZone | null {\n    rootElement = rootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this._getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  private _moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    ev?: Event,\n    useDefaultWrap: boolean = true\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (isForward ? getNextElement(this._root.current, element) : getPreviousElement(this._root.current, element)) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(getNextElement(\n          this._root.current,\n          this._root.current.firstElementChild as HTMLElement,\n          true\n        ) as HTMLElement);\n      } else {\n        return this.focusElement(getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true\n        ) as HTMLElement);\n      }\n    }\n\n    return changedFocus;\n  }\n\n  private _moveFocusDown(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.x;\n\n    if (\n      this._moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusUp(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.x;\n\n    if (\n      this._moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusLeft(): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        getRTL(),\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL()) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = targetRect.top.toFixed(3) < activeRect.bottom.toFixed(3);\n          } else {\n            topBottomComparison = targetRect.bottom.toFixed(3) > activeRect.top.toFixed(3);\n          }\n\n          if (topBottomComparison && targetRect.right <= activeRect.right && this.props.direction !== FocusZoneDirection.vertical) {\n            distance = activeRect.right - targetRect.right;\n          } else {\n            if (!shouldWrap) {\n              distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n            }\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusRight(): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        !getRTL(),\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL()) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = targetRect.bottom.toFixed(3) > activeRect.top.toFixed(3);\n          } else {\n            topBottomComparison = targetRect.top.toFixed(3) < activeRect.bottom.toFixed(3);\n          }\n\n          if (topBottomComparison && targetRect.left >= activeRect.left && this.props.direction !== FocusZoneDirection.vertical) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean) {\n    if (this.props.direction === FocusZoneDirection.bidirectional && (!this._focusAlignment || isHorizontal || isVertical)) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = {\n          x: left,\n          y: top\n        };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.x = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.y = top;\n      }\n    }\n  }\n\n  private _isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this._getOwnerZone(element) === this._root.current;\n  }\n\n  private _getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    while (parentElement && parentElement !== this._root.current && parentElement !== document.body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return parentElement;\n  }\n\n  private _updateTabIndexes(element?: HTMLElement) {\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (!this._isInnerZone && ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (!this._isInnerZone && ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this._updateTabIndexes(child);\n    }\n  }\n\n  private _isElementInput(element: HTMLElement): boolean {\n    if (element && element.tagName && (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')) {\n      return true;\n    }\n    return false;\n  }\n\n  private _shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean) {\n    // If a tab was used, we want to focus on the next element.\n    if (!this._processingTabKey && element && element.type && ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward.\n      // 3. when selection start is not the end of length and it is forward.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit tab)\n      // and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is determined by calling the\n      // callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward) ||\n        (selectionStart !== inputValue.length && isForward) ||\n        (!!this.props.handleTabKey && !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private _shouldWrapFocus(element: HTMLElement, noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap'): boolean {\n    return !!this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  /**\n   * Returns true if the element is a descendant of the FocusZone through a React portal.\n   */\n  private _portalContainsElement(element: HTMLElement): boolean {\n    return element && !!this._root.current && portalContainsElement(element, this._root.current);\n  }\n}\n","import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const { palette, semanticColors } = theme;\n    const iconButtonStyles: IButtonStyles = {\n      root: {\n        padding: '0 4px',\n        width: '32px',\n        height: '32px',\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: semanticColors.actionLink\n      },\n\n      rootHovered: {\n        color: semanticColors.actionLinkHovered,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight'\n          }\n        }\n      },\n\n      rootPressed: {\n        color: palette.themePrimary\n      },\n\n      rootExpanded: {\n        color: palette.themePrimary\n      },\n\n      rootChecked: {\n        backgroundColor: semanticColors.buttonBackgroundChecked\n      },\n\n      rootCheckedHovered: {\n        backgroundColor: semanticColors.buttonBackgroundHovered\n      },\n\n      rootDisabled: {\n        color: semanticColors.disabledText\n      }\n    };\n\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles)!;\n  }\n);\n","import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './IconButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('IconButton', ['theme', 'styles'], true)\nexport class IconButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _skipComponentRefResolution = true;\n\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--icon\"\n        styles={getStyles(theme!, styles)}\n        onRenderText={nullRender}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RoleList_wrapper__iWnDl\",\"topbar\":\"RoleList_topbar__3tkx5\",\"left\":\"RoleList_left__lxS06\",\"right\":\"RoleList_right__1ufPq\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","export const fakeRoles = [\n  {\n    'id': 1,\n    'name': 'admin',\n    'privileges': [\n      'ADMIN'\n    ]\n  },\n  {\n    'id': 2,\n    'name': 'user',\n    'privileges': [\n      'JOB'\n    ]\n  },\n  {\n    'id': 5,\n    'name': 'glusterfs',\n    'privileges': [\n      'GLUSTERFS'\n    ]\n  },\n  {\n    'id': 6,\n    'name': 'nfs',\n    'privileges': [\n      'NFS'\n    ]\n  },\n  {\n    'id': 7,\n    'name': 'USER',\n    'privileges': [\n      'USER'\n    ]\n  },\n  {\n    'id': 8,\n    'name': 'key',\n    'privileges': [\n      'KEY'\n    ]\n  },\n  {\n    'id': 10,\n    'name': 'rrrrr',\n    'privileges': [\n      'SYSTEM',\n      'GLUSTERFS',\n      'USER',\n      'KEY'\n    ]\n  },\n  {\n    'id': 13,\n    'name': 'test',\n    'privileges': [\n      'USER'\n    ]\n  },\n  {\n    'id': 14,\n    'name': 'leader',\n    'privileges': [\n      'GLUSTERFS',\n      'NFS',\n      'JOB',\n      'USER'\n    ]\n  }\n]\n\nexport const fakePrivilege = [\n  {\n    'name': 'ADMIN'\n  },\n  {\n    'name': 'JOB'\n  },\n  {\n    'name': 'USER'\n  },\n  {\n    'name': 'NFS'\n  },\n  {\n    'name': 'GLUSTERFS'\n  },\n  {\n    'name': 'KEY'\n  },\n  {\n    'name': 'VIRTUAL_CLUSTER'\n  },\n  {\n    'name': 'SYSTEM'\n  }\n]\n","import React from 'react';\n\nexport default React.createContext(null);\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../Context';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { BaseTextField } from 'components/BaseMuiInput';\nimport { BaseModal } from 'components/BaseModal';\nimport { DefaultButton, PrimaryButton } from 'components/BaseButton';\nimport MuiDropdown from 'components/BaseMuiDropdown';\n\nimport { createRole } from 'utils/api';\n\nconst useStyles = makeStyles(() => ({\n  marginRight10: {\n    marginRight: 10\n  },\n  marginTop10: {\n    marginTop: 10\n  },\n  marginTop20: {\n    marginTop: 20\n  }\n}))\n\nconst addDropDownOptionKeys = optionItems => {\n  return optionItems.map((item, index) => ({\n    key: index,\n    text: item.name,\n    ...item\n  }));\n};\n\nfunction CreateRoleModal({ isOpen, onClose }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const defaultUserInfo = {\n    username: '',\n    rolePrivileges: []\n  };\n\n  const { getData, rolePrivileges } = useContext(Context);\n  const [userInfo, setUserInfo] = useState(defaultUserInfo);\n  const [isRolePrivileges, setIsRolePrivilegesCreating] = useState(false);\n  const [isNameError, setIsNameError] = useState('');\n\n  const onSubmit = async() => {\n    const getCreateRolePrivilegesInfo = {\n      name: userInfo.username,\n      privileges: userInfo.rolePrivileges\n    };\n\n    try {\n      setIsRolePrivilegesCreating(true);\n      await createRole(getCreateRolePrivilegesInfo);\n      toast.success(`${t('add')}${t('enSpace')}${t('success')}`);\n      setIsRolePrivilegesCreating(false);\n      onClose();\n      getData();\n      setUserInfo(defaultUserInfo);\n    } catch (err) {\n      setIsRolePrivilegesCreating(false);\n      toast.error(err.data ? err.data.message : err.message)\n    }\n  };\n\n  const rules = {\n    bypass: () => null,\n    required: value => (value ? null : t('fieldRequired'))\n  };\n\n  return (\n    <BaseModal\n      isOpen={isOpen}\n      modalWidth={400}\n      onClose={onClose}\n      title={`${t('add')}${t('enSpace')}${t('role')}`}\n    >\n      <BaseTextField\n        classes={{ root: classes.marginTop10 }}\n        error={isNameError}\n        helperText={isNameError === '' ? '' : isNameError}\n        label={t('role')}\n        onChange={(e) => {\n          const value = e.target.value;\n          setUserInfo(userInfo => ({ ...userInfo, username: value }));\n          const checkField = rules.required(value);\n          setIsNameError(checkField);\n        }}\n        required\n        type=\"text\"\n      />\n      <MuiDropdown\n        classes={{ root: classes.marginTop20 }}\n        list={addDropDownOptionKeys(rolePrivileges)}\n        maxWidth={'100%'}\n        multiple\n        onChange={(e) => {\n          const value = e.target.value;\n          setUserInfo(prev => ({ ...prev, rolePrivileges: value }));\n        }}\n        selectProps={{\n          MenuProps: {\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            getContentAnchorEl: null\n          }\n        }}\n        text={`${t('select')}${t('enSpace')}${t('privilege')}`}\n        value={userInfo.rolePrivileges}\n      />\n      <div style={{ display: 'flex', justifyContent: 'flex-end', paddingTop: 20 }}>\n        <DefaultButton\n          children={t('cancel')}\n          classes={{ root: classes.marginRight10 }}\n          disabled={isRolePrivileges}\n          onClick={() => {\n            onClose();\n            setUserInfo(defaultUserInfo);\n          }}\n        />\n        {\n          isRolePrivileges\n            ? <CircularProgress />\n            :\n            <PrimaryButton\n              children={t('confirm')}\n              disabled={!userInfo.username}\n              onClick={onSubmit}\n            />\n        }\n      </div>\n    </BaseModal>\n  );\n}\n\nCreateRoleModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default CreateRoleModal;\n","import React, { useState, useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport BaseModal from 'components/BaseModal';\nimport { BaseTextField } from 'components/BaseMuiInput';\nimport MuiDropdown from 'components/BaseMuiDropdown';\nimport { DefaultButton, PrimaryButton } from 'components/BaseButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Context from '../Context';\n\nimport { toast } from 'react-toastify';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { updateRole } from 'utils/api';\n\nconst addDropDownOptionKeys = optionItems => {\n  return optionItems.map((item, index) => ({\n    key: index,\n    text: item.name,\n    ...item\n  }));\n};\n\nconst useStyles = makeStyles(() => ({\n  marginRight10: {\n    marginRight: 10\n  },\n  marginTop10: {\n    marginTop: 10\n  },\n  marginTop20: {\n    marginTop: 20\n  }\n}))\n\nfunction EditModal(props) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const { isOpen, onClose } = props;\n\n  const defaultRoleInfo = {\n    name: '',\n    privileges: []\n  };\n\n  const {\n    designateUpdateUser,\n    getData,\n    rolePrivileges\n  } = useContext(Context);\n  const [userInfo, setUserInfo] = useState(defaultRoleInfo);\n  const [isRolePrivileges, setIsRolePrivilegesCreating] = useState(false);\n\n  const [isNameError, setIsNameError] = useState('');\n\n  useMemo(\n    () => {\n      setUserInfo(designateUpdateUser);\n    },\n    [designateUpdateUser]\n  );\n\n  const onSubmit = async() => {\n    const createRolePrivilegesInfo = {\n      name: userInfo.name,\n      privileges: userInfo.privileges\n    };\n\n    try {\n      setIsRolePrivilegesCreating(true);\n      await updateRole(userInfo.id, createRolePrivilegesInfo);\n      toast.success(t('updateSuccess'));\n      setIsRolePrivilegesCreating(false);\n      onClose();\n      getData();\n    } catch (err) {\n      const errorMessage = err.data ? err.data.message : err.message\n      toast.error(errorMessage)\n      setIsRolePrivilegesCreating(false);\n    }\n  };\n\n  const rules = {\n    required: value => (value ? '' : t('fieldRequired'))\n  };\n\n  return (\n    <BaseModal\n      isOpen={isOpen}\n      modalWidth={400}\n      title={`${t('Edit')}${t('enSpace')}${t('privilege')}`}\n    >\n      {/* 角色 */}\n      <BaseTextField\n        classes={{ root: classes.marginTop10 }}\n        error={isNameError}\n        helperText={isNameError === '' ? '' : isNameError}\n        label={t('role')}\n        onChange={(e) => {\n          const value = e.target.value;\n          setUserInfo(userInfo => ({ ...userInfo, name: value }));\n          const checkField = rules.required(value)\n          setIsNameError(checkField)\n        }}\n        required\n        type=\"text\"\n        value={userInfo.name}\n      />\n\n      <MuiDropdown\n        classes={{ root: classes.marginTop20 }}\n        disabled={designateUpdateUser.id === 1}\n        list={addDropDownOptionKeys(rolePrivileges)}\n        maxWidth={'100%'}\n        multiple\n        onChange={(e) => {\n          const value = e.target.value;\n          setUserInfo(prev => ({ ...prev, privileges: value }));\n        }}\n        selectProps={{\n          MenuProps: {\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left'\n            },\n            getContentAnchorEl: null,\n            // ! PaperProps 是 <Menu> 這個 Mui 的 component 的 props\n            PaperProps: {\n              style: {\n                maxHeight: 200\n              }\n            }\n          }\n        }}\n        text={`${t('select')}${t('enSpace')}${t('privilege')}`}\n        value={userInfo.privileges}\n      />\n      <div style={{ display: 'flex', justifyContent: 'flex-end', paddingTop: 20 }}>\n        <DefaultButton\n          children={t('cancel')}\n          classes={{ root: classes.marginRight10 }}\n          disabled={isRolePrivileges}\n          onClick={() => {\n            onClose();\n            setUserInfo(userInfo);\n          }}\n        />\n        {\n          isRolePrivileges\n            ? <CircularProgress />\n            :\n            <PrimaryButton\n              children={t('confirm')}\n              disabled={isRolePrivileges || !userInfo.name}\n              onClick={onSubmit}\n            />\n        }\n      </div>\n    </BaseModal>\n  );\n}\n\nEditModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default EditModal;\n","class Filter {\n  constructor(keyword = '', types = []) {\n    this.keyword = keyword;\n    this.types = types;\n  }\n\n  apply(list) {\n    const { keyword, types } = this;\n    const filters = [];\n\n    if (keyword !== '') {\n      // '用关键字过滤'\n      filters.push(({ name }) => name.includes(keyword));\n    }\n    if (types && types.length > 0) {\n      filters.push(({ privileges }) => types.every(item => privileges.includes(item)))\n    }\n\n    if (filters.length === 0) return list;\n\n    return list.filter(item =>\n      filters.every(filter => filter(item))\n    );\n  }\n}\n\nexport default Filter;\n","export default class Ordering {\n  constructor(field, descending = false) {\n    this.field = field;\n    this.descending = descending;\n  }\n\n  apply(list) {\n    const { field, descending } = this;\n    let comparator;\n    if (field == null) {\n      return list;\n    }\n    if (field === 'name') {\n      comparator = descending\n        ? (a, b) => String(b.name).localeCompare(a.name)\n        : (a, b) => String(a.name).localeCompare(b.name);\n    } else if (field === 'roles') {\n      comparator = descending\n        ? (a, b) => String(b.privileges.join('')).localeCompare(a.privileges.join(''))\n        : (a, b) => String(a.privileges.join('')).localeCompare(b.privileges.join(''));\n    }\n    return list.slice().sort(comparator);\n  }\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\n// # API\nimport { getRole, getPrivilege, deleteRole } from 'utils/api';\n\nimport { fakePrivilege, fakeRoles } from './fakeData';\n\n// ^ Material-ui Componets(Functions)\nimport Icon from '@material-ui/core/Icon';\nimport { Refresh } from '@material-ui/icons';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// ? Self-packed Components || Functions\nimport BreadCrumbs from 'components/BreadCrumbs';\nimport ErrorMessageBar from 'components/ErrorMessageBar';\nimport { PrimaryButton, DefaultButton, IconButton } from 'components/BaseButton';\nimport MuiDropdown from 'components/BaseMuiDropdown';\nimport MuiAutocomplete from 'components/BaseMuiAutocomplete';\nimport BasePaper from 'components/BaseMuiPaper';\nimport ConfirmModal from 'components/ConfirmModal';\nimport CreateModal from './components/CreateModal'\nimport EditModal from './components/EditModal';\nimport Context from './Context';\nimport Filter from './Filter';\nimport Ordering from './Ordering';\n\n// ^ plugins\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\n\n// ? styles\nimport indexStyle from './index.module.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport commonStyle from 'common/commonStyles'\n\nconst useStyles = makeStyles((theme) => ({\n  ...commonStyle(theme),\n  marginRight10: {\n    marginRight: 10\n  },\n  heightAuto: {\n    height: 'auto'\n  },\n  iconClearMarginLeft: {\n    marginLeft: 0\n  },\n  formControl: {\n    minWidth: 120,\n    maxWidth: 150,\n    fullWidth: true,\n    '& .Mui-focused':{\n      top: 0\n    }\n  },\n  selectIcon: {\n    top: '25%'\n  },\n  labelChange: {\n    top: -10\n  },\n  labelChangeHasValue: {\n    top: 0\n  },\n  muiautoTablet: {\n    height: 42\n  }\n}))\n\n/**\n * @author odin\n * @level views/RoleList\n * @component RoleList\n * @description RoleList component\n*/\nconst RoleList = () => {\n\n  // $ init data\n  const { t } = useTranslation();\n\n  // = styles\n  const classes = useStyles();\n\n  // # states\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [roleList, setRoleList] = useState([])\n  const [rolePrivileges, setRolePrivileges] = useState([]);\n  const [isEditModalShow, setIsEditModalShow] = useState(false);\n  const [isCreateModalShow, setIsCreateModalShow] = useState(false);\n  const [designateUpdateUser, setDesignateUpdateUser] = useState([]);\n  const [keyword, setKeyword] = useState('');\n  const [selectedRole, setSelectedRole] = useState([]);\n  const [filter, setFilter] = useState(new Filter());\n  const [ordering, setOrdering] = useState(new Ordering());\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  // & handled data\n  const isTablet = useMediaQuery('(max-width: 960px)');\n\n  // - methods\n  const addDropDownOptionKeys = optionItems => {\n    return optionItems.map((item) => ({\n      key: item.name,\n      text: item.name,\n      ...item\n    }));\n  };\n\n  const applySortProps = column => {\n    column.isSorted = ordering.field === column.id;\n    column.isSortedDescending = ordering.descending;\n    column.onColumnClick = (event, column) => {\n      const { field, descending } = ordering;\n      if (field === column) {\n        if (descending) {\n          setOrdering(new Ordering());\n        } else {\n          setOrdering(new Ordering(field, true));\n        }\n      } else {\n        setOrdering(new Ordering(column));\n      }\n    }\n    return column;\n  }\n\n  const getData = useCallback(() => {\n    setIsLoading(true);\n    setRolePrivileges(fakePrivilege)\n    setRoleList(fakeRoles)\n    const close = true;\n    if (close) return\n    Promise.all([getPrivilege(), getRole()])\n      .then(([privilege, role]) => {\n        setRolePrivileges(privilege);\n        setRoleList(role);\n      })\n      // .catch(err => setError(err.message ? err.data.message : err.message))\n      .finally(() => {\n        setIsLoading(false);\n      })\n  })\n\n  const onEdit = roleInfo => {\n    setDesignateUpdateUser(roleInfo);\n    setIsEditModalShow(true);\n  };\n\n  const onDelete = useCallback(() => {\n    const isDelete = true;\n    setIsLoading(true);\n    if (isDelete) {\n      toast.success(`${t('delete')}${t('enSpace')}${t('success')}`);\n      setIsLoading(false)\n      return\n    }\n    deleteRole({ name: designateUpdateUser.name })\n      .then(() => {\n        toast.success(`${t('delete')}${t('enSpace')}${t('success')}`);\n        getData();\n      })\n      .catch(err => {\n        const msg = err.data ? err.data.message : err.message;\n        toast.error(msg);\n      })\n      .finally(() => setIsLoading(false))\n  }, [designateUpdateUser]);\n\n  // * hook\n  /**\n   * @author odin\n   * @description ComponentDidMount ComponentDidUpdate\n  */\n  useEffect(() => {\n    getData();\n  }, [])\n\n  /**\n   * @author odin\n   * @description Watch keyword(state) and selectedRole(state) to Filter data\n  */\n  useEffect(() => {\n    setFilter(new Filter(keyword, selectedRole));\n  }, [keyword, selectedRole])\n\n  // ? context\n  const context = {\n    setError,\n    isLoading,\n    setIsLoading,\n    roleList,\n    rolePrivileges,\n    setRoleList,\n    getData,\n    designateUpdateUser,\n    setDesignateUpdateUser,\n    setIsEditModalShow,\n    filter,\n    ordering,\n    setOrdering\n  }\n\n  // & handled data\n  // table 的 內容\n  const columns = [\n    applySortProps({ id: 'name', key: 'name', label: t('role'), width: '30%' }),\n    applySortProps({ id: 'privileges', key: 'privileges', label: t('privilege'), width: '30%', format: (roles) => (roles.join(', ')) }),\n    {\n      id: 'edit',\n      label: t('Edit'),\n      width: '10%',\n      onTableCellRender: (data) => {\n        return (\n          <IconButton\n            children={<Icon>drive_file_rename_outline</Icon>}\n            onClick={() => onEdit(data)}\n          />\n        )\n      }\n    },\n    {\n      id: 'delete',\n      label: t('delete'),\n      width: '30%',\n      onTableCellRender: (data) => {\n        const { id } = data;\n        const onlyHasAdmin = id === 1;\n        return (\n          <IconButton\n            children={<Icon>delete_outline</Icon>}\n            disabled={onlyHasAdmin}\n            onClick={() => {\n              if (data.name === 'admin') return;\n              setShowDeleteModal(true);\n              setDesignateUpdateUser(data)\n            }}\n          />\n        )\n      }\n    }\n  ]\n\n  return (\n    <Context.Provider value={context}>\n      <div className={indexStyle.wrapper}>\n        <BreadCrumbs />\n        {error ? <ErrorMessageBar error={error} /> : null}\n        <div className={indexStyle.topbar}>\n          {\n            isTablet\n              ?\n              <>\n                <PrimaryButton\n                  children={t('add')}\n                  classes={{\n                    startIcon: classes.iconClearMarginLeft\n                  }}\n                  disabled={error || isLoading ? true : false}\n                  onClick={() => setIsCreateModalShow(true)}\n                  startIcon={<Icon>person_add_alt_1</Icon>}\n                />\n                <DefaultButton\n                  children={t('refresh')}\n                  disabled={isLoading}\n                  onClick={() => {\n                    getData();\n                  }}\n                  startIcon={<Refresh />}\n                />\n                <MuiAutocomplete\n                  classes={{ root: classes.muiautoTablet }}\n                  onInputChange={(e, value) => setKeyword(value)}\n                  placeholder={t('search')}\n                  textFieldProps={{\n                    InputProps: {\n                      style: { height: 42, fontSize: 16 }\n                    }\n                  }}\n                  value={keyword}\n                />\n              </>\n              :\n              <>\n                <div className={indexStyle.left}>\n\n                  {/* 左邊 */}\n                  <PrimaryButton\n                    children={`${t('add')}${t('enSpace')}${t('role')}`}\n                    classes={{\n                      root: classes.mr_20,\n                      startIcon: classes.iconClearMarginLeft\n                    }}\n                    disabled={error || isLoading ? true : false}\n                    onClick={() => setIsCreateModalShow(true)}\n                    startIcon={<Icon>person_add_alt_1</Icon>}\n                  />\n\n                  <DefaultButton\n                    children={t('refresh')}\n                    disabled={isLoading}\n                    onClick={() => {\n                      getData();\n                    }}\n                    startIcon={<Refresh />}\n                  />\n                </div>\n\n                {/* 右邊 */}\n                <div className={indexStyle.right}>\n\n                  <MuiAutocomplete\n                    classes={{ root: `${classes.mr_20} ${classes.h_auto}` }}\n                    onInputChange={(e, value) => setKeyword(value)}\n                    placeholder={`${t('search')}${t('enSpace')}${t('role')}`}\n                    value={keyword}\n                  />\n\n                  <MuiDropdown\n                    list={addDropDownOptionKeys([\n                      ...rolePrivileges,\n                      { name: 'divider', text: '-', itemType: 0 },\n                      { name: t('clearOption'), type: 'clear', itemType: 1, onClick: () => setSelectedRole([]) }\n                    ])}\n                    maxWidth={150}\n                    multiple\n                    onChange={(e, child) => {\n                      if (child.props.type === 'clear') {\n                        child.props.onClick()\n                        return\n                      }\n                      const result = e.target.value.filter(item => item !== undefined)\n                      setSelectedRole(result);\n                    }}\n                    text={`${t('select')}${t('enSpace')}${t('privilege')}`}\n                    value={selectedRole}\n                  />\n                </div>\n              </>\n          }\n        </div>\n        <div style={{ flex: 1, overflow: 'hidden' }}>\n          <BasePaper\n            columns={columns}\n            labelRowsPerPage={t('labelRowsPerPage')}\n            ordering={ordering}\n            page={page}\n            rows={filter.apply(ordering.apply(roleList))}\n            rowsPerPage={rowsPerPage}\n            setPage={setPage}\n            setRowsPerPage={setRowsPerPage}\n          />\n        </div>\n      </div>\n\n      {/* Modal */}\n      {\n        isEditModalShow &&\n        <EditModal\n          isOpen={isEditModalShow}\n          onClose={() => setIsEditModalShow(false)}\n        />\n      }\n      {\n        isCreateModalShow &&\n        <CreateModal\n          isOpen={isCreateModalShow}\n          onClose={() => setIsCreateModalShow(false)}\n        />\n      }\n      <ConfirmModal\n        confrimText={t('delete')}\n        content={t('sureDelete', { name: designateUpdateUser.name })}\n        isOpen={showDeleteModal}\n        onClose={() => setShowDeleteModal(false)}\n        onConfirm={onDelete}\n        title={`${t('delete')}${t('enSpace')}${t('role')}`}\n      />\n    </Context.Provider>\n  );\n};\n\nexport default RoleList;\n"],"sourceRoot":""}