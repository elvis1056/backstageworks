{"version":3,"sources":["../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","views/ForgetPassword/index.module.scss","views/ForgetPassword/TokenModal.js","views/ForgetPassword/Footer/index.js","views/ForgetPassword/index.js"],"names":["createSvgIcon","React","d","module","exports","useStyles","makeStyles","marginRight10","marginRight","TokenModal","isOpen","onClose","t","useTranslation","classes","history","useHistory","useState","getErrorMsg","setGetErrorMsg","token","setToken","sendingToken","setSendingToken","BaseModal","modalWidth","title","error","helperText","label","onChange","e","value","target","style","display","justifyContent","marginTop","children","root","onClick","CircularProgress","push","Footer","window","ENV","copyrightYear","companyName","productVersion","zIndex","position","bottom","color","fontSize","alignItems","width","paddingLeft","right","href","textDecoration","sendButtonStyle","backgroundColor","height","border","borderRadius","backButtonStyle","modal","ForgetPassword","asyncIsFileExist","useContext","GlobalContext","username","email","userInfo","setUserInfo","lock","setLock","isModalOpen","setIsModalOpen","isEmailSend","setIsEmailSend","countdownTime","setCountDownTime","isTokenModalOpen","setIsTokenModalOpen","isUsernameError","setIsUsernameError","isEmailError","setIsEmailError","svgExist","setSvgExist","useEffect","then","res","rules","required","emailFormat","RegExp","test","rulesCheck","a","errorInfo","onSubmit","preventDefault","submitUserInfoErr","setTimeout","count","navigator","userAgent","indexOf","className","indexStyle","container","block","innerBlock","left","alt","src","resetPasswordContainerStack","blockTitleText","narrativeBlock","isEmpty","fieldBlock","elevation","severity","variant","checkField","type","paddingTop15","buttonStackStyle","disabled","cursor","theme","themePrimary","isCloseIcon","subTitle"],"mappings":"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","file":"static/js/ForgetPassword.5eed6872.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ForgetPassword_container__2YMBZ\",\"blockTitleText\":\"ForgetPassword_blockTitleText__30MQp\",\"block\":\"ForgetPassword_block__3Vbxx\",\"innerBlock\":\"ForgetPassword_innerBlock__PFc_I\",\"left\":\"ForgetPassword_left__3e2nU\",\"buttonWithCount\":\"ForgetPassword_buttonWithCount__7WToV\",\"resetPasswordContainerStack\":\"ForgetPassword_resetPasswordContainerStack__3_J_1\",\"fieldBlock\":\"ForgetPassword_fieldBlock__4T3SE\",\"narrativeBlock\":\"ForgetPassword_narrativeBlock__3KaIM\",\"token\":\"ForgetPassword_token__3ko0s\",\"buttonStackStyle\":\"ForgetPassword_buttonStackStyle__1f9dr\",\"paddingTop15\":\"ForgetPassword_paddingTop15__1P-qk\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport BaseModal from 'components/BaseModal';\nimport { DefaultButton, PrimaryButton } from 'components/BaseButton';\nimport { BaseTextField } from 'components/BaseMuiInput';\n\nimport { useTranslation } from 'react-i18next';\n// import { checkChangePasswordToken } from 'utils/api';\n\nconst useStyles = makeStyles(() => ({\n  marginRight10: {\n    marginRight: 10\n  }\n}))\n\nconst TokenModal = ({ isOpen, onClose }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const history = useHistory();\n  const [getErrorMsg, setGetErrorMsg] = useState('');\n  const [token, setToken] = useState();\n  const [sendingToken, setSendingToken] = useState(false);\n\n  const onSubmit = () => {\n    setSendingToken(true)\n    history.push(`/changePassword?token=${token}`)\n    // checkChangePasswordToken(token)\n    //   .then(() => {\n    //     setSendingToken(false);\n    //     onClose();\n    //     setToken();\n    //     setGetErrorMsg();\n    //     history.push(`/changePassword?token=${token}`)\n    //   })\n    //   .catch(err => {\n    //     setGetErrorMsg(err.data.message)\n    //   })\n    //   .finally(() => setSendingToken(false))\n  }\n\n  return (\n    <BaseModal\n      isOpen={isOpen}\n      modalWidth={350}\n      title={t('token')}\n    >\n      <BaseTextField\n        error={getErrorMsg}\n        helperText={getErrorMsg === '' ? '' : t('tokenInValid')}\n        label={`${t('token')}${t('enSpace')}${t('verification')}`}\n        onChange={(e) => {\n          const value = e.target.value;\n          if (getErrorMsg) setGetErrorMsg();\n          setToken(value);\n        }}\n      />\n      <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 15 }}>\n        <DefaultButton\n          children={t('cancel')}\n          classes={{ root: classes.marginRight10 }}\n          onClick={() => {\n            onClose();\n            setToken();\n            setGetErrorMsg();\n          }}\n        />\n        {\n          sendingToken\n            ? <CircularProgress />\n            :\n            <PrimaryButton\n              children={t('confirm')}\n              onClick={onSubmit}\n            />\n        }\n      </div>\n    </BaseModal>\n  );\n};\n\nTokenModal.propTypes = {\n  isOpen: PropTypes.boolean,\n  onClose: PropTypes.func\n};\n\nexport default TokenModal;","import React from 'react';\n\nconst Footer = () => {\n  const {\n    copyrightYear,\n    companyName,\n    productVersion\n  } = window.ENV\n  return (\n    <footer\n      style={{\n        zIndex: 1,\n        position: 'absolute',\n        bottom: '10px',\n        color: '#ccc',\n        fontSize: 16,\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        paddingLeft: 20\n      }}\n    >\n      Copyright © {copyrightYear} {companyName} All rights reserved | {productVersion}\n      <div\n        style={{\n          position: 'absolute',\n          right: 0,\n          bottom: 0\n        }}\n      >\n        <a\n          href=\"http://www.freepik.com\"\n          style={{\n            textDecoration: 'none',\n            color: 'rgba(0, 135, 86, 0.5)',\n            fontSize: '10px'\n          }}\n        >\n          Designed by Freepik\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { BaseTextField } from 'components/BaseMuiInput';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport BaseModal from 'components/BaseModal';\nimport { PrimaryButton, DefaultButton } from 'components/BaseButton';\n\nimport TokenModal from './TokenModal';\nimport Footer from './Footer';\n\n/* css */\nimport indexStyle from './index.module.scss';\nimport { theme } from 'theme';\n\nimport { useTranslation } from 'react-i18next';\n// import { sendChangePasswordEmail } from 'utils/api';\n// import cookies from 'js-cookie';\nimport { isEmpty } from 'lodash';\n\nimport GlobalContext from 'layouts/Minimal/GlobalContext';\n\nconst useStyles = makeStyles(() => ({\n  sendButtonStyle: {\n    backgroundColor: '#fff',\n    fontSize: '16px',\n    height: '40px',\n    width: '40%',\n    border: '1px solid #dddddd',\n    borderRadius: '3px',\n    '&:hover': {\n      border: '1px solid #adadad',\n      backgroundColor: '#e7e7e7e'\n    }\n  },\n  backButtonStyle: {\n    fontSize: '16px',\n    height: '40px',\n    width: '40%',\n    borderRadius: '3px'\n  },\n  modal: {\n    width: 300\n  }\n}))\n\nconst ForgetPassword = () => {\n  const { t } = useTranslation();\n  const { asyncIsFileExist } = useContext(GlobalContext);\n  const history = useHistory();\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: ''\n  });\n\n  const defaultErrorMsg = {\n    username: '',\n    email: '',\n    error: ''\n  };\n\n  const [lock, setLock] = useState(false);\n  const [getErrorMsg, setGetErrorMsg] = useState(defaultErrorMsg);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEmailSend, setIsEmailSend] = useState(false);\n  const [countdownTime, setCountDownTime] = useState(0);\n  const [isTokenModalOpen, setIsTokenModalOpen] = useState(false);\n\n  const [isUsernameError, setIsUsernameError] = useState('');\n  const [isEmailError, setIsEmailError] = useState('');\n\n  const [svgExist, setSvgExist] = useState(false);\n\n  useEffect(() => {\n    asyncIsFileExist('/assets/img/trademark/LoginRegister.svg')\n      .then(res => setSvgExist(res))\n  }, [])\n\n  const rules = {\n    required: value => (value ? '' : t('fieldRequired')),\n    emailFormat(email) {\n      const emailValidation = RegExp(\n        /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/,\n        'g'\n      );\n      return emailValidation.test(email) ? '' : t('emailInValid');\n    }\n  };\n\n  async function rulesCheck(userInfo, rules) {\n    const errorInfo = {\n      username: '',\n      email: '',\n      error: false\n    };\n\n    errorInfo.username = rules.required(userInfo.username);\n    errorInfo.email = rules.required(userInfo.email) || rules.emailFormat(userInfo.email);\n\n    if (errorInfo.username || errorInfo.email) {\n      errorInfo.error = true;\n      return errorInfo;\n    } else {\n      errorInfo.error = false;\n      return errorInfo;\n    }\n  }\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setLock(true);\n\n    const submitUserInfoErr = await rulesCheck(userInfo, rules);\n\n    if (submitUserInfoErr.error) {\n      setGetErrorMsg(submitUserInfoErr);\n      setLock(false)\n      return;\n    }\n\n    setIsEmailSend(true);\n    setCountDownTime(60);\n\n    setLock(false);\n\n    // sendChangePasswordEmail(userInfo)\n    //   .catch((err) => {\n    //     setIsEmailSend(false)\n    //     setGetErrorMsg(defaultErrorMsg => {\n    //       defaultErrorMsg.error = err.data.message\n    //       return { ...defaultErrorMsg };\n    //     });\n    //     setCountDownTime(0)\n    //   })\n    //   .finally(() => setLock(false));\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (countdownTime > 0) {\n        setCountDownTime(count => {\n          count = count - 1\n          return count\n        })\n      } else {\n        setIsEmailSend(false)\n      }\n    }, 1000)\n  }, [countdownTime])\n\n  useEffect(() => {\n    // if (cookies.get('token'))\n    //   history.push('entry');\n  }, [])\n\n  useEffect(() => {\n    if (navigator.userAgent.indexOf('Chrome') === -1)\n      setIsModalOpen(true);\n  }, []);\n\n  return (\n    <>\n      <div className={indexStyle.container}>\n        <div className={indexStyle.block}>\n          <div className={indexStyle.innerBlock}>\n            <div\n              className={indexStyle.left}\n              style={{ marginRight: !svgExist && '540px' }}\n            >\n              {\n                svgExist &&\n                <img\n                  alt=\"icon\"\n                  src=\"/assets/img/trademark/LoginRegister.svg\"\n                />\n              }\n            </div>\n            <form onSubmit={onSubmit}>\n              <div className={indexStyle.resetPasswordContainerStack}>\n                <div>\n                  <div className={indexStyle.blockTitleText}>{t('forgetPassword')}</div>\n                </div>\n                <div className={indexStyle.narrativeBlock}>\n                  {t('resetNarrative')}\n                </div>\n                {\n                  !isEmpty(getErrorMsg.error) &&\n                  <div className={indexStyle.fieldBlock}>\n                    <MuiAlert\n                      children={<>{getErrorMsg.error}</>}\n                      elevation={6}\n                      severity=\"error\"\n                      variant=\"filled\"\n                    />\n                  </div>\n                }\n                <div className={indexStyle.fieldBlock}>\n                  <BaseTextField\n                    error={isUsernameError}\n                    helperText={isUsernameError === '' ? '' : isUsernameError}\n                    label={t('Username')}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      setUserInfo(userInfo => ({ ...userInfo, username: value }));\n                      const checkField = rules.required(value);\n                      setIsUsernameError(checkField)\n                    }}\n                  />\n                </div>\n                <div className={indexStyle.fieldBlock}>\n                  <BaseTextField\n                    error={isEmailError}\n                    helperText={isEmailError === '' ? '' : isEmailError}\n                    label={t('email')}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      setUserInfo(userInfo => ({ ...userInfo, email: value }));\n                      const checkField = rules.required(value) || rules.emailFormat(value);\n                      setIsEmailError(checkField)\n                    }}\n                    type=\"email\"\n                  />\n                </div>\n                <div className={`${indexStyle.fieldBlock} ${indexStyle.paddingTop15} ${indexStyle.buttonStackStyle}`}>\n                  <DefaultButton\n                    children={t('back')}\n                    classes={{ root: classes.sendButtonStyle }}\n                    disabled={lock}\n                    onClick={() => {\n                      history.push('/sign-in')\n                    }}\n                  />\n                  <PrimaryButton\n                    children={<div>{t('confirm')} {countdownTime > 0 && countdownTime}</div>}\n                    classes={{ root: classes.backButtonStyle }}\n                    disabled={lock || isEmailSend}\n                    onClick={onSubmit}\n                    type=\"submit\"\n                  />\n                </div>\n                <div className={indexStyle.token}>\n                  <a\n                    onClick={() => setIsTokenModalOpen(true)}\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      marginTop: 10,\n                      cursor: 'pointer',\n                      color: theme.themePrimary\n                    }}\n                  >{t('tokenAuth')}</a>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        {\n          isTokenModalOpen &&\n          <TokenModal\n            isOpen={isTokenModalOpen}\n            onClose={() => setIsTokenModalOpen(false)}\n          />\n        }\n        <BaseModal\n          children={\n            <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 20 }}>\n              <PrimaryButton\n                children={t('close')}\n                onClick={() => setIsModalOpen(false)}\n              />\n            </div>\n          }\n          isCloseIcon\n          isOpen={isModalOpen}\n          onClose={() => setIsModalOpen(false)}\n          subTitle={t('browserHint')}\n          title={t('hint')}\n        />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nForgetPassword.propTypes = {\n  history: PropTypes.object\n};\n\nexport default ForgetPassword;\n"],"sourceRoot":""}